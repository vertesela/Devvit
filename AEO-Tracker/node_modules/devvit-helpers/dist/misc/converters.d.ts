/**
 * @file This file contains helper functions that convert values to other types, with a default value if the conversion fails.
 */
/**
 *
 * @param input Any value you want to convert to a number.
 * @param defaultValue The value to return if the input cannot be converted to a number.
 * @returns The input converted to a number, or the default value if the input cannot be converted to a number or is NaN.
 */
export declare function toNumberOrDefault(input: unknown, defaultValue: number): number;
/**
 *
 * @param input Any value you want to convert to a string.
 * @param defaultValue The value to return if the input cannot be converted to a number.
 * @returns The input converted to a number, or the default value if the input cannot be converted to a number or is NaN.
 */
export declare function toStringOrDefault(input: unknown, defaultValue?: string): string;
/**
 * Takes a value and returns it as a single item array of that type, or undefined if the input is undefined.
 * @param value A value, array of values, or undefined.
 * @returns The provided value as a single item array, or undefined if the input is undefined, or the input if it is already an array.
 */
export declare function valueToArrayOrUndefined<T>(value: T | T[] | undefined): T[] | undefined;
