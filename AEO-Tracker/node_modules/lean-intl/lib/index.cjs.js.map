{"version":3,"file":"index.cjs.js","sources":["../src/util.js","../src/exp.js","../src/6.locales-currencies-tz.js","../src/9.negotiation.js","../src/8.intl.js","../src/11.numberformat.js","../src/cldr.js","../src/12.datetimeformat.js","../src/13.locale-sensitive-functions.js","../src/14.pluralrules.js","../src/index.js"],"sourcesContent":["const realDefineProp = (function () {\n        let sentinel = function(){};\n        try {\n            Object.defineProperty(sentinel, 'a', {\n                get: function () {\n                    return 1;\n                }\n            });\n            Object.defineProperty(sentinel, 'prototype', { writable: false });\n            return sentinel.a === 1 && sentinel.prototype instanceof Object;\n        } catch (e) {\n            return false;\n        }\n    })();\n\n// Need a workaround for getters in ES3\nexport const es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\n// We use this a lot (and need it for proto-less objects)\nexport const hop = Object.prototype.hasOwnProperty;\n\n// Naive defineProperty for compatibility\nexport const defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {\n    if ('get' in desc && obj.__defineGetter__)\n        obj.__defineGetter__(name, desc.get);\n\n    else if (!hop.call(obj, name) || 'value' in desc)\n        obj[name] = desc.value;\n};\n\n// Array.prototype.indexOf, as good as we need it to be\nexport const arrIndexOf = Array.prototype.indexOf || function (search) {\n    /*jshint validthis:true */\n    let t = this;\n    if (!t.length)\n        return -1;\n\n    for (let i = arguments[1] || 0, max = t.length; i < max; i++) {\n        if (t[i] === search)\n            return i;\n    }\n\n    return -1;\n};\n\n// Create an object with the specified prototype (2nd arg required for Record)\nexport const objCreate = Object.create || function (proto, props) {\n    let obj;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (let k in props) {\n        if (hop.call(props, k))\n            defineProperty(obj, k, props[k]);\n    }\n\n    return obj;\n};\n\n// Snapshot some (hopefully still) native built-ins\nexport const arrSlice  = Array.prototype.slice;\nexport const arrConcat = Array.prototype.concat;\nexport const arrPush   = Array.prototype.push;\nexport const arrJoin   = Array.prototype.join;\nexport const arrShift  = Array.prototype.shift;\n\n// Naive Function.prototype.bind for compatibility\nexport const fnBind = Function.prototype.bind || function (thisObj) {\n    let fn = this,\n        args = arrSlice.call(arguments, 1);\n\n    // All our (presently) bound functions have either 1 or 0 arguments. By returning\n    // different function signatures, we can pass some tests in ES3 environments\n    if (fn.length === 1) {\n        return function () {\n            return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));\n        };\n    }\n    return function () {\n        return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));\n    };\n};\n\n// Object housing internal properties for constructors\nexport const internals = objCreate(null);\n\n// Keep internal properties internal\nexport const secret = Math.random();\n\n// Helper functions\n// ================\n\n/**\n * A function to deal with the inaccuracy of calculating log10 in pre-ES6\n * JavaScript environments. Math.log(num) / Math.LN10 was responsible for\n * causing issue #62.\n */\nexport function log10Floor (n) {\n    // ES6 provides the more accurate Math.log10\n    if (typeof Math.log10 === 'function')\n        return Math.floor(Math.log10(n));\n\n    let x = Math.round(Math.log(n) * Math.LOG10E);\n    return x - (Number('1e' + x) > n);\n}\n\n/**\n * A map that doesn't contain Object in its prototype chain\n */\nexport function Record (obj) {\n    // Copy only own properties over unless this object is already a Record instance\n    for (let k in obj) {\n        if (obj instanceof Record || hop.call(obj, k))\n            defineProperty(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });\n    }\n}\nRecord.prototype = objCreate(null);\n\n/**\n * An ordered list\n */\nexport function List() {\n    defineProperty(this, 'length', { writable:true, value: 0 });\n\n    if (arguments.length)\n        arrPush.apply(this, arrSlice.call(arguments));\n}\nList.prototype = objCreate(null);\n\n/**\n * Constructs a regular expression to restore tainted RegExp properties\n */\nexport function createRegExpRestore () {\n    if (internals.disableRegExpRestore) {\n        return function() { /* no-op */ };\n    }\n\n    let regExpCache = {\n            lastMatch: RegExp.lastMatch || '',\n            leftContext: RegExp.leftContext,\n            multiline: RegExp.multiline,\n            input: RegExp.input\n        },\n        has = false;\n\n    // Create a snapshot of all the 'captured' properties\n    for (let i = 1; i <= 9; i++)\n        has = (regExpCache['$'+i] = RegExp['$'+i]) || has;\n\n    return function() {\n        // Now we've snapshotted some properties, escape the lastMatch string\n        let esc = /[.?*+^$[\\]\\\\(){}|-]/g,\n            lastMatch = regExpCache.lastMatch.replace(esc, '\\\\$&'),\n            exprStr = '';\n\n        // If any of the captured strings were non-empty, iterate over them all\n        if (has) {\n            for (let i = 1; i <= 9; i++) {\n                let m = regExpCache['$'+i];\n\n                // If it's empty, add an empty capturing group\n                if (!m) {\n                    exprStr += '(';\n                    lastMatch = ')' + lastMatch;\n                }\n                // Else find the string in lm and escape & wrap it to capture it\n                else {\n                    m = m.replace(esc, '\\\\$&');\n                    exprStr += lastMatch.substring(0, lastMatch.indexOf(m)) + '(';\n                    lastMatch = m + ')' + lastMatch.substring(lastMatch.indexOf(m) + m.length);\n                }\n            }\n        }\n\n        exprStr += lastMatch;\n\n        // Shorten the regex by replacing each part of the expression with a match\n        // for a string of that exact length.  This is safe for the type of\n        // expressions generated above, because the expression matches the whole\n        // match string, so we know each group and each segment between capturing\n        // groups can be matched by its length alone.\n        //\n        // The purpose of the regex is to match sequences of characters other\n        // than unescaped parentheses.  This is a more complicated requirement\n        // than it seems at first glance, because it's necessary to match a\n        // parenthesis which appears immediately after a backslash (\"\\(\"), but\n        // not a parenthesis which appears immediately after an escaped backslash\n        // (\"\\\\(\").  We can't simply match [^\\\\]\\\\(, because the previous\n        // backslash could itself have a backslash preceding (and escaping) it.\n        //\n        // Any attempts to simplify this regex are encouraged!  A replacement\n        // regex should match the strings \"a\\\\\\(\\\\\\)\\\\\" and \"a\\\\\\)\\\\\\(\" in the\n        // test string \"a\\\\\\(\\\\\\)\\\\(a\\\\\\)\\\\\\()\".\n        exprStr = exprStr.replace(/((^|[^\\\\])((\\\\\\\\)*\\\\[()])+|[^()])+/g, (match) => {\n            return `[\\\\s\\\\S]{${match.replace(/\\\\(.)/g, '$1').length}}`;\n        });\n\n        // Create the regular expression that will reconstruct the RegExp properties\n        let expr = new RegExp(exprStr, regExpCache.multiline ? 'gm' : 'g');\n\n        // Set the lastIndex of the generated expression to ensure that the match\n        // is found in the correct index.\n        expr.lastIndex = regExpCache.leftContext.length;\n\n        expr.exec(regExpCache.input);\n    };\n}\n\n/**\n * Mimics ES5's abstract ToObject() function\n */\nexport function toObject (arg) {\n    if (arg === null)\n        throw new TypeError('Cannot convert null or undefined to object');\n\n    if (typeof arg === 'object')\n        return arg;\n    return Object(arg);\n}\n\nexport function toNumber (arg) {\n    if (typeof arg === 'number')\n        return arg;\n    return Number(arg);\n}\n\nexport function toInteger (arg) {\n  let number = toNumber(arg);\n  if (isNaN(number))\n      return 0;\n  if (number === +0 ||\n      number === -0 ||\n      number === +Infinity ||\n      number === -Infinity)\n      return number;\n  if (number < 0)\n      return Math.floor(Math.abs(number)) * -1;\n  return Math.floor(Math.abs(number));\n}\n\nexport function toLength (arg) {\n  let len = toInteger(arg);\n  if (len <= 0)\n      return 0;\n  if (len === Infinity)\n      return Math.pow(2, 53) - 1;\n  return Math.min(len, Math.pow(2, 53) - 1);\n}\n\n/**\n * Returns \"internal\" properties for an object\n */\nexport function getInternalProperties (obj) {\n    if (hop.call(obj, '__getInternalProperties'))\n        return obj.__getInternalProperties(secret);\n\n    return objCreate(null);\n}\n","/**\n* Defines regular expressions for various operations related to the BCP 47 syntax,\n* as defined at http://tools.ietf.org/html/bcp47#section-2.1\n*/\n\n// extlang       = 3ALPHA              ; selected ISO 639 codes\n//                 *2(\"-\" 3ALPHA)      ; permanently reserved\nconst extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}';\n\n// language      = 2*3ALPHA            ; shortest ISO 639 code\n//                 [\"-\" extlang]       ; sometimes followed by\n//                                     ; extended language subtags\n//               / 4ALPHA              ; or reserved for future use\n//               / 5*8ALPHA            ; or registered language subtag\nconst language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})';\n\n// script        = 4ALPHA              ; ISO 15924 code\nconst script = '[a-z]{4}';\n\n// region        = 2ALPHA              ; ISO 3166-1 code\n//               / 3DIGIT              ; UN M.49 code\nconst region = '(?:[a-z]{2}|\\\\d{3})';\n\n// variant       = 5*8alphanum         ; registered variants\n//               / (DIGIT 3alphanum)\nconst variant = '(?:[a-z0-9]{5,8}|\\\\d[a-z0-9]{3})';\n\n//                                     ; Single alphanumerics\n//                                     ; \"x\" reserved for private use\n// singleton     = DIGIT               ; 0 - 9\n//               / %x41-57             ; A - W\n//               / %x59-5A             ; Y - Z\n//               / %x61-77             ; a - w\n//               / %x79-7A             ; y - z\nconst singleton = '[0-9a-wy-z]';\n\n// extension     = singleton 1*(\"-\" (2*8alphanum))\nconst extension = singleton + '(?:-[a-z0-9]{2,8})+';\n\n// privateuse    = \"x\" 1*(\"-\" (1*8alphanum))\nconst privateuse = 'x(?:-[a-z0-9]{1,8})+';\n\n// irregular     = \"en-GB-oed\"         ; irregular tags do not match\n//               / \"i-ami\"             ; the 'langtag' production and\n//               / \"i-bnn\"             ; would not otherwise be\n//               / \"i-default\"         ; considered 'well-formed'\n//               / \"i-enochian\"        ; These tags are all valid,\n//               / \"i-hak\"             ; but most are deprecated\n//               / \"i-klingon\"         ; in favor of more modern\n//               / \"i-lux\"             ; subtags or subtag\n//               / \"i-mingo\"           ; combination\n//               / \"i-navajo\"\n//               / \"i-pwn\"\n//               / \"i-tao\"\n//               / \"i-tay\"\n//               / \"i-tsu\"\n//               / \"sgn-BE-FR\"\n//               / \"sgn-BE-NL\"\n//               / \"sgn-CH-DE\"\nconst irregular = '(?:en-GB-oed'\n          + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)'\n          + '|sgn-(?:BE-FR|BE-NL|CH-DE))';\n\n// regular       = \"art-lojban\"        ; these tags match the 'langtag'\n//               / \"cel-gaulish\"       ; production, but their subtags\n//               / \"no-bok\"            ; are not extended language\n//               / \"no-nyn\"            ; or variant subtags: their meaning\n//               / \"zh-guoyu\"          ; is defined by their registration\n//               / \"zh-hakka\"          ; and all of these are deprecated\n//               / \"zh-min\"            ; in favor of a more modern\n//               / \"zh-min-nan\"        ; subtag or sequence of subtags\n//               / \"zh-xiang\"\nconst regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn'\n        + '|zh-(?:guoyu|hakka|min|min-nan|xiang))';\n\n// grandfathered = irregular           ; non-redundant tags registered\n//               / regular             ; during the RFC 3066 era\nconst grandfathered = '(?:' + irregular + '|' + regular + ')';\n\n// langtag       = language\n//                 [\"-\" script]\n//                 [\"-\" region]\n//                 *(\"-\" variant)\n//                 *(\"-\" extension)\n//                 [\"-\" privateuse]\nconst langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-'\n        + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';\n\n// Language-Tag  = langtag             ; normal language tags\n//               / privateuse          ; private use tag\n//               / grandfathered       ; grandfathered tags\nexport let expBCP47Syntax = RegExp('^(?:'+langtag+'|'+privateuse+'|'+grandfathered+')$', 'i');\n\n// Match duplicate variants in a language tag\nexport let expVariantDupes = RegExp('^(?!x).*?-('+variant+')-(?:\\\\w{4,8}-(?!x-))*\\\\1\\\\b', 'i');\n\n// Match duplicate singletons in a language tag (except in private use)\nexport let expSingletonDupes = RegExp('^(?!x).*?-('+singleton+')-(?:\\\\w+-(?!x-))*\\\\1\\\\b', 'i');\n\n// Match all extension sequences\nexport let expExtSequences = RegExp('-'+extension, 'ig');\n","// Sect 6.2 Language Tags\n// ======================\n\nimport {\n    expBCP47Syntax,\n    expExtSequences,\n    expVariantDupes,\n    expSingletonDupes\n} from './exp';\n\nimport {\n    hop,\n    arrJoin,\n    arrSlice\n} from \"./util.js\";\n\n// Default locale is the first-added locale data for us\nexport let defaultLocale;\nexport function setDefaultLocale(locale) {\n    defaultLocale = locale;\n}\n\n// IANA Subtag Registry redundant tag and subtag maps\nconst redundantTags = {\n    tags: {\n        \"art-lojban\": \"jbo\",\n        \"i-ami\": \"ami\",\n        \"i-bnn\": \"bnn\",\n        \"i-hak\": \"hak\",\n        \"i-klingon\": \"tlh\",\n        \"i-lux\": \"lb\",\n        \"i-navajo\": \"nv\",\n        \"i-pwn\": \"pwn\",\n        \"i-tao\": \"tao\",\n        \"i-tay\": \"tay\",\n        \"i-tsu\": \"tsu\",\n        \"no-bok\": \"nb\",\n        \"no-nyn\": \"nn\",\n        \"sgn-BE-FR\": \"sfb\",\n        \"sgn-BE-NL\": \"vgt\",\n        \"sgn-CH-DE\": \"sgg\",\n        \"zh-guoyu\": \"cmn\",\n        \"zh-hakka\": \"hak\",\n        \"zh-min-nan\": \"nan\",\n        \"zh-xiang\": \"hsn\",\n        \"sgn-BR\": \"bzs\",\n        \"sgn-CO\": \"csn\",\n        \"sgn-DE\": \"gsg\",\n        \"sgn-DK\": \"dsl\",\n        \"sgn-ES\": \"ssp\",\n        \"sgn-FR\": \"fsl\",\n        \"sgn-GB\": \"bfi\",\n        \"sgn-GR\": \"gss\",\n        \"sgn-IE\": \"isg\",\n        \"sgn-IT\": \"ise\",\n        \"sgn-JP\": \"jsl\",\n        \"sgn-MX\": \"mfs\",\n        \"sgn-NI\": \"ncs\",\n        \"sgn-NL\": \"dse\",\n        \"sgn-NO\": \"nsl\",\n        \"sgn-PT\": \"psr\",\n        \"sgn-SE\": \"swl\",\n        \"sgn-US\": \"ase\",\n        \"sgn-ZA\": \"sfs\",\n        \"zh-cmn\": \"cmn\",\n        \"zh-cmn-Hans\": \"cmn-Hans\",\n        \"zh-cmn-Hant\": \"cmn-Hant\",\n        \"zh-gan\": \"gan\",\n        \"zh-wuu\": \"wuu\",\n        \"zh-yue\": \"yue\"\n    },\n    subtags: {\n        BU: \"MM\",\n        DD: \"DE\",\n        FX: \"FR\",\n        TP: \"TL\",\n        YD: \"YE\",\n        ZR: \"CD\",\n        heploc: \"alalc97\",\n        'in': \"id\",\n        iw: \"he\",\n        ji: \"yi\",\n        jw: \"jv\",\n        mo: \"ro\",\n        ayx: \"nun\",\n        bjd: \"drl\",\n        ccq: \"rki\",\n        cjr: \"mom\",\n        cka: \"cmr\",\n        cmk: \"xch\",\n        drh: \"khk\",\n        drw: \"prs\",\n        gav: \"dev\",\n        hrr: \"jal\",\n        ibi: \"opa\",\n        kgh: \"kml\",\n        lcq: \"ppr\",\n        mst: \"mry\",\n        myt: \"mry\",\n        sca: \"hle\",\n        tie: \"ras\",\n        tkk: \"twm\",\n        tlw: \"weo\",\n        tnf: \"prs\",\n        ybd: \"rki\",\n        yma: \"lrr\"\n    },\n    extLang: {\n        aao: [\"aao\", \"ar\"],\n        abh: [\"abh\", \"ar\"],\n        abv: [\"abv\", \"ar\"],\n        acm: [\"acm\", \"ar\"],\n        acq: [\"acq\", \"ar\"],\n        acw: [\"acw\", \"ar\"],\n        acx: [\"acx\", \"ar\"],\n        acy: [\"acy\", \"ar\"],\n        adf: [\"adf\", \"ar\"],\n        ads: [\"ads\", \"sgn\"],\n        aeb: [\"aeb\", \"ar\"],\n        aec: [\"aec\", \"ar\"],\n        aed: [\"aed\", \"sgn\"],\n        aen: [\"aen\", \"sgn\"],\n        afb: [\"afb\", \"ar\"],\n        afg: [\"afg\", \"sgn\"],\n        ajp: [\"ajp\", \"ar\"],\n        apc: [\"apc\", \"ar\"],\n        apd: [\"apd\", \"ar\"],\n        arb: [\"arb\", \"ar\"],\n        arq: [\"arq\", \"ar\"],\n        ars: [\"ars\", \"ar\"],\n        ary: [\"ary\", \"ar\"],\n        arz: [\"arz\", \"ar\"],\n        ase: [\"ase\", \"sgn\"],\n        asf: [\"asf\", \"sgn\"],\n        asp: [\"asp\", \"sgn\"],\n        asq: [\"asq\", \"sgn\"],\n        asw: [\"asw\", \"sgn\"],\n        auz: [\"auz\", \"ar\"],\n        avl: [\"avl\", \"ar\"],\n        ayh: [\"ayh\", \"ar\"],\n        ayl: [\"ayl\", \"ar\"],\n        ayn: [\"ayn\", \"ar\"],\n        ayp: [\"ayp\", \"ar\"],\n        bbz: [\"bbz\", \"ar\"],\n        bfi: [\"bfi\", \"sgn\"],\n        bfk: [\"bfk\", \"sgn\"],\n        bjn: [\"bjn\", \"ms\"],\n        bog: [\"bog\", \"sgn\"],\n        bqn: [\"bqn\", \"sgn\"],\n        bqy: [\"bqy\", \"sgn\"],\n        btj: [\"btj\", \"ms\"],\n        bve: [\"bve\", \"ms\"],\n        bvl: [\"bvl\", \"sgn\"],\n        bvu: [\"bvu\", \"ms\"],\n        bzs: [\"bzs\", \"sgn\"],\n        cdo: [\"cdo\", \"zh\"],\n        cds: [\"cds\", \"sgn\"],\n        cjy: [\"cjy\", \"zh\"],\n        cmn: [\"cmn\", \"zh\"],\n        coa: [\"coa\", \"ms\"],\n        cpx: [\"cpx\", \"zh\"],\n        csc: [\"csc\", \"sgn\"],\n        csd: [\"csd\", \"sgn\"],\n        cse: [\"cse\", \"sgn\"],\n        csf: [\"csf\", \"sgn\"],\n        csg: [\"csg\", \"sgn\"],\n        csl: [\"csl\", \"sgn\"],\n        csn: [\"csn\", \"sgn\"],\n        csq: [\"csq\", \"sgn\"],\n        csr: [\"csr\", \"sgn\"],\n        czh: [\"czh\", \"zh\"],\n        czo: [\"czo\", \"zh\"],\n        doq: [\"doq\", \"sgn\"],\n        dse: [\"dse\", \"sgn\"],\n        dsl: [\"dsl\", \"sgn\"],\n        dup: [\"dup\", \"ms\"],\n        ecs: [\"ecs\", \"sgn\"],\n        esl: [\"esl\", \"sgn\"],\n        esn: [\"esn\", \"sgn\"],\n        eso: [\"eso\", \"sgn\"],\n        eth: [\"eth\", \"sgn\"],\n        fcs: [\"fcs\", \"sgn\"],\n        fse: [\"fse\", \"sgn\"],\n        fsl: [\"fsl\", \"sgn\"],\n        fss: [\"fss\", \"sgn\"],\n        gan: [\"gan\", \"zh\"],\n        gds: [\"gds\", \"sgn\"],\n        gom: [\"gom\", \"kok\"],\n        gse: [\"gse\", \"sgn\"],\n        gsg: [\"gsg\", \"sgn\"],\n        gsm: [\"gsm\", \"sgn\"],\n        gss: [\"gss\", \"sgn\"],\n        gus: [\"gus\", \"sgn\"],\n        hab: [\"hab\", \"sgn\"],\n        haf: [\"haf\", \"sgn\"],\n        hak: [\"hak\", \"zh\"],\n        hds: [\"hds\", \"sgn\"],\n        hji: [\"hji\", \"ms\"],\n        hks: [\"hks\", \"sgn\"],\n        hos: [\"hos\", \"sgn\"],\n        hps: [\"hps\", \"sgn\"],\n        hsh: [\"hsh\", \"sgn\"],\n        hsl: [\"hsl\", \"sgn\"],\n        hsn: [\"hsn\", \"zh\"],\n        icl: [\"icl\", \"sgn\"],\n        ils: [\"ils\", \"sgn\"],\n        inl: [\"inl\", \"sgn\"],\n        ins: [\"ins\", \"sgn\"],\n        ise: [\"ise\", \"sgn\"],\n        isg: [\"isg\", \"sgn\"],\n        isr: [\"isr\", \"sgn\"],\n        jak: [\"jak\", \"ms\"],\n        jax: [\"jax\", \"ms\"],\n        jcs: [\"jcs\", \"sgn\"],\n        jhs: [\"jhs\", \"sgn\"],\n        jls: [\"jls\", \"sgn\"],\n        jos: [\"jos\", \"sgn\"],\n        jsl: [\"jsl\", \"sgn\"],\n        jus: [\"jus\", \"sgn\"],\n        kgi: [\"kgi\", \"sgn\"],\n        knn: [\"knn\", \"kok\"],\n        kvb: [\"kvb\", \"ms\"],\n        kvk: [\"kvk\", \"sgn\"],\n        kvr: [\"kvr\", \"ms\"],\n        kxd: [\"kxd\", \"ms\"],\n        lbs: [\"lbs\", \"sgn\"],\n        lce: [\"lce\", \"ms\"],\n        lcf: [\"lcf\", \"ms\"],\n        liw: [\"liw\", \"ms\"],\n        lls: [\"lls\", \"sgn\"],\n        lsg: [\"lsg\", \"sgn\"],\n        lsl: [\"lsl\", \"sgn\"],\n        lso: [\"lso\", \"sgn\"],\n        lsp: [\"lsp\", \"sgn\"],\n        lst: [\"lst\", \"sgn\"],\n        lsy: [\"lsy\", \"sgn\"],\n        ltg: [\"ltg\", \"lv\"],\n        lvs: [\"lvs\", \"lv\"],\n        lzh: [\"lzh\", \"zh\"],\n        max: [\"max\", \"ms\"],\n        mdl: [\"mdl\", \"sgn\"],\n        meo: [\"meo\", \"ms\"],\n        mfa: [\"mfa\", \"ms\"],\n        mfb: [\"mfb\", \"ms\"],\n        mfs: [\"mfs\", \"sgn\"],\n        min: [\"min\", \"ms\"],\n        mnp: [\"mnp\", \"zh\"],\n        mqg: [\"mqg\", \"ms\"],\n        mre: [\"mre\", \"sgn\"],\n        msd: [\"msd\", \"sgn\"],\n        msi: [\"msi\", \"ms\"],\n        msr: [\"msr\", \"sgn\"],\n        mui: [\"mui\", \"ms\"],\n        mzc: [\"mzc\", \"sgn\"],\n        mzg: [\"mzg\", \"sgn\"],\n        mzy: [\"mzy\", \"sgn\"],\n        nan: [\"nan\", \"zh\"],\n        nbs: [\"nbs\", \"sgn\"],\n        ncs: [\"ncs\", \"sgn\"],\n        nsi: [\"nsi\", \"sgn\"],\n        nsl: [\"nsl\", \"sgn\"],\n        nsp: [\"nsp\", \"sgn\"],\n        nsr: [\"nsr\", \"sgn\"],\n        nzs: [\"nzs\", \"sgn\"],\n        okl: [\"okl\", \"sgn\"],\n        orn: [\"orn\", \"ms\"],\n        ors: [\"ors\", \"ms\"],\n        pel: [\"pel\", \"ms\"],\n        pga: [\"pga\", \"ar\"],\n        pks: [\"pks\", \"sgn\"],\n        prl: [\"prl\", \"sgn\"],\n        prz: [\"prz\", \"sgn\"],\n        psc: [\"psc\", \"sgn\"],\n        psd: [\"psd\", \"sgn\"],\n        pse: [\"pse\", \"ms\"],\n        psg: [\"psg\", \"sgn\"],\n        psl: [\"psl\", \"sgn\"],\n        pso: [\"pso\", \"sgn\"],\n        psp: [\"psp\", \"sgn\"],\n        psr: [\"psr\", \"sgn\"],\n        pys: [\"pys\", \"sgn\"],\n        rms: [\"rms\", \"sgn\"],\n        rsi: [\"rsi\", \"sgn\"],\n        rsl: [\"rsl\", \"sgn\"],\n        sdl: [\"sdl\", \"sgn\"],\n        sfb: [\"sfb\", \"sgn\"],\n        sfs: [\"sfs\", \"sgn\"],\n        sgg: [\"sgg\", \"sgn\"],\n        sgx: [\"sgx\", \"sgn\"],\n        shu: [\"shu\", \"ar\"],\n        slf: [\"slf\", \"sgn\"],\n        sls: [\"sls\", \"sgn\"],\n        sqk: [\"sqk\", \"sgn\"],\n        sqs: [\"sqs\", \"sgn\"],\n        ssh: [\"ssh\", \"ar\"],\n        ssp: [\"ssp\", \"sgn\"],\n        ssr: [\"ssr\", \"sgn\"],\n        svk: [\"svk\", \"sgn\"],\n        swc: [\"swc\", \"sw\"],\n        swh: [\"swh\", \"sw\"],\n        swl: [\"swl\", \"sgn\"],\n        syy: [\"syy\", \"sgn\"],\n        tmw: [\"tmw\", \"ms\"],\n        tse: [\"tse\", \"sgn\"],\n        tsm: [\"tsm\", \"sgn\"],\n        tsq: [\"tsq\", \"sgn\"],\n        tss: [\"tss\", \"sgn\"],\n        tsy: [\"tsy\", \"sgn\"],\n        tza: [\"tza\", \"sgn\"],\n        ugn: [\"ugn\", \"sgn\"],\n        ugy: [\"ugy\", \"sgn\"],\n        ukl: [\"ukl\", \"sgn\"],\n        uks: [\"uks\", \"sgn\"],\n        urk: [\"urk\", \"ms\"],\n        uzn: [\"uzn\", \"uz\"],\n        uzs: [\"uzs\", \"uz\"],\n        vgt: [\"vgt\", \"sgn\"],\n        vkk: [\"vkk\", \"ms\"],\n        vkt: [\"vkt\", \"ms\"],\n        vsi: [\"vsi\", \"sgn\"],\n        vsl: [\"vsl\", \"sgn\"],\n        vsv: [\"vsv\", \"sgn\"],\n        wuu: [\"wuu\", \"zh\"],\n        xki: [\"xki\", \"sgn\"],\n        xml: [\"xml\", \"sgn\"],\n        xmm: [\"xmm\", \"ms\"],\n        xms: [\"xms\", \"sgn\"],\n        yds: [\"yds\", \"sgn\"],\n        ysl: [\"ysl\", \"sgn\"],\n        yue: [\"yue\", \"zh\"],\n        zib: [\"zib\", \"sgn\"],\n        zlm: [\"zlm\", \"ms\"],\n        zmi: [\"zmi\", \"ms\"],\n        zsl: [\"zsl\", \"sgn\"],\n        zsm: [\"zsm\", \"ms\"]\n    }\n};\n\n/**\n * Convert only a-z to uppercase as per section 6.1 of the spec\n */\nexport function toLatinUpperCase (str) {\n    let i = str.length;\n\n    while (i--) {\n        let ch = str.charAt(i);\n\n        if (ch >= \"a\" && ch <= \"z\")\n            str = str.slice(0, i) + ch.toUpperCase() + str.slice(i+1);\n    }\n\n    return str;\n}\n\n/**\n * The IsStructurallyValidLanguageTag abstract operation verifies that the locale\n * argument (which must be a String value)\n *\n * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section\n *   2.1, or successor,\n * - does not include duplicate variant subtags, and\n * - does not include duplicate singleton subtags.\n *\n * The abstract operation returns true if locale can be generated from the ABNF\n * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not\n * contain duplicate variant or singleton subtags (other than as a private use\n * subtag). It returns false otherwise. Terminal value characters in the grammar are\n * interpreted as the Unicode equivalents of the ASCII octet values given.\n */\nexport function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {\n    // represents a well-formed BCP 47 language tag as specified in RFC 5646\n    if (!expBCP47Syntax.test(locale))\n        return false;\n\n    // does not include duplicate variant subtags, and\n    if (expVariantDupes.test(locale))\n        return false;\n\n    // does not include duplicate singleton subtags.\n    if (expSingletonDupes.test(locale))\n        return false;\n\n    return true;\n}\n\n/**\n * The CanonicalizeLanguageTag abstract operation returns the canonical and case-\n * regularized form of the locale argument (which must be a String value that is\n * a structurally valid BCP 47 language tag as verified by the\n * IsStructurallyValidLanguageTag abstract operation). It takes the steps\n * specified in RFC 5646 section 4.5, or successor, to bring the language tag\n * into canonical form, and to regularize the case of the subtags, but does not\n * take the steps to bring a language tag into “extlang form” and to reorder\n * variant subtags.\n\n * The specifications for extensions to BCP 47 language tags, such as RFC 6067,\n * may include canonicalization rules for the extension subtag sequences they\n * define that go beyond the canonicalization rules of RFC 5646 section 4.5.\n * Implementations are allowed, but not required, to apply these additional rules.\n */\nexport function /* 6.2.3 */CanonicalizeLanguageTag (locale) {\n    let match, parts;\n\n    // A language tag is in 'canonical form' when the tag is well-formed\n    // according to the rules in Sections 2.1 and 2.2\n\n    // Section 2.1 says all subtags use lowercase...\n    locale = locale.toLowerCase();\n\n    // ...with 2 exceptions: 'two-letter and four-letter subtags that neither\n    // appear at the start of the tag nor occur after singletons.  Such two-letter\n    // subtags are all uppercase (as in the tags \"en-CA-x-ca\" or \"sgn-BE-FR\") and\n    // four-letter subtags are titlecase (as in the tag \"az-Latn-x-latn\").\n    parts = locale.split('-');\n    for (let i = 1, max = parts.length; i < max; i++) {\n        // Two-letter subtags are all uppercase\n        if (parts[i].length === 2)\n            parts[i] = parts[i].toUpperCase();\n\n        // Four-letter subtags are titlecase\n        else if (parts[i].length === 4)\n            parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);\n\n        // Is it a singleton?\n        else if (parts[i].length === 1 && parts[i] !== 'x')\n            break;\n    }\n    locale = arrJoin.call(parts, '-');\n\n    // The steps laid out in RFC 5646 section 4.5 are as follows:\n\n    // 1.  Extension sequences are ordered into case-insensitive ASCII order\n    //     by singleton subtag.\n    if ((match = locale.match(expExtSequences)) && match.length > 1) {\n        // The built-in sort() sorts by ASCII order, so use that\n        match.sort();\n\n        // Replace all extensions with the joined, sorted array\n        locale = locale.replace(\n            RegExp('(?:' + expExtSequences.source + ')+', 'i'),\n            arrJoin.call(match, '')\n        );\n    }\n\n    // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-\n    //     Value', if there is one.\n    if (hop.call(redundantTags.tags, locale))\n        locale = redundantTags.tags[locale];\n\n    // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.\n    //     For extlangs, the original primary language subtag is also\n    //     replaced if there is a primary language subtag in the 'Preferred-\n    //     Value'.\n    parts = locale.split('-');\n\n    for (let i = 1, max = parts.length; i < max; i++) {\n        if (hop.call(redundantTags.subtags, parts[i]))\n            parts[i] = redundantTags.subtags[parts[i]];\n\n        else if (hop.call(redundantTags.extLang, parts[i])) {\n            parts[i] = redundantTags.extLang[parts[i]][0];\n\n            // For extlang tags, the prefix needs to be removed if it is redundant\n            if (i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {\n                parts = arrSlice.call(parts, i++);\n                max -= 1;\n            }\n        }\n    }\n\n    return arrJoin.call(parts, '-');\n}\n\n/**\n * The DefaultLocale abstract operation returns a String value representing the\n * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the\n * host environment’s current locale.\n */\nexport function /* 6.2.4 */DefaultLocale () {\n    return defaultLocale;\n}\n\n// Sect 6.3 Currency Codes\n// =======================\n\nconst expCurrencyCode = /^[A-Z]{3}$/;\n\n/**\n * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument\n * (after conversion to a String value) represents a well-formed 3-letter ISO currency\n * code. The following steps are taken:\n */\nexport function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {\n    // 1. Let `c` be ToString(currency)\n    let c = String(currency);\n\n    // 2. Let `normalized` be the result of mapping c to upper case as described\n    //    in 6.1.\n    let normalized = toLatinUpperCase(c);\n\n    // 3. If the string length of normalized is not 3, return false.\n    // 4. If normalized contains any character that is not in the range \"A\" to \"Z\"\n    //    (U+0041 to U+005A), return false.\n    if (expCurrencyCode.test(normalized) === false)\n        return false;\n\n    // 5. Return true\n    return true;\n}\n","// Sect 9.2 Abstract Operations\n// ============================\n\nimport {\n    List,\n    toObject,\n    toLength,\n    arrIndexOf,\n    arrPush,\n    arrSlice,\n    Record,\n    hop,\n    defineProperty\n} from \"./util.js\";\n\nimport {\n    IsStructurallyValidLanguageTag,\n    CanonicalizeLanguageTag,\n    DefaultLocale\n} from \"./6.locales-currencies-tz.js\";\n\nconst expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi; // See `extension` below\n\nexport function /* 9.2.1 */CanonicalizeLocaleList (locales) {\n// The abstract operation CanonicalizeLocaleList takes the following steps:\n\n    // 1. If locales is undefined, then a. Return a new empty List\n    if (locales === undefined)\n        return new List();\n\n    // 2. Let seen be a new empty List.\n    let seen = new List();\n\n    // 3. If locales is a String value, then\n    //    a. Let locales be a new array created as if by the expression new\n    //    Array(locales) where Array is the standard built-in constructor with\n    //    that name and locales is the value of locales.\n    locales = typeof locales === 'string' ? [ locales ] : locales;\n\n    // 4. Let O be ToObject(locales).\n    let O = toObject(locales);\n\n    // 5. Let lenValue be the result of calling the [[Get]] internal method of\n    //    O with the argument \"length\".\n    // 6. Let len be ToUint32(lenValue).\n    let len = toLength(O.length);\n\n    // 7. Let k be 0.\n    let k = 0;\n\n    // 8. Repeat, while k < len\n    while (k < len) {\n        // a. Let Pk be ToString(k).\n        let Pk = String(k);\n\n        // b. Let kPresent be the result of calling the [[HasProperty]] internal\n        //    method of O with argument Pk.\n        let kPresent = Pk in O;\n\n        // c. If kPresent is true, then\n        if (kPresent) {\n            // i. Let kValue be the result of calling the [[Get]] internal\n            //     method of O with argument Pk.\n            let kValue = O[Pk];\n\n            // ii. If the type of kValue is not String or Object, then throw a\n            //     TypeError exception.\n            if (kValue === null || (typeof kValue !== 'string' && typeof kValue !== 'object'))\n                throw new TypeError('String or Object type expected');\n\n            // iii. Let tag be ToString(kValue).\n            let tag = String(kValue);\n\n            // iv. If the result of calling the abstract operation\n            //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as\n            //     the argument, is false, then throw a RangeError exception.\n            if (!IsStructurallyValidLanguageTag(tag))\n                throw new RangeError(\"'\" + tag + \"' is not a structurally valid language tag\");\n\n            // v. Let tag be the result of calling the abstract operation\n            //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the\n            //    argument.\n            tag = CanonicalizeLanguageTag(tag);\n\n            // vi. If tag is not an element of seen, then append tag as the last\n            //     element of seen.\n            if (arrIndexOf.call(seen, tag) === -1)\n                arrPush.call(seen, tag);\n        }\n\n        // d. Increase k by 1.\n        k++;\n    }\n\n    // 9. Return seen.\n    return seen;\n}\n\n/**\n * The BestAvailableLocale abstract operation compares the provided argument\n * locale, which must be a String value with a structurally valid and\n * canonicalized BCP 47 language tag, against the locales in availableLocales and\n * returns either the longest non-empty prefix of locale that is an element of\n * availableLocales, or undefined if there is no such element. It uses the\n * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:\n */\nexport function /* 9.2.2 */BestAvailableLocale (availableLocales, locale) {\n    // 1. Let candidate be locale\n    let candidate = locale;\n\n    // 2. Repeat\n    while (candidate) {\n        // a. If availableLocales contains an element equal to candidate, then return\n        // candidate.\n        if (arrIndexOf.call(availableLocales, candidate) > -1)\n            return candidate;\n\n        // b. Let pos be the character index of the last occurrence of \"-\"\n        // (U+002D) within candidate. If that character does not occur, return\n        // undefined.\n        let pos = candidate.lastIndexOf('-');\n\n        if (pos < 0)\n            return;\n\n        // c. If pos ≥ 2 and the character \"-\" occurs at index pos-2 of candidate,\n        //    then decrease pos by 2.\n        if (pos >= 2 && candidate.charAt(pos - 2) === '-')\n            pos -= 2;\n\n        // d. Let candidate be the substring of candidate from position 0, inclusive,\n        //    to position pos, exclusive.\n        candidate = candidate.substring(0, pos);\n    }\n}\n\n/**\n * The LookupMatcher abstract operation compares requestedLocales, which must be\n * a List as returned by CanonicalizeLocaleList, against the locales in\n * availableLocales and determines the best available language to meet the\n * request. The following steps are taken:\n */\nexport function /* 9.2.3 */LookupMatcher (availableLocales, requestedLocales) {\n    // 1. Let i be 0.\n    let i = 0;\n\n    // 2. Let len be the number of elements in requestedLocales.\n    let len = requestedLocales.length;\n\n    // 3. Let availableLocale be undefined.\n    let availableLocale;\n\n    let locale, noExtensionsLocale;\n\n    // 4. Repeat while i < len and availableLocale is undefined:\n    while (i < len && !availableLocale) {\n        // a. Let locale be the element of requestedLocales at 0-origined list\n        //    position i.\n        locale = requestedLocales[i];\n\n        // b. Let noExtensionsLocale be the String value that is locale with all\n        //    Unicode locale extension sequences removed.\n        noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');\n\n        // c. Let availableLocale be the result of calling the\n        //    BestAvailableLocale abstract operation (defined in 9.2.2) with\n        //    arguments availableLocales and noExtensionsLocale.\n        availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);\n\n        // d. Increase i by 1.\n        i++;\n    }\n\n    // 5. Let result be a new Record.\n    let result = new Record();\n\n    // 6. If availableLocale is not undefined, then\n    if (availableLocale !== undefined) {\n        // a. Set result.[[locale]] to availableLocale.\n        result['[[locale]]'] = availableLocale;\n\n        // b. If locale and noExtensionsLocale are not the same String value, then\n        if (String(locale) !== String(noExtensionsLocale)) {\n            // i. Let extension be the String value consisting of the first\n            //    substring of locale that is a Unicode locale extension sequence.\n            let extension = locale.match(expUnicodeExSeq)[0];\n\n            // ii. Let extensionIndex be the character position of the initial\n            //     \"-\" of the first Unicode locale extension sequence within locale.\n            let extensionIndex = locale.indexOf('-u-');\n\n            // iii. Set result.[[extension]] to extension.\n            result['[[extension]]'] = extension;\n\n            // iv. Set result.[[extensionIndex]] to extensionIndex.\n            result['[[extensionIndex]]'] = extensionIndex;\n        }\n    }\n    // 7. Else\n    else\n        // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract\n        //    operation (defined in 6.2.4).\n        result['[[locale]]'] = DefaultLocale();\n\n    // 8. Return result\n    return result;\n}\n\n/**\n * The BestFitMatcher abstract operation compares requestedLocales, which must be\n * a List as returned by CanonicalizeLocaleList, against the locales in\n * availableLocales and determines the best available language to meet the\n * request. The algorithm is implementation dependent, but should produce results\n * that a typical user of the requested locales would perceive as at least as\n * good as those produced by the LookupMatcher abstract operation. Options\n * specified through Unicode locale extension sequences must be ignored by the\n * algorithm. Information about such subsequences is returned separately.\n * The abstract operation returns a record with a [[locale]] field, whose value\n * is the language tag of the selected locale, which must be an element of\n * availableLocales. If the language tag of the request locale that led to the\n * selected locale contained a Unicode locale extension sequence, then the\n * returned record also contains an [[extension]] field whose value is the first\n * Unicode locale extension sequence, and an [[extensionIndex]] field whose value\n * is the index of the first Unicode locale extension sequence within the request\n * locale language tag.\n */\nexport function /* 9.2.4 */BestFitMatcher (availableLocales, requestedLocales) {\n    return LookupMatcher(availableLocales, requestedLocales);\n}\n\n// @spec[tc39/ecma402/master/spec/negotiation.html]\n// @clause[sec-unicodeextensionsubtags]\nexport function UnicodeExtensionSubtags(extension) {\n    // 1. Let size be the number of elements in extension.\n    let size = extension.length;\n    // 2. If size = 0, then\n    if (size === 0) {\n        // a. Return « ».\n        return [];\n    }\n    // 3. Let extensionSubtags be « ».\n    let extensionSubtags = [];\n    // 4. Let attribute be true.\n    let attribute = true;\n    // 5. Let q be 3.\n    let q = 3;\n    // 6. Let p be q.\n    let p = q;\n    // 7. Let t be q.\n    let t = q;\n    // 8. Repeat, while q < size\n    while (q < size) {\n        // a. Let c be the code unit value of the element at index q in the String extension.\n        let c = extension.codePointAt(q);\n        // a. If c is 0x002D (HYPHEN-MINUS), then\n        if (c === 0x002D) {\n            // i. If q - p = 2, then\n            if (q - p === 2) {\n                // 1. If p - t > 1, then\n                if (p - t > 1) {\n                    // a. Let type be a String value equal to the substring of extension consisting of the code units at indices t (inclusive) through p - 1 (exclusive).\n                    let type = extension.substring(t, p - 1);\n                    // a. Append type as the last element of extensionSubtags.\n                    extensionSubtags.push(type);\n                }\n                // 2. Let key be a String value equal to the substring of extension consisting of the code units at indices p (inclusive) through q (exclusive).\n                let key = extension.substring(p, q);\n                // 3. Append key as the last element of extensionSubtags.\n                extensionSubtags.push(key);\n                // 4. Let t be q + 1.\n                t = q + 1;\n                // 5. Let attribute be false.\n                attribute = false;\n            // ii. Else if attribute is true, then\n            } else if (attribute === true) {\n                // 1. Let attr be a String value equal to the substring of extension consisting of the code units at indices p (inclusive) through q (exclusive).\n                let attr = extension.substring(p, q);\n                // 2. Append attr as the last element of extensionSubtags.\n                extensionSubtags.push(attr);\n                // 3. Let t be q + 1.\n                t = q + 1;\n            }\n            // iii. Let p be q + 1.\n            p = q + 1;\n        }\n        // a. Let q be q + 1.\n        q = q + 1;\n    }\n    // 9. If size - p = 2, then\n    if (size - p === 2) {\n        // a. If p - t > 1, then\n        if (p - t > 1) {\n            // i. Let type be a String value equal to the substring of extension consisting of the code units at indices t (inclusive) through p - 1 (exclusive).\n            let type = extension.substring(t, p - 1);\n            // ii. Append type as the last element of extensionSubtags.\n            extensionSubtags.push(type);\n        }\n        // a. Let t be p.\n        t = p;\n    }\n    // 10. Let tail be a String value equal to the substring of extension consisting of the code units at indices t (inclusive) through size (exclusive).\n    let tail = extension.substring(t, size);\n    // 11. Append tail as the last element of extensionSubtags.\n    extensionSubtags.push(tail);\n    // 12. Return extensionSubtags.\n    return extensionSubtags;\n}\n\n/**\n * The ResolveLocale abstract operation compares a BCP 47 language priority list\n * requestedLocales against the locales in availableLocales and determines the\n * best available language to meet the request. availableLocales and\n * requestedLocales must be provided as List values, options as a Record.\n */\nexport function /* 9.2.5 */ResolveLocale (availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {\n    if (availableLocales.length === 0) {\n        throw new ReferenceError('No locale data has been provided for this object yet.');\n    }\n\n    // The following steps are taken:\n    // 1. Let matcher be the value of options.[[localeMatcher]].\n    let matcher = options['[[localeMatcher]]'];\n\n    let r;\n\n    // 2. If matcher is \"lookup\", then\n    if (matcher === 'lookup')\n        // a. Let r be the result of calling the LookupMatcher abstract operation\n        //    (defined in 9.2.3) with arguments availableLocales and\n        //    requestedLocales.\n        r = LookupMatcher(availableLocales, requestedLocales);\n\n    // 3. Else\n    else\n        // a. Let r be the result of calling the BestFitMatcher abstract\n        //    operation (defined in 9.2.4) with arguments availableLocales and\n        //    requestedLocales.\n        r = BestFitMatcher(availableLocales, requestedLocales);\n\n    // 4. Let foundLocale be the value of r.[[locale]].\n    let foundLocale = r['[[locale]]'];\n\n    let extensionSubtags, extensionSubtagsLength;\n\n    // 5. If r has an [[extension]] field, then\n    if (hop.call(r, '[[extension]]')) {\n        // a. Let extension be the value of r.[[extension]].\n        let extension = r['[[extension]]'];\n        // b. Let _extensionSubtags_ be\n        // CreateArrayFromList(UnicodeExtensionSubtags(_extension_)).\n        extensionSubtags = UnicodeExtensionSubtags(extension);\n        // c. Let _extensionSubtagsLength_ be Get(_extensionSubtags_, *\"length\"*)\n        extensionSubtagsLength = extensionSubtags.length;\n    }\n\n    // 6. Let result be a new Record.\n    let result = new Record();\n\n    // 7. Set result.[[dataLocale]] to foundLocale.\n    result['[[dataLocale]]'] = foundLocale;\n\n    // 8. Let supportedExtension be \"-u\".\n    let supportedExtension = '-u';\n    // 9. Let i be 0.\n    let i = 0;\n    // 10. Let len be the result of calling the [[Get]] internal method of\n    //     relevantExtensionKeys with argument \"length\".\n    let len = relevantExtensionKeys.length;\n\n    // 11 Repeat while i < len:\n    while (i < len) {\n        // a. Let key be the result of calling the [[Get]] internal method of\n        //    relevantExtensionKeys with argument ToString(i).\n        let key = relevantExtensionKeys[i];\n        // b. Let foundLocaleData be the result of calling the [[Get]] internal\n        //    method of localeData with the argument foundLocale.\n        let foundLocaleData = localeData[foundLocale];\n        // c. Let keyLocaleData be the result of calling the [[Get]] internal\n        //    method of foundLocaleData with the argument key.\n        let keyLocaleData = foundLocaleData[key];\n        // d. Let value be the result of calling the [[Get]] internal method of\n        //    keyLocaleData with argument \"0\".\n        let value = keyLocaleData['0'];\n        // e. Let supportedExtensionAddition be \"\".\n        let supportedExtensionAddition = '';\n        // f. Let indexOf be the standard built-in function object defined in\n        //    ES5, 15.4.4.14.\n        let indexOf = arrIndexOf;\n\n        // g. If extensionSubtags is not undefined, then\n        if (extensionSubtags !== undefined) {\n            // i. Let keyPos be the result of calling the [[Call]] internal\n            //    method of indexOf with extensionSubtags as the this value and\n            // an argument list containing the single item key.\n            let keyPos = indexOf.call(extensionSubtags, key);\n\n            // ii. If keyPos ≠ -1, then\n            if (keyPos !== -1) {\n                // 1. If keyPos + 1 < extensionSubtagsLength and the length of the\n                //    result of calling the [[Get]] internal method of\n                //    extensionSubtags with argument ToString(keyPos +1) is greater\n                //    than 2, then\n                if (keyPos + 1 < extensionSubtagsLength\n                        && extensionSubtags[keyPos + 1].length > 2) {\n                    // a. Let requestedValue be the result of calling the [[Get]]\n                    //    internal method of extensionSubtags with argument\n                    //    ToString(keyPos + 1).\n                    let requestedValue = extensionSubtags[keyPos + 1];\n                    // b. Let valuePos be the result of calling the [[Call]]\n                    //    internal method of indexOf with keyLocaleData as the\n                    //    this value and an argument list containing the single\n                    //    item requestedValue.\n                    let valuePos = indexOf.call(keyLocaleData, requestedValue);\n\n                    // c. If valuePos ≠ -1, then\n                    if (valuePos !== -1) {\n                        // i. Let value be requestedValue.\n                        value = requestedValue,\n                        // ii. Let supportedExtensionAddition be the\n                        //     concatenation of \"-\", key, \"-\", and value.\n                        supportedExtensionAddition = '-' + key + '-' + value;\n                    }\n                }\n                // 2. Else\n                else {\n                    // a. Let valuePos be the result of calling the [[Call]]\n                    // internal method of indexOf with keyLocaleData as the this\n                    // value and an argument list containing the single item\n                    // \"true\".\n                    let valuePos = indexOf(keyLocaleData, 'true');\n\n                    // b. If valuePos ≠ -1, then\n                    if (valuePos !== -1)\n                        // i. Let value be \"true\".\n                        value = 'true';\n                }\n            }\n        }\n        // h. If options has a field [[<key>]], then\n        if (hop.call(options, '[[' + key + ']]')) {\n            // i. Let optionsValue be the value of options.[[<key>]].\n            let optionsValue = options['[[' + key + ']]'];\n\n            // ii. If the result of calling the [[Call]] internal method of indexOf\n            //     with keyLocaleData as the this value and an argument list\n            //     containing the single item optionsValue is not -1, then\n            if (indexOf.call(keyLocaleData, optionsValue) !== -1) {\n                // 1. If optionsValue is not equal to value, then\n                if (optionsValue !== value) {\n                    // a. Let value be optionsValue.\n                    value = optionsValue;\n                    // b. Let supportedExtensionAddition be \"\".\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        // i. Set result.[[<key>]] to value.\n        result['[[' + key + ']]'] = value;\n\n        // j. Append supportedExtensionAddition to supportedExtension.\n        supportedExtension += supportedExtensionAddition;\n\n        // k. Increase i by 1.\n        i++;\n    }\n    // 12. If the length of supportedExtension is greater than 2, then\n    if (supportedExtension.length > 2) {\n        // a.\n        let privateIndex = foundLocale.indexOf(\"-x-\");\n        // b.\n        if (privateIndex === -1) {\n            // i.\n            foundLocale = foundLocale + supportedExtension;\n        }\n        // c.\n        else {\n            // i.\n            let preExtension = foundLocale.substring(0, privateIndex);\n            // ii.\n            let postExtension = foundLocale.substring(privateIndex);\n            // iii.\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        // d. asserting - skipping\n        // e.\n        foundLocale = CanonicalizeLanguageTag(foundLocale);\n    }\n    // 13. Set result.[[locale]] to foundLocale.\n    result['[[locale]]'] = foundLocale;\n\n    // 14. Return result.\n    return result;\n}\n\n/**\n * The LookupSupportedLocales abstract operation returns the subset of the\n * provided BCP 47 language priority list requestedLocales for which\n * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.\n * Locales appear in the same order in the returned list as in requestedLocales.\n * The following steps are taken:\n */\nexport function /* 9.2.6 */LookupSupportedLocales (availableLocales, requestedLocales) {\n    // 1. Let len be the number of elements in requestedLocales.\n    let len = requestedLocales.length;\n    // 2. Let subset be a new empty List.\n    let subset = new List();\n    // 3. Let k be 0.\n    let k = 0;\n\n    // 4. Repeat while k < len\n    while (k < len) {\n        // a. Let locale be the element of requestedLocales at 0-origined list\n        //    position k.\n        let locale = requestedLocales[k];\n        // b. Let noExtensionsLocale be the String value that is locale with all\n        //    Unicode locale extension sequences removed.\n        let noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');\n        // c. Let availableLocale be the result of calling the\n        //    BestAvailableLocale abstract operation (defined in 9.2.2) with\n        //    arguments availableLocales and noExtensionsLocale.\n        let availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);\n\n        // d. If availableLocale is not undefined, then append locale to the end of\n        //    subset.\n        if (availableLocale !== undefined)\n            arrPush.call(subset, locale);\n\n        // e. Increment k by 1.\n        k++;\n    }\n\n    // 5. Let subsetArray be a new Array object whose elements are the same\n    //    values in the same order as the elements of subset.\n    let subsetArray = arrSlice.call(subset);\n\n    // 6. Return subsetArray.\n    return subsetArray;\n}\n\n/**\n * The BestFitSupportedLocales abstract operation returns the subset of the\n * provided BCP 47 language priority list requestedLocales for which\n * availableLocales has a matching locale when using the Best Fit Matcher\n * algorithm. Locales appear in the same order in the returned list as in\n * requestedLocales. The steps taken are implementation dependent.\n */\nexport function /*9.2.7 */BestFitSupportedLocales (availableLocales, requestedLocales) {\n    // ###TODO: implement this function as described by the specification###\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n}\n\n/**\n * The SupportedLocales abstract operation returns the subset of the provided BCP\n * 47 language priority list requestedLocales for which availableLocales has a\n * matching locale. Two algorithms are available to match the locales: the Lookup\n * algorithm described in RFC 4647 section 3.4, and an implementation dependent\n * best-fit algorithm. Locales appear in the same order in the returned list as\n * in requestedLocales. The following steps are taken:\n */\nexport function /*9.2.8 */SupportedLocales (availableLocales, requestedLocales, options) {\n    let matcher, subset;\n\n    // 1. If options is not undefined, then\n    if (options !== undefined) {\n        // a. Let options be ToObject(options).\n        options = new Record(toObject(options));\n        // b. Let matcher be the result of calling the [[Get]] internal method of\n        //    options with argument \"localeMatcher\".\n        matcher = options.localeMatcher;\n\n        // c. If matcher is not undefined, then\n        if (matcher !== undefined) {\n            // i. Let matcher be ToString(matcher).\n            matcher = String(matcher);\n\n            // ii. If matcher is not \"lookup\" or \"best fit\", then throw a RangeError\n            //     exception.\n            if (matcher !== 'lookup' && matcher !== 'best fit')\n                throw new RangeError('matcher should be \"lookup\" or \"best fit\"');\n        }\n    }\n    // 2. If matcher is undefined or \"best fit\", then\n    if (matcher === undefined || matcher === 'best fit')\n        // a. Let subset be the result of calling the BestFitSupportedLocales\n        //    abstract operation (defined in 9.2.7) with arguments\n        //    availableLocales and requestedLocales.\n        subset = BestFitSupportedLocales(availableLocales, requestedLocales);\n    // 3. Else\n    else\n        // a. Let subset be the result of calling the LookupSupportedLocales\n        //    abstract operation (defined in 9.2.6) with arguments\n        //    availableLocales and requestedLocales.\n        subset = LookupSupportedLocales(availableLocales, requestedLocales);\n\n    // 4. For each named own property name P of subset,\n    for (let P in subset) {\n        if (!hop.call(subset, P))\n            continue;\n\n        // a. Let desc be the result of calling the [[GetOwnProperty]] internal\n        //    method of subset with P.\n        // b. Set desc.[[Writable]] to false.\n        // c. Set desc.[[Configurable]] to false.\n        // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,\n        //    and true as arguments.\n        defineProperty(subset, P, {\n            writable: false, configurable: false, value: subset[P]\n        });\n    }\n    try{\n        // \"Freeze\" the array so no new elements can be added\n        defineProperty(subset, 'length', { writable: false });\n    } catch(ex) {}\n\n    // 5. Return subset\n    return subset;\n}\n\n/**\n * The GetOption abstract operation extracts the value of the property named\n * property from the provided options object, converts it to the required type,\n * checks whether it is one of a List of allowed values, and fills in a fallback\n * value if necessary.\n */\nexport function /*9.2.9 */GetOption (options, property, type, values, fallback) {\n    // 1. Let value be the result of calling the [[Get]] internal method of\n    //    options with argument property.\n    let value = options[property];\n\n    // 2. If value is not undefined, then\n    if (value !== undefined) {\n        // a. Assert: type is \"boolean\" or \"string\".\n        // b. If type is \"boolean\", then let value be ToBoolean(value).\n        // c. If type is \"string\", then let value be ToString(value).\n        value = type === 'boolean' ? Boolean(value)\n                  : (type === 'string' ? String(value) : value);\n\n        // d. If values is not undefined, then\n        if (values !== undefined) {\n            // i. If values does not contain an element equal to value, then throw a\n            //    RangeError exception.\n            if (arrIndexOf.call(values, value) === -1)\n                throw new RangeError(\"'\" + value + \"' is not an allowed value for `\" + property +'`');\n        }\n\n        // e. Return value.\n        return value;\n    }\n    // Else return fallback.\n    return fallback;\n}\n\n/**\n * The GetNumberOption abstract operation extracts a property value from the\n * provided options object, converts it to a Number value, checks whether it is\n * in the allowed range, and fills in a fallback value if necessary.\n */\nexport function /* 9.2.10 */GetNumberOption (options, property, minimum, maximum, fallback) {\n    // 1. Let value be the result of calling the [[Get]] internal method of\n    //    options with argument property.\n    let value = options[property];\n\n    // 2. If value is not undefined, then\n    if (value !== undefined) {\n        // a. Let value be ToNumber(value).\n        value = Number(value);\n\n        // b. If value is NaN or less than minimum or greater than maximum, throw a\n        //    RangeError exception.\n        if (isNaN(value) || value < minimum || value > maximum)\n            throw new RangeError('Value is not a number or outside accepted range');\n\n        // c. Return floor(value).\n        return Math.floor(value);\n    }\n    // 3. Else return fallback.\n    return fallback;\n}\n","import {\n    CanonicalizeLocaleList\n} from \"./9.negotiation.js\";\n\n// 8 The Intl Object\nexport const Intl = {};\n\n// 8.2 Function Properties of the Intl Object\n\n// 8.2.1\n// @spec[tc39/ecma402/master/spec/intl.html]\n// @clause[sec-intl.getcanonicallocales]\nfunction getCanonicalLocales (locales) {\n    // 1. Let ll be ? CanonicalizeLocaleList(locales).\n    let ll = CanonicalizeLocaleList(locales);\n    // 2. Return CreateArrayFromList(ll).\n    {\n        let result = [];\n\n        let len = ll.length;\n        let k = 0;\n\n        while (k < len) {\n            result[k] = ll[k];\n            k++;\n        }\n        return result;\n    }\n}\n\nObject.defineProperty(Intl, 'getCanonicalLocales', {\n  enumerable: false,\n  configurable: true,\n  writable: true,\n  value: getCanonicalLocales\n});\n","// 11.1 The Intl.NumberFormat constructor\n// ======================================\n\nimport {\n    IsWellFormedCurrencyCode\n} from \"./6.locales-currencies-tz.js\";\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    CanonicalizeLocaleList,\n    SupportedLocales,\n    ResolveLocale,\n    GetNumberOption,\n    GetOption\n} from \"./9.negotiation.js\";\n\nimport {\n    internals,\n    log10Floor,\n    List,\n    toObject,\n    arrPush,\n    arrJoin,\n    arrShift,\n    Record,\n    hop,\n    defineProperty,\n    es3,\n    fnBind,\n    getInternalProperties,\n    createRegExpRestore,\n    secret,\n    objCreate\n} from \"./util.js\";\n\n// Currency minor units output from get-4217 grunt task, formatted\nconst currencyMinorUnits = {\n    BHD: 3, BYR: 0, XOF: 0, BIF: 0, XAF: 0, CLF: 4, CLP: 0, KMF: 0, DJF: 0,\n    XPF: 0, GNF: 0, ISK: 0, IQD: 3, JPY: 0, JOD: 3, KRW: 0, KWD: 3, LYD: 3,\n    OMR: 3, PYG: 0, RWF: 0, TND: 3, UGX: 0, UYI: 0, VUV: 0, VND: 0\n};\n\n// Define the NumberFormat constructor internally so it cannot be tainted\nexport function NumberFormatConstructor () {\n    let locales = arguments[0];\n    let options = arguments[1];\n\n    if (!this || this === Intl) {\n        return new Intl.NumberFormat(locales, options);\n    }\n\n    return InitializeNumberFormat(toObject(this), locales, options);\n}\n\ndefineProperty(Intl, 'NumberFormat', {\n    configurable: true,\n    writable: true,\n    value: NumberFormatConstructor\n});\n\n// Must explicitly set prototypes as unwritable\ndefineProperty(Intl.NumberFormat, 'prototype', {\n    writable: false\n});\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-setnumberformatdigitoptions]\n */\nexport function /*11.1.1 */SetNumberFormatDigitOptions (intlObj, options, mnfdDefault) {\n    // 1. Assert: Type(intlObj) is Object and intlObj.[[initializedIntlObject]] is true.\n\n    // 2. Assert: Type(options) is Object.\n\n    // 3. Assert: type(mnfdDefault) is Number.\n\n    // 4. Let mnid be ? GetNumberOption(options, \"minimumIntegerDigits,\", 1, 21, 1).\n    let mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);\n\n    // 5. Let mnfd be ? GetNumberOption(options, \"minimumFractionDigits\", 0, 20, mnfdDefault).\n    let mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);\n\n    // 6. Let mxfd be ? GetNumberOption(options, \"maximumFractionDigits\", mnfd, 20).\n    let mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20);\n\n    // 7. Let mnsd be ? Get(options, \"minimumSignificantDigits\").\n    let mnsd = options.minimumSignificantDigits;\n\n    // 8. Let mxsd be ? Get(options, \"maximumSignificantDigits\").\n    let mxsd = options.maximumSignificantDigits;\n\n    // 9. Set intlObj.[[minimumIntegerDigits]] to mnid.\n    intlObj['[[minimumIntegerDigits]]'] = mnid;\n\n    // 10. Set intlObj.[[minimumFractionDigits]] to mnfd.\n    intlObj['[[minimumFractionDigits]]'] = mnfd;\n\n    // 11. Set intlObj.[[maximumFractionDigits]] to mxfd.\n    intlObj['[[maximumFractionDigits]]'] = mxfd;\n\n    // 12. If mnsd is not undefined or mxsd is not undefined, then\n    if (mnsd !== undefined || mxsd !== undefined) {\n        // a. Let mnsd be ? GetNumberOption(options, \"minimumSignificantDigits\", 1, 21, 1).\n        mnsd = GetNumberOption(options, \"minimumSignificantDigits\", 1, 21, 1);\n\n        // b. Let mxsd be ? GetNumberOption(options, \"maximumSignificantDigits\", mnsd, 21, 21).\n        mxsd = GetNumberOption(options, \"maximumSignificantDigits\", mnsd, 21, 21);\n\n        // c. Set intlObj.[[minimumSignificantDigits]] to mnsd.\n        intlObj['[[minimumSignificantDigits]]'] = mnsd;\n\n        // d. Set intlObj.[[maximumSignificantDigits]] to mxsd.\n        intlObj['[[maximumSignificantDigits]]'] = mxsd;\n    }\n\n}\n\n/**\n * The abstract operation InitializeNumberFormat accepts the arguments\n * numberFormat (which must be an object), locales, and options. It initializes\n * numberFormat as a NumberFormat object.\n */\nexport function /*11.1.2 */InitializeNumberFormat (numberFormat, locales, options) {\n    // This will be a internal properties object if we're not already initialized\n    let internal = getInternalProperties(numberFormat);\n\n    // Create an object whose props can be used to restore the values of RegExp props\n    let regexpRestore = createRegExpRestore();\n\n    // 1. If numberFormat has an [[initializedIntlObject]] internal property with\n    // value true, throw a TypeError exception.\n    if (internal['[[initializedIntlObject]]'] === true)\n        throw new TypeError('`this` object has already been initialized as an Intl object');\n\n    // Need this to access the `internal` object\n    defineProperty(numberFormat, '__getInternalProperties', {\n        value: function () {\n            // NOTE: Non-standard, for internal use only\n            if (arguments[0] === secret)\n                return internal;\n        }\n    });\n\n    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.\n    internal['[[initializedIntlObject]]'] = true;\n\n    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n    //    abstract operation (defined in 9.2.1) with argument locales.\n    let requestedLocales = CanonicalizeLocaleList(locales);\n\n    // 4. If options is undefined, then\n    if (options === undefined)\n        // a. Let options be the result of creating a new object as if by the\n        // expression new Object() where Object is the standard built-in constructor\n        // with that name.\n        options = {};\n\n    // 5. Else\n    else\n        // a. Let options be ToObject(options).\n        options = toObject(options);\n\n    // 6. Let opt be a new Record.\n    let opt = new Record(),\n\n    // 7. Let matcher be the result of calling the GetOption abstract operation\n    //    (defined in 9.2.9) with the arguments options, \"localeMatcher\", \"string\",\n    //    a List containing the two String values \"lookup\" and \"best fit\", and\n    //    \"best fit\".\n        matcher =  GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');\n\n    // 8. Set opt.[[localeMatcher]] to matcher.\n    opt['[[localeMatcher]]'] = matcher;\n\n    // 9. Let localeData be the value of the [[localeData]] internal property of\n    //     NumberFormat.\n    let localeData = internals.NumberFormat['[[localeData]]'];\n\n    // 10. Let r be the result of calling the ResolveLocale abstract operation\n    //     (defined in 9.2.5) with the [[availableLocales]] internal property of\n    //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]\n    //     internal property of NumberFormat, and localeData.\n    let r = ResolveLocale(\n            internals.NumberFormat['[[availableLocales]]'], requestedLocales,\n            opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData\n        );\n\n    // 11. Set the [[locale]] internal property of numberFormat to the value of\n    //     r.[[locale]].\n    internal['[[locale]]'] = r['[[locale]]'];\n\n    // 12. Set the [[numberingSystem]] internal property of numberFormat to the value\n    //     of r.[[nu]].\n    internal['[[numberingSystem]]'] = r['[[nu]]'];\n\n    // The specification doesn't tell us to do this, but it's helpful later on\n    internal['[[dataLocale]]'] = r['[[dataLocale]]'];\n\n    // 13. Let dataLocale be the value of r.[[dataLocale]].\n    let dataLocale = r['[[dataLocale]]'];\n\n    // 14. Let s be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"style\", \"string\", a List containing the three String\n    //     values \"decimal\", \"percent\", and \"currency\", and \"decimal\".\n    let s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');\n\n    // 15. Set the [[style]] internal property of numberFormat to s.\n    internal['[[style]]'] = s;\n\n    // 16. Let c be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"currency\", \"string\", undefined, and undefined.\n    let c = GetOption(options, 'currency', 'string');\n\n    // 17. If c is not undefined and the result of calling the\n    //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with\n    //     argument c is false, then throw a RangeError exception.\n    if (c !== undefined && !IsWellFormedCurrencyCode(c))\n        throw new RangeError(\"'\" + c + \"' is not a valid currency code\");\n\n    // 18. If s is \"currency\" and c is undefined, throw a TypeError exception.\n    if (s === 'currency' && c === undefined)\n        throw new TypeError('Currency code is required when style is currency');\n\n    let cDigits;\n\n    // 19. If s is \"currency\", then\n    if (s === 'currency') {\n        // a. Let c be the result of converting c to upper case as specified in 6.1.\n        c = c.toUpperCase();\n\n        // b. Set the [[currency]] internal property of numberFormat to c.\n        internal['[[currency]]'] = c;\n\n        // c. Let cDigits be the result of calling the CurrencyDigits abstract\n        //    operation (defined below) with argument c.\n        cDigits = CurrencyDigits(c);\n    }\n\n    // 20. Let cd be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"currencyDisplay\", \"string\", a List containing the\n    //     three String values \"code\", \"symbol\", and \"name\", and \"symbol\".\n    let cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');\n\n    // 21. If s is \"currency\", then set the [[currencyDisplay]] internal property of\n    //     numberFormat to cd.\n    if (s === 'currency')\n        internal['[[currencyDisplay]]'] = cd;\n\n    // 22. If s is \"currency\", then\n    //     a. Let mnfdDefault be cDigits.\n    // 23. Else,\n    //     a. Let mnfdDefault be 0.\n    let mnfdDefault = s === \"currency\" ? cDigits : 0;\n\n    // 24. Perform ? SetNumberFormatDigitOptions(numberFormat, options, mnfdDefault).\n    SetNumberFormatDigitOptions(internal, options, mnfdDefault);\n\n    // 25. If numberFormat.[[maximumFractionDigits]] is undefined, then\n    if (internal['[[maximumFractionDigits]]'] === undefined) {\n        // a. If s is \"currency\", then\n        if (s === 'currency') {\n            // i. Set numberFormat.[[maximumFractionDigits]] to max(numberFormat.[[minimumFractionDigits]], cDigits).\n            internal['[[maximumFractionDigits]]'] = Math.max(internal['[[minimumFractionDigits]]'], cDigits);\n        // b. Else if s is \"percent\", then\n        } else if (s === 'percent') {\n            // i. Set numberFormat.[[maximumFractionDigits]] to max(numberFormat.[[minimumFractionDigits]], 0).\n            internal['[[maximumFractionDigits]]'] = Math.max(internal['[[minimumFractionDigits]]'], 0);\n        // c. Else,\n        } else {\n            // i. Set numberFormat.[[maximumFractionDigits]] to max(numberFormat.[[minimumFractionDigits]], 3).\n            internal['[[maximumFractionDigits]]'] = Math.max(internal['[[minimumFractionDigits]]'], 3);\n        }\n    }\n\n    // 26. Let g be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"useGrouping\", \"boolean\", undefined, and true.\n    let g = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n\n    // 27. Set the [[useGrouping]] internal property of numberFormat to g.\n    internal['[[useGrouping]]'] = g;\n\n    // 28. Let dataLocaleData be the result of calling the [[Get]] internal method of\n    //     localeData with argument dataLocale.\n    let dataLocaleData = localeData[dataLocale];\n\n    // 29. Let patterns be the result of calling the [[Get]] internal method of\n    //     dataLocaleData with argument \"patterns\".\n    let patterns = dataLocaleData.patterns;\n\n    // 30. Assert: patterns is an object (see 11.2.3)\n\n    // 31. Let stylePatterns be the result of calling the [[Get]] internal method of\n    //     patterns with argument s.\n    let stylePatterns = patterns[s];\n\n    // 32. Set the [[positivePattern]] internal property of numberFormat to the\n    //     result of calling the [[Get]] internal method of stylePatterns with the\n    //     argument \"positivePattern\".\n    internal['[[positivePattern]]'] = stylePatterns.positivePattern;\n\n    // 33. Set the [[negativePattern]] internal property of numberFormat to the\n    //     result of calling the [[Get]] internal method of stylePatterns with the\n    //     argument \"negativePattern\".\n    internal['[[negativePattern]]'] = stylePatterns.negativePattern;\n\n    // 34. Set the [[boundFormat]] internal property of numberFormat to undefined.\n    internal['[[boundFormat]]'] = undefined;\n\n    // 35. Set the [[initializedNumberFormat]] internal property of numberFormat to\n    //     true.\n    internal['[[initializedNumberFormat]]'] = true;\n\n    // In ES3, we need to pre-bind the format() function\n    if (es3)\n        numberFormat.format = GetFormatNumber.call(numberFormat);\n\n    // Restore the RegExp properties\n    regexpRestore();\n\n    // 36. Return the newly initialised object\n    return numberFormat;\n}\n\nfunction CurrencyDigits(currency) {\n    // When the CurrencyDigits abstract operation is called with an argument currency\n    // (which must be an upper case String value), the following steps are taken:\n\n    // 1. If the ISO 4217 currency and funds code list contains currency as an\n    // alphabetic code, then return the minor unit value corresponding to the\n    // currency from the list; else return 2.\n    return currencyMinorUnits[currency] !== undefined\n                ? currencyMinorUnits[currency]\n                : 2;\n}\n\n/* 11.2.3 */internals.NumberFormat = {\n    '[[availableLocales]]': [],\n    '[[relevantExtensionKeys]]': ['nu'],\n    '[[localeData]]': {}\n};\n\n/**\n * When the supportedLocalesOf method of Intl.NumberFormat is called, the\n * following steps are taken:\n */\n/* 11.2.2 */\ndefineProperty(Intl.NumberFormat, 'supportedLocalesOf', {\n    configurable: true,\n    writable: true,\n    value: fnBind.call(function (locales) {\n        // Bound functions only have the `this` value altered if being used as a constructor,\n        // this lets us imitate a native function that has no constructor\n        if (!hop.call(this, '[[availableLocales]]'))\n            throw new TypeError('supportedLocalesOf() is not a constructor');\n\n        // Create an object whose props can be used to restore the values of RegExp props\n        let regexpRestore = createRegExpRestore(),\n\n        // 1. If options is not provided, then let options be undefined.\n            options = arguments[1],\n\n        // 2. Let availableLocales be the value of the [[availableLocales]] internal\n        //    property of the standard built-in object that is the initial value of\n        //    Intl.NumberFormat.\n\n            availableLocales = this['[[availableLocales]]'],\n\n        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n        //    abstract operation (defined in 9.2.1) with argument locales.\n            requestedLocales = CanonicalizeLocaleList(locales);\n\n        // Restore the RegExp properties\n        regexpRestore();\n\n        // 4. Return the result of calling the SupportedLocales abstract operation\n        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,\n        //    and options.\n        return SupportedLocales(availableLocales, requestedLocales, options);\n    }, internals.NumberFormat)\n});\n\n/**\n * This named accessor property returns a function that formats a number\n * according to the effective locale and the formatting options of this\n * NumberFormat object.\n */\n/* 11.3.2 */defineProperty(Intl.NumberFormat.prototype, 'format', {\n    configurable: true,\n    get: GetFormatNumber\n});\n\nfunction GetFormatNumber() {\n        let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 11.3_b\n        if (!internal || !internal['[[initializedNumberFormat]]'])\n            throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');\n\n        // The value of the [[Get]] attribute is a function that takes the following\n        // steps:\n\n        // 1. If the [[boundFormat]] internal property of this NumberFormat object\n        //    is undefined, then:\n        if (internal['[[boundFormat]]'] === undefined) {\n            // a. Let F be a Function object, with internal properties set as\n            //    specified for built-in functions in ES5, 15, or successor, and the\n            //    length property set to 1, that takes the argument value and\n            //    performs the following steps:\n            let F = function (value) {\n                // i. If value is not provided, then let value be undefined.\n                // ii. Let x be ToNumber(value).\n                // iii. Return the result of calling the FormatNumber abstract\n                //      operation (defined below) with arguments this and x.\n                return FormatNumber(this, /* x = */Number(value));\n            };\n\n            // b. Let bind be the standard built-in function object defined in ES5,\n            //    15.3.4.5.\n            // c. Let bf be the result of calling the [[Call]] internal method of\n            //    bind with F as the this value and an argument list containing\n            //    the single item this.\n            let bf = fnBind.call(F, this);\n\n            // d. Set the [[boundFormat]] internal property of this NumberFormat\n            //    object to bf.\n            internal['[[boundFormat]]'] = bf;\n        }\n        // Return the value of the [[boundFormat]] internal property of this\n        // NumberFormat object.\n        return internal['[[boundFormat]]'];\n    }\n\nfunction formatToParts(value = undefined) {\n  let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n  if (!internal || !internal['[[initializedNumberFormat]]'])\n      throw new TypeError('`this` value for formatToParts() is not an initialized Intl.NumberFormat object.');\n\n  let x = Number(value);\n  return FormatNumberToParts(this, x);\n}\n\nObject.defineProperty(Intl.NumberFormat.prototype, 'formatToParts', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: formatToParts\n});\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumbertoparts]\n */\nfunction FormatNumberToParts(numberFormat, x) {\n    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).\n    let parts = PartitionNumberPattern(numberFormat, x);\n    // 2. Let result be ArrayCreate(0).\n    let result = [];\n    // 3. Let n be 0.\n    let n = 0;\n    // 4. For each part in parts, do:\n    for (let i = 0; parts.length > i; i++) {\n        let part = parts[i];\n        // a. Let O be ObjectCreate(%ObjectPrototype%).\n        let O = {};\n        // a. Perform ? CreateDataPropertyOrThrow(O, \"type\", part.[[type]]).\n        O.type = part['[[type]]'];\n        // a. Perform ? CreateDataPropertyOrThrow(O, \"value\", part.[[value]]).\n        O.value = part['[[value]]'];\n        // a. Perform ? CreateDataPropertyOrThrow(result, ? ToString(n), O).\n        result[n] = O;\n        // a. Increment n by 1.\n        n += 1;\n    }\n    // 5. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumberstring]\n */\nexport function FormatNumberToString(numberFormat, x) {\n    let internal = getInternalProperties(numberFormat);\n    let result;\n\n    // 1. Assert: numberFormat.[[initializedIntlObject]] is true.\n\n    // 2. If the numberFormat.[[minimumSignificantDigits]] and numberFormat.[[maximumSignificantDigits]] are present, then\n    if (hop.call(internal, '[[minimumSignificantDigits]]') &&\n        hop.call(internal, '[[maximumSignificantDigits]]')) {\n        // a. Let result be ToRawPrecision(x, numberFormat.[[minimumSignificantDigits]], numberFormat.[[maximumSignificantDigits]]).\n        result = ToRawPrecision(x,\n          internal['[[minimumSignificantDigits]]'],\n          internal['[[maximumSignificantDigits]]']);\n    }\n    // 3. Else,\n    else {\n        // a. Let result be ToRawFixed(x, numberFormat.[[minimumIntegerDigits]], numberFormat.[[minimumFractionDigits]], numberFormat.[[maximumFractionDigits]]).\n        result = ToRawFixed(x,\n          internal['[[minimumIntegerDigits]]'],\n          internal['[[minimumFractionDigits]]'],\n          internal['[[maximumFractionDigits]]']);\n    }\n    // 4. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-partitionnumberpattern]\n */\nfunction PartitionNumberPattern(numberFormat, x) {\n\n    let internal = getInternalProperties(numberFormat),\n        locale = internal['[[dataLocale]]'],\n        nums = internal['[[numberingSystem]]'],\n        data = internals.NumberFormat['[[localeData]]'][locale],\n        ild = data.symbols[nums] || data.symbols.latn,\n        pattern;\n\n    // 1. If x is not NaN and x < 0, then:\n    if (!isNaN(x) && x < 0) {\n        // a. Let x be -x.\n        x = -x;\n        // b. Let pattern be the value of numberFormat.[[negativePattern]].\n        pattern = internal['[[negativePattern]]'];\n    }\n    // 2. Else,\n    else {\n        // a. Let pattern be the value of numberFormat.[[positivePattern]].\n        pattern = internal['[[positivePattern]]'];\n    }\n    // 3. Let result be a new empty List.\n    let result = new List();\n    // 4. Let beginIndex be Call(%StringProto_indexOf%, pattern, \"{\", 0).\n    let beginIndex = pattern.indexOf('{', 0);\n    // 5. Let endIndex be 0.\n    let endIndex = 0;\n    // 6. Let nextIndex be 0.\n    let nextIndex = 0;\n    // 7. Let length be the number of code units in pattern.\n    let length = pattern.length;\n    // 8. Repeat while beginIndex is an integer index into pattern:\n    while (beginIndex > -1 && beginIndex < length) {\n        // a. Set endIndex to Call(%StringProto_indexOf%, pattern, \"}\", beginIndex)\n        endIndex = pattern.indexOf('}', beginIndex);\n        // b. If endIndex = -1, throw new Error exception.\n        if (endIndex === -1) throw new Error();\n        // c. If beginIndex is greater than nextIndex, then:\n        if (beginIndex > nextIndex) {\n            // i. Let literal be a substring of pattern from position nextIndex, inclusive, to position beginIndex, exclusive.\n            let literal = pattern.substring(nextIndex, beginIndex);\n            // ii. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n        }\n        // d. Let p be the substring of pattern from position beginIndex, exclusive, to position endIndex, exclusive.\n        let p = pattern.substring(beginIndex + 1, endIndex);\n        // e. If p is equal \"number\", then:\n        if (p === \"number\") {\n            // i. If x is NaN,\n            if (isNaN(x)) {\n                // 1. Let n be an ILD String value indicating the NaN value.\n                let n = ild.nan;\n                // 2. Add new part record { [[type]]: \"nan\", [[value]]: n } as a new element of the list result.\n                arrPush.call(result, { '[[type]]': 'nan', '[[value]]': n });\n            }\n            // ii. Else if isFinite(x) is false,\n            else if (!isFinite(x)) {\n                // 1. Let n be an ILD String value indicating infinity.\n                let n = ild.infinity;\n                // 2. Add new part record { [[type]]: \"infinity\", [[value]]: n } as a new element of the list result.\n                arrPush.call(result, { '[[type]]': 'infinity', '[[value]]': n });\n            }\n            // iii. Else,\n            else {\n                // 1. If numberFormat.[[style]] is \"percent\", let x be 100 × x.\n                if (internal['[[style]]'] === 'percent') x *= 100;\n\n                // 2. Let n be FormatNumberToString(numberFormat, x).\n                let n = FormatNumberToString(numberFormat, x);\n\n                // 3. If the numberFormat.[[numberingSystem]] matches one of the values in the \"Numbering System\" column of Table 3 below, then\n                if (numSys[nums]) {\n                    // a. Let digits be an array whose 10 String valued elements are the UTF-16 string representations of the 10 digits specified in the \"Digits\" column of the matching row in Table 2.\n                    let digits = numSys[nums];\n                    // a. Replace each digit in n with the value of digits[digit].\n                    n = String(n).replace(/\\d/g, (digit) => {\n                        return digits[digit];\n                    });\n                }\n                // 4. Else use an implementation dependent algorithm to map n to the appropriate representation of n in the given numbering system.\n                else n = String(n); // ###TODO###\n\n                let integer;\n                let fraction;\n                // 5. Let decimalSepIndex be Call(%StringProto_indexOf%, n, \".\", 0).\n                let decimalSepIndex = n.indexOf('.', 0);\n                // 6. If decimalSepIndex > 0, then:\n                if (decimalSepIndex > 0) {\n                    // a. Let integer be the substring of n from position 0, inclusive, to position decimalSepIndex, exclusive.\n                    integer = n.substring(0, decimalSepIndex);\n                    // b. Let fraction be the substring of n from position decimalSepIndex, exclusive, to the end of n.\n                    fraction = n.substring(decimalSepIndex + 1, decimalSepIndex.length);\n                }\n                // 7. Else:\n                else {\n                    // a. Let integer be n.\n                    integer = n;\n                    // b. Let fraction be undefined.\n                    fraction = undefined;\n                }\n                // 8. If the value of the numberFormat.[[useGrouping]] is true,\n                if (internal['[[useGrouping]]'] === true) {\n                    // a. Let groupSepSymbol be the ILND String representing the grouping separator.\n                    let groupSepSymbol = ild.group;\n                    // b. Let groups be a List whose elements are, in left to right order, the substrings defined by ILND set of locations within the integer.\n                    let groups = [];\n                    // ----> implementation:\n                    // Primary group represents the group closest to the decimal\n                    let pgSize = data.patterns.primaryGroupSize || 3;\n                    // Secondary group is every other group\n                    let sgSize = data.patterns.secondaryGroupSize || pgSize;\n                    // Group only if necessary\n                    if (integer.length > pgSize) {\n                        // Index of the primary grouping separator\n                        let end = integer.length - pgSize;\n                        // Starting index for our loop\n                        let idx = end % sgSize;\n                        let start = integer.slice(0, idx);\n                        if (start.length) arrPush.call(groups, start);\n                        // Loop to separate into secondary grouping digits\n                        while (idx < end) {\n                            arrPush.call(groups, integer.slice(idx, idx + sgSize));\n                            idx += sgSize;\n                        }\n                        // Add the primary grouping digits\n                        arrPush.call(groups, integer.slice(end));\n                    } else {\n                        arrPush.call(groups, integer);\n                    }\n                    // c. Assert: The number of elements in groups List is greater than 0.\n                    if (groups.length === 0) throw new Error();\n                    // d. Repeat, while groups List is not empty:\n                    while (groups.length) {\n                        // i. Remove the first element from groups and let integerGroup be the value of that element.\n                        let integerGroup = arrShift.call(groups);\n                        // ii. Add new part record { [[type]]: \"integer\", [[value]]: integerGroup } as a new element of the list result.\n                        arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integerGroup });\n                        // iii. If groups List is not empty, then:\n                        if (groups.length) {\n                            // 1. Add new part record { [[type]]: \"group\", [[value]]: groupSepSymbol } as a new element of the list result.\n                            arrPush.call(result, { '[[type]]': 'group', '[[value]]': groupSepSymbol });\n                        }\n                    }\n                }\n                // 9. Else,\n                else {\n                    // a. Add new part record { [[type]]: \"integer\", [[value]]: integer } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integer });\n                }\n                // 10. If fraction is not undefined, then:\n                if (fraction !== undefined) {\n                    // a. Let decimalSepSymbol be the ILND String representing the decimal separator.\n                    let decimalSepSymbol = ild.decimal;\n                    // b. Add new part record { [[type]]: \"decimal\", [[value]]: decimalSepSymbol } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'decimal', '[[value]]': decimalSepSymbol });\n                    // c. Add new part record { [[type]]: \"fraction\", [[value]]: fraction } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'fraction', '[[value]]': fraction });\n                }\n            }\n        }\n        // f. Else if p is equal \"plusSign\", then:\n        else if (p === \"plusSign\") {\n            // i. Let plusSignSymbol be the ILND String representing the plus sign.\n            let plusSignSymbol = ild.plusSign;\n            // ii. Add new part record { [[type]]: \"plusSign\", [[value]]: plusSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'plusSign', '[[value]]': plusSignSymbol });\n        }\n        // g. Else if p is equal \"minusSign\", then:\n        else if (p === \"minusSign\") {\n            // i. Let minusSignSymbol be the ILND String representing the minus sign.\n            let minusSignSymbol = ild.minusSign;\n            // ii. Add new part record { [[type]]: \"minusSign\", [[value]]: minusSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'minusSign', '[[value]]': minusSignSymbol });\n        }\n        // h. Else if p is equal \"percentSign\" and numberFormat.[[style]] is \"percent\", then:\n        else if (p === \"percentSign\" && internal['[[style]]'] === \"percent\") {\n            // i. Let percentSignSymbol be the ILND String representing the percent sign.\n            let percentSignSymbol = ild.percentSign;\n            // ii. Add new part record { [[type]]: \"percentSign\", [[value]]: percentSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': percentSignSymbol });\n        }\n        // i. Else if p is equal \"currency\" and numberFormat.[[style]] is \"currency\", then:\n        else if (p === \"currency\" && internal['[[style]]'] === \"currency\") {\n            // i. Let currency be the value of numberFormat.[[currency]].\n            let currency = internal['[[currency]]'];\n\n            let cd;\n\n            // iii. If numberFormat.[[currencyDisplay]] is \"code\", then\n            if (internal['[[currencyDisplay]]'] === \"code\") {\n                // 1. Let cd be currency.\n                cd = currency;\n            }\n            // iv. Else if numberFormat.[[currencyDisplay]] is \"symbol\", then\n            else if (internal['[[currencyDisplay]]'] === \"symbol\") {\n                // 1. Let cd be an ILD string representing currency in short form. If the implementation does not have such a representation of currency, use currency itself.\n                cd = data.currencies[currency] || currency;\n            }\n            // v. Else if numberFormat.[[currencyDisplay]] is \"name\", then\n            else if (internal['[[currencyDisplay]]'] === \"name\") {\n                // 1. Let cd be an ILD string representing currency in long form. If the implementation does not have such a representation of currency, then use currency itself.\n                cd = currency;\n            }\n            // vi. Add new part record { [[type]]: \"currency\", [[value]]: cd } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'currency', '[[value]]': cd });\n        }\n        // j. Else,\n        else {\n          // i. Let literal be the substring of pattern from position beginIndex, inclusive, to position endIndex, inclusive.\n          let literal = pattern.substring(beginIndex, endIndex);\n          // ii. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n          arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n        }\n        // k. Set nextIndex to endIndex + 1.\n        nextIndex = endIndex + 1;\n        // l. Set beginIndex to Call(%StringProto_indexOf%, pattern, \"{\", nextIndex)\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    // 9. If nextIndex is less than length, then:\n    if (nextIndex < length) {\n        // a. Let literal be the substring of pattern from position nextIndex, inclusive, to position length, exclusive.\n        let literal = pattern.substring(nextIndex, length);\n        // b. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n    }\n    // 10. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumber]\n */\nexport function FormatNumber(numberFormat, x) {\n    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).\n    let parts = PartitionNumberPattern(numberFormat, x);\n    // 2. Let result be an empty String.\n    let result = '';\n    // 3. For each part in parts, do:\n    for (let i = 0; parts.length > i; i++) {\n        let part = parts[i];\n        // a. Set result to a String value produced by concatenating result and part.[[value]].\n        result += part['[[value]]'];\n    }\n    // 4. Return result.\n    return result;\n}\n\n/**\n * When the ToRawPrecision abstract operation is called with arguments x (which\n * must be a finite non-negative number), minPrecision, and maxPrecision (both\n * must be integers between 1 and 21) the following steps are taken:\n */\nfunction ToRawPrecision (x, minPrecision, maxPrecision) {\n    // 1. Let p be maxPrecision.\n    let p = maxPrecision;\n\n    let m, e;\n\n    // 2. If x = 0, then\n    if (x === 0) {\n        // a. Let m be the String consisting of p occurrences of the character \"0\".\n        m = arrJoin.call(Array (p + 1), '0');\n        // b. Let e be 0.\n        e = 0;\n    }\n    // 3. Else\n    else {\n        // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the\n        //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as\n        //    possible. If there are two such sets of e and n, pick the e and n for\n        //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.\n        e = log10Floor(Math.abs(x));\n\n        // Easier to get to m from here\n        let f = Math.round(Math.exp((Math.abs(e - p + 1)) * Math.LN10));\n\n        // b. Let m be the String consisting of the digits of the decimal\n        //    representation of n (in order, with no leading zeroes)\n        m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));\n    }\n\n    // 4. If e ≥ p, then\n    if (e >= p)\n        // a. Return the concatenation of m and e-p+1 occurrences of the character \"0\".\n        return m + arrJoin.call(Array(e-p+1 + 1), '0');\n\n    // 5. If e = p-1, then\n    else if (e === p - 1)\n        // a. Return m.\n        return m;\n\n    // 6. If e ≥ 0, then\n    else if (e >= 0)\n        // a. Let m be the concatenation of the first e+1 characters of m, the character\n        //    \".\", and the remaining p–(e+1) characters of m.\n        m = m.slice(0, e + 1) + '.' + m.slice(e + 1);\n\n    // 7. If e < 0, then\n    else if (e < 0)\n        // a. Let m be the concatenation of the String \"0.\", –(e+1) occurrences of the\n        //    character \"0\", and the string m.\n        m = '0.' + arrJoin.call(Array (-(e+1) + 1), '0') + m;\n\n    // 8. If m contains the character \".\", and maxPrecision > minPrecision, then\n    if (m.indexOf(\".\") >= 0 && maxPrecision > minPrecision) {\n        // a. Let cut be maxPrecision – minPrecision.\n        let cut = maxPrecision - minPrecision;\n\n        // b. Repeat while cut > 0 and the last character of m is \"0\":\n        while (cut > 0 && m.charAt(m.length-1) === '0') {\n            //  i. Remove the last character from m.\n            m = m.slice(0, -1);\n\n            //  ii. Decrease cut by 1.\n            cut--;\n        }\n\n        // c. If the last character of m is \".\", then\n        if (m.charAt(m.length-1) === '.')\n            //    i. Remove the last character from m.\n            m = m.slice(0, -1);\n    }\n    // 9. Return m.\n    return m;\n}\n\n/**\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-torawfixed]\n * When the ToRawFixed abstract operation is called with arguments x (which must\n * be a finite non-negative number), minInteger (which must be an integer between\n * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and\n * 20) the following steps are taken:\n */\nfunction ToRawFixed(x, minInteger, minFraction, maxFraction) {\n    // 1. Let f be maxFraction.\n    let f = maxFraction;\n    // 2. Let n be an integer for which the exact mathematical value of n ÷ 10f – x is as close to zero as possible. If there are two such n, pick the larger n.\n    let n = Math.pow(10, f) * x; // diverging...\n    // 3. If n = 0, let m be the String \"0\". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).\n    let m = (n === 0 ? \"0\" : n.toFixed(0)); // divering...\n\n    {\n        // this diversion is needed to take into consideration big numbers, e.g.:\n        // 1.2344501e+37 -> 12344501000000000000000000000000000000\n        let idx;\n        let exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;\n        if (exp) {\n            m = m.slice(0, idx).replace('.', '');\n            m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0');\n        }\n    }\n\n    let int;\n    // 4. If f ≠ 0, then\n    if (f !== 0) {\n        // a. Let k be the number of characters in m.\n        let k = m.length;\n        // a. If k ≤ f, then\n        if (k <= f) {\n            // i. Let z be the String consisting of f+1–k occurrences of the character \"0\".\n            let z = arrJoin.call(Array(f + 1 - k + 1), '0');\n            // ii. Let m be the concatenation of Strings z and m.\n            m = z + m;\n            // iii. Let k be f+1.\n            k = f + 1;\n        }\n        // a. Let a be the first k–f characters of m, and let b be the remaining f characters of m.\n        let a = m.substring(0, k - f), b = m.substring(k - f, m.length);\n        // a. Let m be the concatenation of the three Strings a, \".\", and b.\n        m = a + \".\" + b;\n        // a. Let int be the number of characters in a.\n        int = a.length;\n    }\n    // 5. Else, let int be the number of characters in m.\n    else int = m.length;\n    // 6. Let cut be maxFraction – minFraction.\n    let cut = maxFraction - minFraction;\n    // 7. Repeat while cut > 0 and the last character of m is \"0\":\n    while (cut > 0 && m.slice(-1) === \"0\") {\n        // a. Remove the last character from m.\n        m = m.slice(0, -1);\n        // a. Decrease cut by 1.\n        cut--;\n    }\n    // 8. If the last character of m is \".\", then\n    if (m.slice(-1) === \".\") {\n        // a. Remove the last character from m.\n        m = m.slice(0, -1);\n    }\n    // 9. If int < minInteger, then\n    if (int < minInteger) {\n        // a. Let z be the String consisting of minInteger–int occurrences of the character \"0\".\n        let z = arrJoin.call(Array(minInteger - int + 1), '0');\n        // a. Let m be the concatenation of Strings z and m.\n        m = z + m;\n    }\n    // 10. Return m.\n    return m;\n}\n\n// Sect 11.3.2 Table 2, Numbering systems\n// ======================================\nlet numSys = {\n    arab: ['\\u0660', '\\u0661', '\\u0662', '\\u0663', '\\u0664', '\\u0665', '\\u0666', '\\u0667', '\\u0668', '\\u0669'],\n    arabext: ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9'],\n    bali: ['\\u1B50', '\\u1B51', '\\u1B52', '\\u1B53', '\\u1B54', '\\u1B55', '\\u1B56', '\\u1B57', '\\u1B58', '\\u1B59'],\n    beng: ['\\u09E6', '\\u09E7', '\\u09E8', '\\u09E9', '\\u09EA', '\\u09EB', '\\u09EC', '\\u09ED', '\\u09EE', '\\u09EF'],\n    deva: ['\\u0966', '\\u0967', '\\u0968', '\\u0969', '\\u096A', '\\u096B', '\\u096C', '\\u096D', '\\u096E', '\\u096F'],\n    fullwide: ['\\uFF10', '\\uFF11', '\\uFF12', '\\uFF13', '\\uFF14', '\\uFF15', '\\uFF16', '\\uFF17', '\\uFF18', '\\uFF19'],\n    gujr: ['\\u0AE6', '\\u0AE7', '\\u0AE8', '\\u0AE9', '\\u0AEA', '\\u0AEB', '\\u0AEC', '\\u0AED', '\\u0AEE', '\\u0AEF'],\n    guru: ['\\u0A66', '\\u0A67', '\\u0A68', '\\u0A69', '\\u0A6A', '\\u0A6B', '\\u0A6C', '\\u0A6D', '\\u0A6E', '\\u0A6F'],\n    hanidec: ['\\u3007', '\\u4E00', '\\u4E8C', '\\u4E09', '\\u56DB', '\\u4E94', '\\u516D', '\\u4E03', '\\u516B', '\\u4E5D'],\n    khmr: ['\\u17E0', '\\u17E1', '\\u17E2', '\\u17E3', '\\u17E4', '\\u17E5', '\\u17E6', '\\u17E7', '\\u17E8', '\\u17E9'],\n    knda: ['\\u0CE6', '\\u0CE7', '\\u0CE8', '\\u0CE9', '\\u0CEA', '\\u0CEB', '\\u0CEC', '\\u0CED', '\\u0CEE', '\\u0CEF'],\n    laoo: ['\\u0ED0', '\\u0ED1', '\\u0ED2', '\\u0ED3', '\\u0ED4', '\\u0ED5', '\\u0ED6', '\\u0ED7', '\\u0ED8', '\\u0ED9'],\n    latn: ['\\u0030', '\\u0031', '\\u0032', '\\u0033', '\\u0034', '\\u0035', '\\u0036', '\\u0037', '\\u0038', '\\u0039'],\n    limb: ['\\u1946', '\\u1947', '\\u1948', '\\u1949', '\\u194A', '\\u194B', '\\u194C', '\\u194D', '\\u194E', '\\u194F'],\n    mlym: ['\\u0D66', '\\u0D67', '\\u0D68', '\\u0D69', '\\u0D6A', '\\u0D6B', '\\u0D6C', '\\u0D6D', '\\u0D6E', '\\u0D6F'],\n    mong: ['\\u1810', '\\u1811', '\\u1812', '\\u1813', '\\u1814', '\\u1815', '\\u1816', '\\u1817', '\\u1818', '\\u1819'],\n    mymr: ['\\u1040', '\\u1041', '\\u1042', '\\u1043', '\\u1044', '\\u1045', '\\u1046', '\\u1047', '\\u1048', '\\u1049'],\n    orya: ['\\u0B66', '\\u0B67', '\\u0B68', '\\u0B69', '\\u0B6A', '\\u0B6B', '\\u0B6C', '\\u0B6D', '\\u0B6E', '\\u0B6F'],\n    tamldec: ['\\u0BE6', '\\u0BE7', '\\u0BE8', '\\u0BE9', '\\u0BEA', '\\u0BEB', '\\u0BEC', '\\u0BED', '\\u0BEE', '\\u0BEF'],\n    telu: ['\\u0C66', '\\u0C67', '\\u0C68', '\\u0C69', '\\u0C6A', '\\u0C6B', '\\u0C6C', '\\u0C6D', '\\u0C6E', '\\u0C6F'],\n    thai: ['\\u0E50', '\\u0E51', '\\u0E52', '\\u0E53', '\\u0E54', '\\u0E55', '\\u0E56', '\\u0E57', '\\u0E58', '\\u0E59'],\n    tibt: ['\\u0F20', '\\u0F21', '\\u0F22', '\\u0F23', '\\u0F24', '\\u0F25', '\\u0F26', '\\u0F27', '\\u0F28', '\\u0F29']\n};\n\n/**\n * This function provides access to the locale and formatting options computed\n * during initialization of the object.\n *\n * The function returns a new object whose properties and attributes are set as\n * if constructed by an object literal assigning to each of the following\n * properties the value of the corresponding internal property of this\n * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,\n * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,\n * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and\n * useGrouping. Properties whose corresponding internal properties are not present\n * are not assigned.\n */\n/* 11.3.3 */defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {\n    configurable: true,\n    writable: true,\n    value: function () {\n        let prop,\n            descs = new Record(),\n            props = [\n                'locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay',\n                'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits',\n                'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'\n            ],\n            internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 11.3_b\n        if (!internal || !internal['[[initializedNumberFormat]]'])\n            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');\n\n        for (let i = 0, max = props.length; i < max; i++) {\n            if (hop.call(internal, prop = '[['+ props[i] +']]'))\n                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };\n        }\n\n        return objCreate({}, descs);\n    }\n});\n","/* jslint esnext: true */\n\n// Match these datetime components in a CLDR pattern, except those in single quotes\nlet expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n// trim patterns after transformations\nlet expPatternTrimmer = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n// Skip over patterns with these datetime components because we don't have data\n// to back them up:\n// timezone, weekday, amoung others\nlet unwantedDTCs = /[rqQASjJgwWIQq]/; // xXVO were removed from this list in favor of computing matches with timeZoneName values but printing as empty string\n\nlet dtKeys = [\"era\", \"year\", \"month\", \"day\", \"weekday\", \"quarter\"];\nlet tmKeys = [\"hour\", \"minute\", \"second\", \"hour12\", \"timeZoneName\"];\n\nfunction isDateFormatOnly(obj) {\n    for (let i = 0; i < tmKeys.length; i += 1) {\n        if (obj.hasOwnProperty(tmKeys[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isTimeFormatOnly(obj) {\n    for (let i = 0; i < dtKeys.length; i += 1) {\n        if (obj.hasOwnProperty(dtKeys[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {\n    let o = { _: {} };\n    for (let i = 0; i < dtKeys.length; i += 1) {\n        if (dateFormatObj[dtKeys[i]]) {\n            o[dtKeys[i]] = dateFormatObj[dtKeys[i]];\n        }\n        if (dateFormatObj._[dtKeys[i]]) {\n            o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];\n        }\n    }\n    for (let j = 0; j < tmKeys.length; j += 1) {\n        if (timeFormatObj[tmKeys[j]]) {\n            o[tmKeys[j]] = timeFormatObj[tmKeys[j]];\n        }\n        if (timeFormatObj._[tmKeys[j]]) {\n            o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];\n        }\n    }\n    return o;\n}\n\nfunction computeFinalPatterns(formatObj) {\n    // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:\n    //  'In patterns, two single quotes represents a literal single quote, either\n    //   inside or outside single quotes. Text within single quotes is not\n    //   interpreted in any way (except for two adjacent single quotes).'\n    formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, ($0, literal) => {\n        return literal ? literal : \"'\";\n    });\n\n    // pattern 12 is always the default. we can produce the 24 by removing {ampm}\n    formatObj.pattern = formatObj.pattern12.replace('{ampm}', '').replace(expPatternTrimmer, '');\n    return formatObj;\n}\n\nfunction expDTComponentsMeta($0, formatObj) {\n    switch ($0.charAt(0)) {\n        // --- Era\n        case 'G':\n            formatObj.era = [ 'short', 'short', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{era}';\n\n        // --- Year\n        case 'y':\n        case 'Y':\n        case 'u':\n        case 'U':\n        case 'r':\n            formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{year}';\n\n        // --- Quarter (not supported in this polyfill)\n        case 'Q':\n        case 'q':\n            formatObj.quarter = [ 'numeric', '2-digit', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{quarter}';\n\n        // --- Month\n        case 'M':\n        case 'L':\n            formatObj.month = [ 'numeric', '2-digit', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{month}';\n\n        // --- Week (not supported in this polyfill)\n        case 'w':\n            // week of the year\n            formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{weekday}';\n        case 'W':\n            // week of the month\n            formatObj.week = 'numeric';\n            return '{weekday}';\n\n        // --- Day\n        case 'd':\n            // day of the month\n            formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{day}';\n        case 'D': // day of the year\n        case 'F': // day of the week\n        case 'g':\n            // 1..n: Modified Julian day\n            formatObj.day = 'numeric';\n            return '{day}';\n\n        // --- Week Day\n        case 'E':\n            // day of the week\n            formatObj.weekday = [ 'short', 'short', 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n        case 'e':\n            // local day of the week\n            formatObj.weekday = [ 'numeric', '2-digit', 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n        case 'c':\n            // stand alone local day of the week\n            formatObj.weekday = [ 'numeric', undefined, 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n\n        // --- Period\n        case 'a': // AM, PM\n        case 'b': // am, pm, noon, midnight\n        case 'B': // flexible day periods\n            formatObj.hour12 = true;\n            return '{ampm}';\n\n        // --- Hour\n        case 'h':\n        case 'H':\n            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{hour}';\n        case 'k':\n        case 'K':\n            formatObj.hour12 = true; // 12-hour-cycle time formats (using h or K)\n            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{hour}';\n\n        // --- Minute\n        case 'm':\n            formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{minute}';\n\n        // --- Second\n        case 's':\n            formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{second}';\n        case 'S':\n        case 'A':\n            formatObj.second = 'numeric';\n            return '{second}';\n\n        // --- Timezone\n        case 'z': // 1..3, 4: specific non-location format\n        case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n        case 'O': // 1, 4: miliseconds in day short, long\n        case 'v': // 1, 4: generic non-location format\n        case 'V': // 1, 2, 3, 4: time zone ID or city\n        case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n        case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n            // this polyfill only supports much, for now, we are just doing something dummy\n            formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';\n            return '{timeZoneName}';\n    }\n}\n\n\n/**\n * Converts the CLDR availableFormats into the objects and patterns required by\n * the ECMAScript Internationalization API specification.\n */\nexport function createDateTimeFormat(skeleton, pattern) {\n    // we ignore certain patterns that are unsupported to avoid this expensive op.\n    if (unwantedDTCs.test(pattern))\n        return undefined;\n\n    let formatObj = {\n        originalPattern: pattern,\n        _: {}\n    };\n\n    // Replace the pattern string with the one required by the specification, whilst\n    // at the same time evaluating it for the subsets and formats\n    formatObj.extendedPattern = pattern.replace(expDTComponents, ($0) => {\n        // See which symbol we're dealing with\n        return expDTComponentsMeta($0, formatObj._);\n    });\n\n    // Match the skeleton string with the one required by the specification\n    // this implementation is based on the Date Field Symbol Table:\n    // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n    // Note: we are adding extra data to the formatObject even though this polyfill\n    //       might not support it.\n    skeleton.replace(expDTComponents, ($0) => {\n        // See which symbol we're dealing with\n        return expDTComponentsMeta($0, formatObj);\n    });\n\n    return computeFinalPatterns(formatObj);\n}\n\n/**\n * Processes DateTime formats from CLDR to an easier-to-parse format.\n * the result of this operation should be cached the first time a particular\n * calendar is analyzed.\n *\n * The specification requires we support at least the following subsets of\n * date/time components:\n *\n *   - 'weekday', 'year', 'month', 'day', 'hour', 'minute', 'second'\n *   - 'weekday', 'year', 'month', 'day'\n *   - 'year', 'month', 'day'\n *   - 'year', 'month'\n *   - 'month', 'day'\n *   - 'hour', 'minute', 'second'\n *   - 'hour', 'minute'\n *\n * We need to cherry pick at least these subsets from the CLDR data and convert\n * them into the pattern objects used in the ECMA-402 API.\n */\nexport function createDateTimeFormats(formats) {\n    let availableFormats = formats.availableFormats;\n    let timeFormats = formats.timeFormats;\n    let dateFormats = formats.dateFormats;\n    let result = [];\n    let skeleton, pattern, computed, i, j;\n    let timeRelatedFormats = [];\n    let dateRelatedFormats = [];\n\n    // Map available (custom) formats into a pattern for createDateTimeFormats\n    for (skeleton in availableFormats) {\n        if (availableFormats.hasOwnProperty(skeleton)) {\n            pattern = availableFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                // in some cases, the format is only displaying date specific props\n                // or time specific props, in which case we need to also produce the\n                // combined formats.\n                if (isDateFormatOnly(computed)) {\n                    dateRelatedFormats.push(computed);\n                } else if (isTimeFormatOnly(computed)) {\n                    timeRelatedFormats.push(computed);\n                }\n            }\n        }\n    }\n\n    // Map time formats into a pattern for createDateTimeFormats\n    for (skeleton in timeFormats) {\n        if (timeFormats.hasOwnProperty(skeleton)) {\n            pattern = timeFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                timeRelatedFormats.push(computed);\n            }\n        }\n    }\n\n    // Map date formats into a pattern for createDateTimeFormats\n    for (skeleton in dateFormats) {\n        if (dateFormats.hasOwnProperty(skeleton)) {\n            pattern = dateFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                dateRelatedFormats.push(computed);\n            }\n        }\n    }\n\n    // combine custom time and custom date formats when they are orthogonals to complete the\n    // formats supported by CLDR.\n    // This Algo is based on section \"Missing Skeleton Fields\" from:\n    // http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems\n    for (i = 0; i < timeRelatedFormats.length; i += 1) {\n        for (j = 0; j < dateRelatedFormats.length; j += 1) {\n            if (dateRelatedFormats[j].month === 'long') {\n                pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;\n            } else if (dateRelatedFormats[j].month === 'short') {\n                pattern = formats.medium;\n            } else {\n                pattern = formats.short;\n            }\n            computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);\n            computed.originalPattern = pattern;\n            computed.extendedPattern = pattern\n                .replace('{0}', timeRelatedFormats[i].extendedPattern)\n                .replace('{1}', dateRelatedFormats[j].extendedPattern)\n                .replace(/^[,\\s]+|[,\\s]+$/gi, '');\n            result.push(computeFinalPatterns(computed));\n        }\n    }\n\n    return result;\n}\n\n// this represents the exceptions of the rule that are not covered by CLDR availableFormats\n// for single property configurations, they play no role when using multiple properties, and\n// those that are not in this table, are not exceptions or are not covered by the data we\n// provide.\nconst validSyntheticProps = {\n    second: {\n        numeric:   's',\n        '2-digit': 'ss'\n    },\n    minute: {\n        numeric:   'm',\n        '2-digit': 'mm'\n    },\n    year: {\n        numeric:   'y',\n        '2-digit': 'yy'\n    },\n    day: {\n        numeric:   'd',\n        '2-digit': 'dd'\n    },\n    month: {\n        numeric:   'L',\n        '2-digit': 'LL',\n        narrow:    'LLLLL',\n        short:     'LLL',\n        long:      'LLLL'\n    },\n    weekday: {\n        narrow:  'ccccc',\n        short:   'ccc',\n        long:    'cccc'\n    }\n};\n\nexport function generateSyntheticFormat(propName, propValue) {\n    if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {\n        return {\n            originalPattern: validSyntheticProps[propName][propValue],\n            _: {\n                [propName]: propValue\n            },\n            extendedPattern: `{${propName}}`,\n            [propName]: propValue,\n            pattern12: `{${propName}}`,\n            pattern: `{${propName}}`\n        };\n    }\n}\n","// 12.1 The Intl.DateTimeFormat constructor\n// ==================================\n\nimport {\n    toLatinUpperCase\n} from './6.locales-currencies-tz.js';\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    CanonicalizeLocaleList,\n    ResolveLocale,\n    GetOption,\n    SupportedLocales\n} from \"./9.negotiation.js\";\n\nimport {\n    FormatNumber\n} from \"./11.numberformat.js\";\n\nimport {\n    generateSyntheticFormat,\n    createDateTimeFormats\n} from \"./cldr\";\n\nimport {\n    internals,\n    es3,\n    fnBind,\n    defineProperty,\n    toObject,\n    getInternalProperties,\n    createRegExpRestore,\n    secret,\n    Record,\n    List,\n    hop,\n    objCreate,\n    toNumber,\n    arrPush,\n    arrIndexOf\n} from './util.js';\n\n// An object map of date component keys, saves using a regex later\nconst dateWidths = objCreate(null, { narrow:{}, short:{}, long:{} });\n\n/**\n * Returns a string for a date component, resolved using multiple inheritance as specified\n * as specified in the Unicode Technical Standard 35.\n */\nfunction resolveDateString(data, ca, component, width, key) {\n    // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:\n    // 'In clearly specified instances, resources may inherit from within the same locale.\n    //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'\n    let obj = data[ca] && data[ca][component]\n                ? data[ca][component]\n                : data.gregory[component],\n\n        // \"sideways\" inheritance resolves strings when a key doesn't exist\n        alts = {\n            narrow: ['short', 'long'],\n            short:  ['long', 'narrow'],\n            long:   ['short', 'narrow']\n        },\n\n        //\n        resolved = hop.call(obj, width)\n                  ? obj[width]\n                  : hop.call(obj, alts[width][0])\n                      ? obj[alts[width][0]]\n                      : obj[alts[width][1]];\n\n    // `key` wouldn't be specified for components 'dayPeriods'\n    return key !== null ? resolved[key] : resolved;\n}\n\n// Define the DateTimeFormat constructor internally so it cannot be tainted\nexport function DateTimeFormatConstructor () {\n    let locales = arguments[0];\n    let options = arguments[1];\n\n    if (!this || this === Intl) {\n        return new Intl.DateTimeFormat(locales, options);\n    }\n    return InitializeDateTimeFormat(toObject(this), locales, options);\n}\n\ndefineProperty(Intl, 'DateTimeFormat', {\n    configurable: true,\n    writable: true,\n    value: DateTimeFormatConstructor\n});\n\n// Must explicitly set prototypes as unwritable\ndefineProperty(DateTimeFormatConstructor, 'prototype', {\n    writable: false\n});\n\n/**\n * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat\n * (which must be an object), locales, and options. It initializes dateTimeFormat as a\n * DateTimeFormat object.\n */\nexport function/* 12.1.1.1 */InitializeDateTimeFormat (dateTimeFormat, locales, options) {\n    // This will be a internal properties object if we're not already initialized\n    let internal = getInternalProperties(dateTimeFormat);\n\n    // Create an object whose props can be used to restore the values of RegExp props\n    let regexpRestore = createRegExpRestore();\n\n    // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with\n    //    value true, throw a TypeError exception.\n    if (internal['[[initializedIntlObject]]'] === true)\n        throw new TypeError('`this` object has already been initialized as an Intl object');\n\n    // Need this to access the `internal` object\n    defineProperty(dateTimeFormat, '__getInternalProperties', {\n        value: function () {\n            // NOTE: Non-standard, for internal use only\n            if (arguments[0] === secret)\n                return internal;\n        }\n    });\n\n    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.\n    internal['[[initializedIntlObject]]'] = true;\n\n    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n    //    abstract operation (defined in 9.2.1) with argument locales.\n    let requestedLocales = CanonicalizeLocaleList(locales);\n\n    // 4. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined below) with arguments options, \"any\", and \"date\".\n    options = ToDateTimeOptions(options, 'any', 'date');\n\n    // 5. Let opt be a new Record.\n    let opt = new Record();\n\n    // 6. Let matcher be the result of calling the GetOption abstract operation\n    //    (defined in 9.2.9) with arguments options, \"localeMatcher\", \"string\", a List\n    //    containing the two String values \"lookup\" and \"best fit\", and \"best fit\".\n    let matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');\n\n    // 7. Set opt.[[localeMatcher]] to matcher.\n    opt['[[localeMatcher]]'] = matcher;\n\n    // 8. Let DateTimeFormat be the standard built-in object that is the initial\n    //    value of Intl.DateTimeFormat.\n    let DateTimeFormat = internals.DateTimeFormat; // This is what we *really* need\n\n    // 9. Let localeData be the value of the [[localeData]] internal property of\n    //    DateTimeFormat.\n    let localeData = DateTimeFormat['[[localeData]]'];\n\n    // 10. Let r be the result of calling the ResolveLocale abstract operation\n    //     (defined in 9.2.5) with the [[availableLocales]] internal property of\n    //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]\n    //      internal property of DateTimeFormat, and localeData.\n    let r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales,\n                opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);\n\n    // 11. Set the [[locale]] internal property of dateTimeFormat to the value of\n    //     r.[[locale]].\n    internal['[[locale]]'] = r['[[locale]]'];\n\n    // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of\n    //     r.[[ca]].\n    internal['[[calendar]]'] = r['[[ca]]'];\n\n    // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of\n    //     r.[[nu]].\n    internal['[[numberingSystem]]'] = r['[[nu]]'];\n\n    // The specification doesn't tell us to do this, but it's helpful later on\n    internal['[[dataLocale]]'] = r['[[dataLocale]]'];\n\n    // 14. Let dataLocale be the value of r.[[dataLocale]].\n    let dataLocale = r['[[dataLocale]]'];\n\n    // 15. Let tz be the result of calling the [[Get]] internal method of options with\n    //     argument \"timeZone\".\n    let tz = options.timeZone;\n\n    // 16. If tz is not undefined, then\n    if (tz !== undefined) {\n        // a. Let tz be ToString(tz).\n        // b. Convert tz to upper case as described in 6.1.\n        //    NOTE: If an implementation accepts additional time zone values, as permitted\n        //          under certain conditions by the Conformance clause, different casing\n        //          rules apply.\n        tz = toLatinUpperCase(tz);\n\n        // c. If tz is not \"UTC\", then throw a RangeError exception.\n        // ###TODO: accept more time zones###\n        if (tz !== 'UTC')\n            throw new RangeError('timeZone is not supported.');\n    }\n\n    // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.\n    internal['[[timeZone]]'] = tz;\n\n    // 18. Let opt be a new Record.\n    opt = new Record();\n\n    // 19. For each row of Table 3, except the header row, do:\n    for (let prop in dateTimeComponents) {\n        if (!hop.call(dateTimeComponents, prop))\n            continue;\n\n        // 20. Let prop be the name given in the Property column of the row.\n        // 21. Let value be the result of calling the GetOption abstract operation,\n        //     passing as argument options, the name given in the Property column of the\n        //     row, \"string\", a List containing the strings given in the Values column of\n        //     the row, and undefined.\n        let value = GetOption(options, prop, 'string', dateTimeComponents[prop]);\n\n        // 22. Set opt.[[<prop>]] to value.\n        opt['[['+prop+']]'] = value;\n    }\n\n    // Assigned a value below\n    let bestFormat;\n\n    // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of\n    //     localeData with argument dataLocale.\n    let dataLocaleData = localeData[dataLocale];\n\n    // 24. Let formats be the result of calling the [[Get]] internal method of\n    //     dataLocaleData with argument \"formats\".\n    //     Note: we process the CLDR formats into the spec'd structure\n    let formats = ToDateTimeFormats(dataLocaleData.formats);\n\n    // 25. Let matcher be the result of calling the GetOption abstract operation with\n    //     arguments options, \"formatMatcher\", \"string\", a List containing the two String\n    //     values \"basic\" and \"best fit\", and \"best fit\".\n    matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');\n\n    // Optimization: caching the processed formats as a one time operation by\n    // replacing the initial structure from localeData\n    dataLocaleData.formats = formats;\n\n    // 26. If matcher is \"basic\", then\n    if (matcher === 'basic') {\n        // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract\n        //     operation (defined below) with opt and formats.\n        bestFormat = BasicFormatMatcher(opt, formats);\n\n    // 28. Else\n    } else {\n        {\n            // diverging\n            let hr12 = GetOption(options, 'hour12', 'boolean'/*, undefined, undefined*/);\n            opt.hour12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;\n        }\n        // 29. Let bestFormat be the result of calling the BestFitFormatMatcher\n        //     abstract operation (defined below) with opt and formats.\n        bestFormat = BestFitFormatMatcher(opt, formats);\n    }\n\n    // 30. For each row in Table 3, except the header row, do\n    for (let prop in dateTimeComponents) {\n        if (!hop.call(dateTimeComponents, prop))\n            continue;\n\n        // a. Let prop be the name given in the Property column of the row.\n        // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of\n        //    bestFormat with argument prop.\n        // c. If pDesc is not undefined, then\n        if (hop.call(bestFormat, prop)) {\n            // i. Let p be the result of calling the [[Get]] internal method of bestFormat\n            //    with argument prop.\n            let p = bestFormat[prop];\n            {\n                // diverging\n                p = bestFormat._ && hop.call(bestFormat._, prop) ? bestFormat._[prop] : p;\n            }\n\n            // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.\n            internal['[['+prop+']]'] = p;\n        }\n    }\n\n    let pattern; // Assigned a value below\n\n    // 31. Let hr12 be the result of calling the GetOption abstract operation with\n    //     arguments options, \"hour12\", \"boolean\", undefined, and undefined.\n    let hr12 = GetOption(options, 'hour12', 'boolean'/*, undefined, undefined*/);\n\n    // 32. If dateTimeFormat has an internal property [[hour]], then\n    if (internal['[[hour]]']) {\n        // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]\n        //    internal method of dataLocaleData with argument \"hour12\".\n        hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;\n\n        // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.\n        internal['[[hour12]]'] = hr12;\n\n        // c. If hr12 is true, then\n        if (hr12 === true) {\n            // i. Let hourNo0 be the result of calling the [[Get]] internal method of\n            //    dataLocaleData with argument \"hourNo0\".\n            let hourNo0 = dataLocaleData.hourNo0;\n\n            // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.\n            internal['[[hourNo0]]'] = hourNo0;\n\n            // iii. Let pattern be the result of calling the [[Get]] internal method of\n            //      bestFormat with argument \"pattern12\".\n            pattern = bestFormat.pattern12;\n        }\n\n        // d. Else\n        else\n            // i. Let pattern be the result of calling the [[Get]] internal method of\n            //    bestFormat with argument \"pattern\".\n            pattern = bestFormat.pattern;\n    }\n\n    // 33. Else\n    else\n        // a. Let pattern be the result of calling the [[Get]] internal method of\n        //    bestFormat with argument \"pattern\".\n        pattern = bestFormat.pattern;\n\n    // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.\n    internal['[[pattern]]'] = pattern;\n\n    // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.\n    internal['[[boundFormat]]'] = undefined;\n\n    // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to\n    //     true.\n    internal['[[initializedDateTimeFormat]]'] = true;\n\n    // In ES3, we need to pre-bind the format() function\n    if (es3)\n        dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);\n\n    // Restore the RegExp properties\n    regexpRestore();\n\n    // Return the newly initialised object\n    return dateTimeFormat;\n}\n\n/**\n * Several DateTimeFormat algorithms use values from the following table, which provides\n * property names and allowable values for the components of date and time formats:\n */\nlet dateTimeComponents = {\n         weekday: [ \"narrow\", \"short\", \"long\" ],\n             era: [ \"narrow\", \"short\", \"long\" ],\n            year: [ \"2-digit\", \"numeric\" ],\n           month: [ \"2-digit\", \"numeric\", \"narrow\", \"short\", \"long\" ],\n             day: [ \"2-digit\", \"numeric\" ],\n            hour: [ \"2-digit\", \"numeric\" ],\n          minute: [ \"2-digit\", \"numeric\" ],\n          second: [ \"2-digit\", \"numeric\" ],\n    timeZoneName: [ \"short\", \"long\" ]\n};\n\n/**\n * When the ToDateTimeOptions abstract operation is called with arguments options,\n * required, and defaults, the following steps are taken:\n */\nfunction ToDateTimeFormats(formats) {\n    if (Object.prototype.toString.call(formats) === '[object Array]') {\n        return formats;\n    }\n    return createDateTimeFormats(formats);\n}\n\n/**\n * When the ToDateTimeOptions abstract operation is called with arguments options,\n * required, and defaults, the following steps are taken:\n */\nexport function ToDateTimeOptions (options, required, defaults) {\n    // 1. If options is undefined, then let options be null, else let options be\n    //    ToObject(options).\n    if (options === undefined)\n        options = null;\n\n    else {\n        // (#12) options needs to be a Record, but it also needs to inherit properties\n        let opt2 = toObject(options);\n        options = new Record();\n\n        for (let k in opt2)\n            options[k] = opt2[k];\n    }\n\n    // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.\n    let create = objCreate;\n\n    // 3. Let options be the result of calling the [[Call]] internal method of create with\n    //    undefined as the this value and an argument list containing the single item\n    //    options.\n    options = create(options);\n\n    // 4. Let needDefaults be true.\n    let needDefaults = true;\n\n    // 5. If required is \"date\" or \"any\", then\n    if (required === 'date' || required === 'any') {\n        // a. For each of the property names \"weekday\", \"year\", \"month\", \"day\":\n            // i. If the result of calling the [[Get]] internal method of options with the\n            //    property name is not undefined, then let needDefaults be false.\n        if (options.weekday !== undefined || options.year !== undefined\n                || options.month !== undefined || options.day !== undefined)\n            needDefaults = false;\n    }\n\n    // 6. If required is \"time\" or \"any\", then\n    if (required === 'time' || required === 'any') {\n        // a. For each of the property names \"hour\", \"minute\", \"second\":\n            // i. If the result of calling the [[Get]] internal method of options with the\n            //    property name is not undefined, then let needDefaults be false.\n        if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined)\n                needDefaults = false;\n    }\n\n    // 7. If needDefaults is true and defaults is either \"date\" or \"all\", then\n    if (needDefaults && (defaults === 'date' || defaults === 'all'))\n        // a. For each of the property names \"year\", \"month\", \"day\":\n            // i. Call the [[DefineOwnProperty]] internal method of options with the\n            //    property name, Property Descriptor {[[Value]]: \"numeric\", [[Writable]]:\n            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\n        options.year = options.month = options.day = 'numeric';\n\n    // 8. If needDefaults is true and defaults is either \"time\" or \"all\", then\n    if (needDefaults && (defaults === 'time' || defaults === 'all'))\n        // a. For each of the property names \"hour\", \"minute\", \"second\":\n            // i. Call the [[DefineOwnProperty]] internal method of options with the\n            //    property name, Property Descriptor {[[Value]]: \"numeric\", [[Writable]]:\n            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\n        options.hour = options.minute = options.second = 'numeric';\n\n    // 9. Return options.\n    return options;\n}\n\n/**\n * When the BasicFormatMatcher abstract operation is called with two arguments options and\n * formats, the following steps are taken:\n */\nfunction BasicFormatMatcher (options, formats) {\n    // 1. Let removalPenalty be 120.\n    let removalPenalty = 120;\n\n    // 2. Let additionPenalty be 20.\n    let additionPenalty = 20;\n\n    // 3. Let longLessPenalty be 8.\n    let longLessPenalty = 8;\n\n    // 4. Let longMorePenalty be 6.\n    let longMorePenalty = 6;\n\n    // 5. Let shortLessPenalty be 6.\n    let shortLessPenalty = 6;\n\n    // 6. Let shortMorePenalty be 3.\n    let shortMorePenalty = 3;\n\n    // 7. Let bestScore be -Infinity.\n    let bestScore = -Infinity;\n\n    // 8. Let bestFormat be undefined.\n    let bestFormat;\n\n    // 9. Let i be 0.\n    let i = 0;\n\n    // 10. Assert: formats is an Array object.\n\n    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument \"length\".\n    let len = formats.length;\n\n    // 12. Repeat while i < len:\n    while (i < len) {\n        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).\n        let format = formats[i];\n\n        // b. Let score be 0.\n        let score = 0;\n\n        // c. For each property shown in Table 3:\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            // i. Let optionsProp be options.[[<property>]].\n            let optionsProp = options['[['+ property +']]'];\n\n            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format\n            //     with argument property.\n            // iii. If formatPropDesc is not undefined, then\n            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.\n            let formatProp = hop.call(format, property) ? format[property] : undefined;\n\n            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by\n            //     additionPenalty.\n            if (optionsProp === undefined && formatProp !== undefined)\n                score -= additionPenalty;\n\n            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by\n            //    removalPenalty.\n            else if (optionsProp !== undefined && formatProp === undefined)\n                score -= removalPenalty;\n\n            // vi. Else\n            else {\n                // 1. Let values be the array [\"2-digit\", \"numeric\", \"narrow\", \"short\",\n                //    \"long\"].\n                let values = [ '2-digit', 'numeric', 'narrow', 'short', 'long' ];\n\n                // 2. Let optionsPropIndex be the index of optionsProp within values.\n                let optionsPropIndex = arrIndexOf.call(values, optionsProp);\n\n                // 3. Let formatPropIndex be the index of formatProp within values.\n                let formatPropIndex = arrIndexOf.call(values, formatProp);\n\n                // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).\n                let delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);\n\n                // 5. If delta = 2, decrease score by longMorePenalty.\n                if (delta === 2)\n                    score -= longMorePenalty;\n\n                // 6. Else if delta = 1, decrease score by shortMorePenalty.\n                else if (delta === 1)\n                    score -= shortMorePenalty;\n\n                // 7. Else if delta = -1, decrease score by shortLessPenalty.\n                else if (delta === -1)\n                    score -= shortLessPenalty;\n\n                // 8. Else if delta = -2, decrease score by longLessPenalty.\n                else if (delta === -2)\n                    score -= longLessPenalty;\n            }\n        }\n\n        // d. If score > bestScore, then\n        if (score > bestScore) {\n            // i. Let bestScore be score.\n            bestScore = score;\n\n            // ii. Let bestFormat be format.\n            bestFormat = format;\n        }\n\n        // e. Increase i by 1.\n        i++;\n    }\n\n    // 13. Return bestFormat.\n    return bestFormat;\n}\n\n/**\n * When the BestFitFormatMatcher abstract operation is called with two arguments options\n * and formats, it performs implementation dependent steps, which should return a set of\n * component representations that a typical user of the selected locale would perceive as\n * at least as good as the one returned by BasicFormatMatcher.\n *\n * This polyfill defines the algorithm to be the same as BasicFormatMatcher,\n * with the addition of bonus points awarded where the requested format is of\n * the same data type as the potentially matching format.\n *\n * This algo relies on the concept of closest distance matching described here:\n * http://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons\n * Typically a “best match” is found using a closest distance match, such as:\n *\n * Symbols requesting a best choice for the locale are replaced.\n *      j → one of {H, k, h, K}; C → one of {a, b, B}\n * -> Covered by cldr.js matching process\n *\n * For fields with symbols representing the same type (year, month, day, etc):\n *     Most symbols have a small distance from each other.\n *         M ≅ L; E ≅ c; a ≅ b ≅ B; H ≅ k ≅ h ≅ K; ...\n *     -> Covered by cldr.js matching process\n *\n *     Width differences among fields, other than those marking text vs numeric, are given small distance from each other.\n *         MMM ≅ MMMM\n *         MM ≅ M\n *     Numeric and text fields are given a larger distance from each other.\n *         MMM ≈ MM\n *     Symbols representing substantial differences (week of year vs week of month) are given much larger a distances from each other.\n *         d ≋ D; ...\n *     Missing or extra fields cause a match to fail. (But see Missing Skeleton Fields).\n *\n *\n * For example,\n *\n *     { month: 'numeric', day: 'numeric' }\n *\n * should match\n *\n *     { month: '2-digit', day: '2-digit' }\n *\n * rather than\n *\n *     { month: 'short', day: 'numeric' }\n *\n * This makes sense because a user requesting a formatted date with numeric parts would\n * not expect to see the returned format containing narrow, short or long part names\n */\nfunction BestFitFormatMatcher (options, formats) {\n    /** Diverging: this block implements the hack for single property configuration, eg.:\n     *\n     *      `new Intl.DateTimeFormat('en', {day: 'numeric'})`\n     *\n     * should produce a single digit with the day of the month. This is needed because\n     * CLDR `availableFormats` data structure doesn't cover these cases.\n     */\n    {\n        const optionsPropNames = [];\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            if (options['[['+ property +']]'] !== undefined) {\n                optionsPropNames.push(property);\n            }\n        }\n        if (optionsPropNames.length === 1) {\n            const bestFormat = generateSyntheticFormat(optionsPropNames[0], options['[['+ optionsPropNames[0] +']]']);\n            if (bestFormat) {\n                return bestFormat;\n            }\n        }\n    }\n\n    // 1. Let removalPenalty be 120.\n    let removalPenalty = 120;\n\n    // 2. Let additionPenalty be 20.\n    let additionPenalty = 20;\n\n    // 3. Let longLessPenalty be 8.\n    let longLessPenalty = 8;\n\n    // 4. Let longMorePenalty be 6.\n    let longMorePenalty = 6;\n\n    // 5. Let shortLessPenalty be 6.\n    let shortLessPenalty = 6;\n\n    // 6. Let shortMorePenalty be 3.\n    let shortMorePenalty = 3;\n\n    let patternPenalty = 2;\n\n    let hour12Penalty = 1;\n\n    // 7. Let bestScore be -Infinity.\n    let bestScore = -Infinity;\n\n    // 8. Let bestFormat be undefined.\n    let bestFormat;\n\n    // 9. Let i be 0.\n    let i = 0;\n\n    // 10. Assert: formats is an Array object.\n\n    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument \"length\".\n    let len = formats.length;\n\n    // 12. Repeat while i < len:\n    while (i < len) {\n        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).\n        let format = formats[i];\n\n        // b. Let score be 0.\n        let score = 0;\n\n        // c. For each property shown in Table 3:\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            // i. Let optionsProp be options.[[<property>]].\n            let optionsProp = options['[['+ property +']]'];\n\n            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format\n            //     with argument property.\n            // iii. If formatPropDesc is not undefined, then\n            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.\n            let formatProp = hop.call(format, property) ? format[property] : undefined;\n\n            // Diverging: using the default properties produced by the pattern/skeleton\n            // to match it with user options, and apply a penalty\n            let patternProp = hop.call(format._, property) ? format._[property] : undefined;\n            if (optionsProp !== patternProp) {\n                score -= patternPenalty;\n            }\n\n            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by\n            //     additionPenalty.\n            if (optionsProp === undefined && formatProp !== undefined)\n                score -= additionPenalty;\n\n            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by\n            //    removalPenalty.\n            else if (optionsProp !== undefined && formatProp === undefined)\n                score -= removalPenalty;\n\n            // vi. Else\n            else {\n                // 1. Let values be the array [\"2-digit\", \"numeric\", \"narrow\", \"short\",\n                //    \"long\"].\n                let values = [ '2-digit', 'numeric', 'narrow', 'short', 'long' ];\n\n                // 2. Let optionsPropIndex be the index of optionsProp within values.\n                let optionsPropIndex = arrIndexOf.call(values, optionsProp);\n\n                // 3. Let formatPropIndex be the index of formatProp within values.\n                let formatPropIndex = arrIndexOf.call(values, formatProp);\n\n                // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).\n                let delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);\n\n                {\n                    // diverging from spec\n                    // When the bestFit argument is true, subtract additional penalty where data types are not the same\n                    if ((formatPropIndex <= 1 && optionsPropIndex >= 2) || (formatPropIndex >= 2 && optionsPropIndex <= 1)) {\n                        // 5. If delta = 2, decrease score by longMorePenalty.\n                        if (delta > 0)\n                            score -= longMorePenalty;\n                        else if (delta < 0)\n                            score -= longLessPenalty;\n                    } else {\n                        // 5. If delta = 2, decrease score by longMorePenalty.\n                        if (delta > 1)\n                            score -= shortMorePenalty;\n                        else if (delta < -1)\n                            score -= shortLessPenalty;\n                    }\n                }\n            }\n        }\n\n        {\n            // diverging to also take into consideration differences between 12 or 24 hours\n            // which is special for the best fit only.\n            if (format._.hour12 !== options.hour12) {\n                score -= hour12Penalty;\n            }\n        }\n\n        // d. If score > bestScore, then\n        if (score > bestScore) {\n            // i. Let bestScore be score.\n            bestScore = score;\n            // ii. Let bestFormat be format.\n            bestFormat = format;\n        }\n\n        // e. Increase i by 1.\n        i++;\n    }\n\n    // 13. Return bestFormat.\n    return bestFormat;\n}\n\n/* 12.2.3 */internals.DateTimeFormat = {\n    '[[availableLocales]]': [],\n    '[[relevantExtensionKeys]]': ['ca', 'nu'],\n    '[[localeData]]': {}\n};\n\n/**\n * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the\n * following steps are taken:\n */\n/* 12.2.2 */\ndefineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {\n    configurable: true,\n    writable: true,\n    value: fnBind.call(function (locales) {\n        // Bound functions only have the `this` value altered if being used as a constructor,\n        // this lets us imitate a native function that has no constructor\n        if (!hop.call(this, '[[availableLocales]]'))\n            throw new TypeError('supportedLocalesOf() is not a constructor');\n\n        // Create an object whose props can be used to restore the values of RegExp props\n        let regexpRestore = createRegExpRestore(),\n\n        // 1. If options is not provided, then let options be undefined.\n            options = arguments[1],\n\n        // 2. Let availableLocales be the value of the [[availableLocales]] internal\n        //    property of the standard built-in object that is the initial value of\n        //    Intl.NumberFormat.\n\n            availableLocales = this['[[availableLocales]]'],\n\n        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n        //    abstract operation (defined in 9.2.1) with argument locales.\n            requestedLocales = CanonicalizeLocaleList(locales);\n\n        // Restore the RegExp properties\n        regexpRestore();\n\n        // 4. Return the result of calling the SupportedLocales abstract operation\n        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,\n        //    and options.\n        return SupportedLocales(availableLocales, requestedLocales, options);\n    }, internals.NumberFormat)\n});\n\n/**\n * This named accessor property returns a function that formats a number\n * according to the effective locale and the formatting options of this\n * DateTimeFormat object.\n */\n/* 12.3.2 */defineProperty(Intl.DateTimeFormat.prototype, 'format', {\n    configurable: true,\n    get: GetFormatDateTime\n});\n\nfunction GetFormatDateTime() {\n    let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n    // Satisfy test 12.3_b\n    if (!internal || !internal['[[initializedDateTimeFormat]]'])\n        throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');\n\n    // The value of the [[Get]] attribute is a function that takes the following\n    // steps:\n\n    // 1. If the [[boundFormat]] internal property of this DateTimeFormat object\n    //    is undefined, then:\n    if (internal['[[boundFormat]]'] === undefined) {\n        // a. Let F be a Function object, with internal properties set as\n        //    specified for built-in functions in ES5, 15, or successor, and the\n        //    length property set to 0, that takes the argument date and\n        //    performs the following steps:\n        let F = function (date = undefined) {\n                //   i. If date is not provided or is undefined, then let x be the\n                //      result as if by the expression Date.now() where Date.now is\n                //      the standard built-in function defined in ES5, 15.9.4.4.\n                //  ii. Else let x be ToNumber(date).\n                // iii. Return the result of calling the FormatDateTime abstract\n                //      operation (defined below) with arguments this and x.\n                let x = date === undefined ? Date.now() : toNumber(date);\n                return FormatDateTime(this, x);\n            };\n        // b. Let bind be the standard built-in function object defined in ES5,\n        //    15.3.4.5.\n        // c. Let bf be the result of calling the [[Call]] internal method of\n        //    bind with F as the this value and an argument list containing\n        //    the single item this.\n        let bf = fnBind.call(F, this);\n        // d. Set the [[boundFormat]] internal property of this NumberFormat\n        //    object to bf.\n        internal['[[boundFormat]]'] = bf;\n    }\n    // Return the value of the [[boundFormat]] internal property of this\n    // NumberFormat object.\n    return internal['[[boundFormat]]'];\n}\n\nfunction formatToParts(date = undefined) {\n    let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n    if (!internal || !internal['[[initializedDateTimeFormat]]'])\n        throw new TypeError('`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.');\n\n    let x = date === undefined ? Date.now() : toNumber(date);\n    return FormatToPartsDateTime(this, x);\n}\n\nObject.defineProperty(Intl.DateTimeFormat.prototype, 'formatToParts', {\n  enumerable: false,\n  writable: true,\n  configurable: true,\n  value: formatToParts\n});\n\nfunction CreateDateTimeParts(dateTimeFormat, x) {\n    // 1. If x is not a finite Number, then throw a RangeError exception.\n    if (!isFinite(x))\n        throw new RangeError('Invalid valid date passed to format');\n\n    let internal = dateTimeFormat.__getInternalProperties(secret);\n\n    // Creating restore point for properties on the RegExp object... please wait\n    /* let regexpRestore = */createRegExpRestore(); // ###TODO: review this\n\n    // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.\n    let locale = internal['[[locale]]'];\n\n    // 3. Let nf be the result of creating a new NumberFormat object as if by the\n    // expression new Intl.NumberFormat([locale], {useGrouping: false}) where\n    // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.\n    let nf = new Intl.NumberFormat([locale], {useGrouping: false});\n\n    // 4. Let nf2 be the result of creating a new NumberFormat object as if by the\n    // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:\n    // false}) where Intl.NumberFormat is the standard built-in constructor defined in\n    // 11.1.3.\n    let nf2 = new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping: false});\n\n    // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined\n    // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,\n    // and the value of the [[timeZone]] internal property of dateTimeFormat.\n    let tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']);\n\n    // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.\n    let pattern = internal['[[pattern]]'];\n\n    // 7.\n    let result = new List();\n\n    // 8.\n    let index = 0;\n\n    // 9.\n    let beginIndex = pattern.indexOf('{');\n\n    // 10.\n    let endIndex = 0;\n\n    // Need the locale minus any extensions\n    let dataLocale = internal['[[dataLocale]]'];\n\n    // Need the calendar data from CLDR\n    let localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars;\n    let ca = internal['[[calendar]]'];\n\n    // 11.\n        while (beginIndex !== -1) {\n            let fv;\n            // a.\n            endIndex = pattern.indexOf('}', beginIndex);\n            // b.\n            if (endIndex === -1) {\n              throw new Error('Unclosed pattern');\n            }\n            // c.\n            if (beginIndex > index) {\n                arrPush.call(result, {\n                    type: 'literal',\n                    value: pattern.substring(index, beginIndex)\n                });\n            }\n            // d.\n            let p = pattern.substring(beginIndex + 1, endIndex);\n            // e.\n            if (dateTimeComponents.hasOwnProperty(p)) {\n              //   i. Let f be the value of the [[<p>]] internal property of dateTimeFormat.\n              let f = internal['[['+ p +']]'];\n              //  ii. Let v be the value of tm.[[<p>]].\n              let v = tm['[['+ p +']]'];\n              // iii. If p is \"year\" and v ≤ 0, then let v be 1 - v.\n              if (p === 'year' && v <= 0) {\n                v = 1 - v;\n              }\n              //  iv. If p is \"month\", then increase v by 1.\n              else if (p === 'month') {\n                v++;\n              }\n              //   v. If p is \"hour\" and the value of the [[hour12]] internal property of\n              //      dateTimeFormat is true, then\n              else if (p === 'hour' && internal['[[hour12]]'] === true) {\n                  // 1. Let v be v modulo 12.\n                  v = v % 12;\n                  // 2. If v is 0 and the value of the [[hourNo0]] internal property of\n                  //    dateTimeFormat is true, then let v be 12.\n                  if (v === 0 && internal['[[hourNo0]]'] === true) {\n                      v = 12;\n                  }\n              }\n\n              //  vi. If f is \"numeric\", then\n              if (f === 'numeric') {\n                  // 1. Let fv be the result of calling the FormatNumber abstract operation\n                  //    (defined in 11.3.2) with arguments nf and v.\n                  fv = FormatNumber(nf, v);\n              }\n              // vii. Else if f is \"2-digit\", then\n              else if (f === '2-digit') {\n                  // 1. Let fv be the result of calling the FormatNumber abstract operation\n                  //    with arguments nf2 and v.\n                  fv = FormatNumber(nf2, v);\n                  // 2. If the length of fv is greater than 2, let fv be the substring of fv\n                  //    containing the last two characters.\n                  if (fv.length > 2) {\n                      fv = fv.slice(-2);\n                  }\n              }\n              // viii. Else if f is \"narrow\", \"short\", or \"long\", then let fv be a String\n              //     value representing f in the desired form; the String value depends upon\n              //     the implementation and the effective locale and calendar of\n              //     dateTimeFormat. If p is \"month\", then the String value may also depend\n              //     on whether dateTimeFormat has a [[day]] internal property. If p is\n              //     \"timeZoneName\", then the String value may also depend on the value of\n              //     the [[inDST]] field of tm.\n              else if (f in dateWidths) {\n                switch (p) {\n                  case 'month':\n                    fv = resolveDateString(localeData, ca, 'months', f, tm['[['+ p +']]']);\n                    break;\n\n                  case 'weekday':\n                    try {\n                      fv = resolveDateString(localeData, ca, 'days', f, tm['[['+ p +']]']);\n                      // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];\n                    } catch (e) {\n                      throw new Error('Could not find weekday data for locale '+locale);\n                    }\n                    break;\n\n                  case 'timeZoneName':\n                    fv = ''; // ###TODO\n                    break;\n\n                  case 'era':\n                    try {\n                      fv = resolveDateString(localeData, ca, 'eras', f, tm['[['+ p +']]']);\n                    } catch (e) {\n                      throw new Error('Could not find era data for locale '+locale);\n                    }\n                    break;\n\n                  default:\n                    fv = tm['[['+ p +']]'];\n                }\n              }\n              // ix\n              arrPush.call(result, {\n                type: p,\n                value: fv\n              });\n            // f.\n            } else if (p === 'ampm') {\n              // i.\n              let v = tm['[[hour]]'];\n              // ii./iii.\n              fv = resolveDateString(localeData, ca, 'dayPeriods', v > 11 ? 'pm' : 'am', null);\n              // iv.\n              arrPush.call(result, {\n                type: 'dayPeriod',\n                value: fv\n              });\n            // g.\n            } else {\n              arrPush.call(result, {\n                type: 'literal',\n                value: pattern.substring(beginIndex, endIndex + 1)\n              });\n            }\n            // h.\n            index = endIndex + 1;\n            // i.\n            beginIndex = pattern.indexOf('{', index);\n        }\n        // 12.\n        if (endIndex < pattern.length - 1) {\n          arrPush.call(result, {\n            type: 'literal',\n            value: pattern.substr(endIndex + 1)\n          });\n        }\n        // 13.\n        return result;\n}\n\n/**\n * When the FormatDateTime abstract operation is called with arguments dateTimeFormat\n * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number\n * value), it returns a String value representing x (interpreted as a time value as\n * specified in ES5, 15.9.1.1) according to the effective locale and the formatting\n * options of dateTimeFormat.\n */\nexport function FormatDateTime(dateTimeFormat, x) {\n  let parts = CreateDateTimeParts(dateTimeFormat, x);\n  let result = '';\n\n  for (let i = 0; parts.length > i; i++) {\n      let part = parts[i];\n      result += part.value;\n  }\n  return result;\n}\n\nfunction FormatToPartsDateTime(dateTimeFormat, x) {\n  let parts = CreateDateTimeParts(dateTimeFormat, x);\n  let result = [];\n  for (let i = 0; parts.length > i; i++) {\n    let part = parts[i];\n    result.push({\n      type: part.type,\n      value: part.value\n    });\n  }\n  return result;\n}\n\n\n/**\n * When the ToLocalTime abstract operation is called with arguments date, calendar, and\n * timeZone, the following steps are taken:\n */\nfunction ToLocalTime(date, calendar, timeZone) {\n    // 1. Apply calendrical calculations on date for the given calendar and time zone to\n    //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.\n    //    The calculations should use best available information about the specified\n    //    calendar and time zone. If the calendar is \"gregory\", then the calculations must\n    //    match the algorithms specified in ES5, 15.9.1, except that calculations are not\n    //    bound by the restrictions on the use of best available information on time zones\n    //    for local time zone adjustment and daylight saving time adjustment imposed by\n    //    ES5, 15.9.1.7 and 15.9.1.8.\n    // ###TODO###\n    let d = new Date(date),\n        m = 'get' + (timeZone || '');\n\n    // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],\n    //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding\n    //    calculated value.\n    return new Record({\n        '[[weekday]]': d[m + 'Day'](),\n        '[[era]]'    : +(d[m + 'FullYear']() >= 0),\n        '[[year]]'   : d[m + 'FullYear'](),\n        '[[month]]'  : d[m + 'Month'](),\n        '[[day]]'    : d[m + 'Date'](),\n        '[[hour]]'   : d[m + 'Hours'](),\n        '[[minute]]' : d[m + 'Minutes'](),\n        '[[second]]' : d[m + 'Seconds'](),\n        '[[inDST]]'  : false // ###TODO###\n    });\n}\n\n/**\n * The function returns a new object whose properties and attributes are set as if\n * constructed by an object literal assigning to each of the following properties the\n * value of the corresponding internal property of this DateTimeFormat object (see 12.4):\n * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,\n * hour, minute, second, and timeZoneName. Properties whose corresponding internal\n * properties are not present are not assigned.\n */\n/* 12.3.3 */defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {\n    writable: true,\n    configurable: true,\n    value: function () {\n        let prop,\n            descs = new Record(),\n            props = [\n                'locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday',\n                'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'\n            ],\n            internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 12.3_b\n        if (!internal || !internal['[[initializedDateTimeFormat]]'])\n            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');\n\n        for (let i = 0, max = props.length; i < max; i++) {\n            if (hop.call(internal, prop = '[[' + props[i] + ']]'))\n                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };\n        }\n\n        return objCreate({}, descs);\n    }\n});\n","// Sect 13 Locale Sensitive Functions of the ECMAScript Language Specification\n// ===========================================================================\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    FormatNumber,\n    NumberFormatConstructor\n} from \"./11.numberformat.js\";\n\nimport {\n    ToDateTimeOptions,\n    DateTimeFormatConstructor,\n    FormatDateTime\n} from \"./12.datetimeformat.js\";\n\nlet ls = Intl.__localeSensitiveProtos = {\n    Number: {},\n    Date:   {}\n};\n\n/**\n * When the toLocaleString method is called with optional arguments locales and options,\n * the following steps are taken:\n */\n/* 13.2.1 */ls.Number.toLocaleString = function () {\n    // Satisfy test 13.2.1_1\n    if (Object.prototype.toString.call(this) !== '[object Number]')\n        throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');\n\n    // 1. Let x be this Number value (as defined in ES5, 15.7.4).\n    // 2. If locales is not provided, then let locales be undefined.\n    // 3. If options is not provided, then let options be undefined.\n    // 4. Let numberFormat be the result of creating a new object as if by the\n    //    expression new Intl.NumberFormat(locales, options) where\n    //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.\n    // 5. Return the result of calling the FormatNumber abstract operation\n    //    (defined in 11.3.2) with arguments numberFormat and x.\n    return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);\n};\n\n/**\n * When the toLocaleString method is called with optional arguments locales and options,\n * the following steps are taken:\n */\n/* 13.3.1 */ls.Date.toLocaleString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0];\n\n    // 4. If options is not provided, then let options be undefined.\n    let options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"any\", and \"all\".\n    options = ToDateTimeOptions(options, 'any', 'all');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\n/**\n * When the toLocaleDateString method is called with optional arguments locales and\n * options, the following steps are taken:\n */\n/* 13.3.2 */ls.Date.toLocaleDateString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0],\n\n    // 4. If options is not provided, then let options be undefined.\n    options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"date\", and \"date\".\n    options = ToDateTimeOptions(options, 'date', 'date');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\n/**\n * When the toLocaleTimeString method is called with optional arguments locales and\n * options, the following steps are taken:\n */\n/* 13.3.3 */ls.Date.toLocaleTimeString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0];\n\n    // 4. If options is not provided, then let options be undefined.\n    let options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"time\", and \"time\".\n    options = ToDateTimeOptions(options, 'time', 'time');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\nexport default ls;\n","import plurals from 'make-plural';\n\nimport {\n    Intl\n} from './8.intl.js';\n\nimport {\n    GetOption,\n    SupportedLocales,\n    ResolveLocale,\n    CanonicalizeLocaleList\n} from './9.negotiation.js';\n\nimport {\n    SetNumberFormatDigitOptions\n} from './11.numberformat.js';\n\nimport {\n    internals,\n    getInternalProperties,\n    Record,\n    List,\n    hop,\n    objCreate,\n    fnBind,\n    toObject,\n    secret,\n    createRegExpRestore,\n    defineProperty\n} from './util.js';\n\nexport function PluralRules() {\n    let locales = arguments[0];\n    let options = arguments[1];\n\n    if (!this || this === Intl) {\n        return new Intl.PluralRules(locales, options);\n    }\n    return InitializePluralRules(toObject(this), locales, options);\n}\n\ndefineProperty(Intl, 'PluralRules', {\n    configurable: true,\n    writable: true,\n    value: PluralRules\n});\n\ndefineProperty(PluralRules, 'prototype', {\n    writable: false\n});\n\nexport function InitializePluralRules (pluralRules, locales, options) {\n    let internal = getInternalProperties(pluralRules);\n\n    // 1. If pluralRules.[[InitializedIntlObject]] is true, throw a TypeError exception.\n    if (internal['[[InitializedIntlObject]]'] === true)\n        throw new TypeError('`this` object has already been initialized as an Intl object');\n\n    defineProperty(pluralRules, '__getInternalProperties', {\n        value: function () {\n            // NOTE: Non-standard, for internal use only\n            if (arguments[0] === secret)\n                return internal;\n        }\n    });\n\n    // 2. Set pluralRules.[[InitializedIntlObject]] to true.\n    internal['[[InitializedIntlObject]]'] = true;\n\n    // 3. Let requestedLocales be ? CanonicalizeLocaleList(locales).\n    let requestedLocales = CanonicalizeLocaleList(locales);\n\n    // 4. If options is undefined, then\n    if (options === undefined)\n        // a. Let options be ObjectCreate(%ObjectPrototype%).\n        options = {};\n    // 5. Else\n    else\n        // a. Let options be ? ToObject(options).\n        options = toObject(options);\n\n    // 6. Let t be ? GetOption(options, \"type\", \"string\", « \"cardinal\", \"ordinal\" », \"cardinal\").\n    let t = GetOption(options, 'type', 'string', new List('cardinal', 'ordinal'), 'cardinal');\n\n    // 7 . Set pluralRules.[[Type]] to t.\n    internal['[[type]]'] = t;\n\n    // 8. Let opt be a new Record.\n    let opt = new Record();\n\n    // 9. Let matcher be ? GetOption(options, \"localeMatcher\", \"string\", « \"lookup\", \"best fit\" », \"best fit\").\n    let matcher =  GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');\n    // 10. Set opt.[[localeMatcher]] to matcher.\n    opt['[[localeMatcher]]'] = matcher;\n\n    // 11. Perform ? SetNumberFormatOptions(pluralRules, options, 0).\n    SetNumberFormatDigitOptions(internals, options, 0);\n\n    // 12. If pluralRules.[[maximumFractionDigits]] is undefined, then\n    if (internals['[[maximumFractionDigits]]'] === undefined) {\n        // a. Set pluralRules.[[maximumFractionDigits]] to max(pluralRules.[[minimumFractionDigits]], 3).\n        internals['[[maximumFractionDigits]]'] = Math.max(internals['[[minimumFractionDigits]]'], 3);\n    }\n\n    let localeData = internals.PluralRules['[[localeData]]'];\n\n    // 13. Let r be ResolveLocale(%PluralRules%.[[AvailableLocales]], requestedLocales, opt).\n    let r = ResolveLocale(\n        internals.PluralRules['[[availableLocales]]'], requestedLocales,\n        opt, internals.PluralRules['[[relevantExtensionKeys]]'], localeData\n    );\n\n    // 14. Set pluralRules.[[Locale]] to the value of r.[[Locale]].\n    internal['[[locale]]'] = r['[[locale]]'];\n\n    // 15. Set pluralRules.[[InitializedPluralRules]] to true.\n    internal['[[InitializedPluralRules]]'] = true;\n\n    // 16. Return pluralRules.\n    return pluralRules;\n}\n\n// make-plurals handls GetOperands\nfunction PluralRuleSelection(locale, type, s) {\n    for (let l = locale; l; l = l.replace(/[-_]?[^-_]*$/, '')) {\n        const pf = plurals[l];\n        if (pf) return pf(s, type === 'ordinal');\n    }\n    return 'other';\n}\n\nfunction ResolvePlural(pluralRules, n) {\n    // 1. Assert: Type(pluralRules) is Object and pluralRules has an [[InitializedPluralRules]] internal slot whose value is true.\n\n    // 2. Assert: Type(n) is Number.\n\n    // 3. If isFinite(n) is false, then\n    if (!Number.isFinite(n)) {\n        // a. Return \"other\".\n        return 'other';\n    }\n\n    let internal = getInternalProperties(pluralRules);\n\n    // 4. Let locale be pluralRules.[[Locale]].\n    let locale = internal['[[locale]]'];\n\n    // 5. Let type be pluralRules.[[Type]].\n    let type = internal['[[type]]'];\n\n    // 8. Return ? PluralRuleSelection(locale, type, n, operands).\n    return PluralRuleSelection(locale, type, n);\n}\n\ninternals.PluralRules = {\n    '[[availableLocales]]' : Object.keys(plurals),\n    '[[relevantExtensionKeys]]': [],\n    '[[localeData]]': {}\n};\n\ndefineProperty(Intl.PluralRules, 'supportedLocalesOf', {\n    configurable: true,\n    writable: true,\n    value: fnBind.call(function (locales) {\n        // Bound functions only have the `this` value altered if being used as a constructor,\n        // this lets us imitate a native function that has no constructor\n        if (!hop.call(this, '[[availableLocales]]'))\n            throw new TypeError('supportedLocalesOf() is not a constructor');\n\n        // Create an object whose props can be used to restore the values of RegExp props\n        let regexpRestore = createRegExpRestore(),\n\n            // 1. If options is not provided, then let options be undefined.\n            options = arguments[1],\n\n            // 2. Let availableLocales be the value of the [[availableLocales]] internal\n            //    property of the standard built-in object that is the initial value of\n            //    Intl.NumberFormat.\n\n            availableLocales = this['[[availableLocales]]'],\n\n            // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n            //    abstract operation (defined in 9.2.1) with argument locales.\n            requestedLocales = CanonicalizeLocaleList(locales);\n\n        // Restore the RegExp properties\n        regexpRestore();\n\n        // 4. Return the result of calling the SupportedLocales abstract operation\n        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,\n        //    and options.\n        return SupportedLocales(availableLocales, requestedLocales, options);\n    }, internals.PluralRules)\n});\n\n\n\ndefineProperty(Intl.PluralRules.prototype, 'select', {\n    configurable: true,\n    value: function(value) {\n        let pluralRules = this;\n        let n = Number(value);\n        return ResolvePlural(pluralRules, n);\n    }\n});\n\ndefineProperty(Intl.PluralRules.prototype, 'resolvedOptions', {\n    configurable: true,\n    writable: true,\n    value: function() {\n        let prop,\n            descs = new Record(),\n            props = [\n                'locale', 'type',\n                'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits',\n                'minimumSignificantDigits', 'maximumSignificantDigits'\n            ],\n            internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        if (!internal || !internal['[[InitializedPluralRules]]'])\n            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.PluralRules object.');\n\n        for (let i = 0, max = props.length; i < max; i++) {\n            if (hop.call(internal, prop = '[['+ props[i] +']]'))\n                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };\n        }\n\n        return objCreate({}, descs);\n    }\n});\n","/**\n * @license Copyright 2013 Andy Earnshaw, MIT License\n *\n * Implements the ECMAScript Internationalization API in ES5-compatible environments,\n * following the ECMA-402 specification as closely as possible\n *\n * ECMA-402: http://ecma-international.org/ecma-402/1.0/\n *\n * CLDR format locale data should be provided using IntlPolyfill.__addLocaleData().\n */\n\nimport { defineProperty, hop, arrPush, arrShift, internals } from \"./util.js\"\n\nimport {\n  IsStructurallyValidLanguageTag,\n  defaultLocale,\n  setDefaultLocale\n} from \"./6.locales-currencies-tz.js\"\n\nimport { Intl } from \"./8.intl.js\"\n\nimport \"./11.numberformat.js\"\n\nimport \"./12.datetimeformat.js\"\n\nimport ls from \"./13.locale-sensitive-functions.js\"\n\nimport \"./14.pluralrules.js\"\n\ndefineProperty(Intl, \"__applyLocaleSensitivePrototypes\", {\n  writable: true,\n  configurable: true,\n  value() {\n    defineProperty(Number.prototype, \"toLocaleString\", {\n      writable: true,\n      configurable: true,\n      value: ls.Number.toLocaleString\n    })\n\n    // Need this here for IE 8, to avoid the _DontEnum_ bug\n    defineProperty(Date.prototype, \"toLocaleString\", {\n      writable: true,\n      configurable: true,\n      value: ls.Date.toLocaleString\n    })\n\n    for (let k in ls.Date) {\n      if (hop.call(ls.Date, k))\n        defineProperty(Date.prototype, k, {\n          writable: true,\n          configurable: true,\n          value: ls.Date[k]\n        })\n    }\n  }\n})\n\n/**\n * Can't really ship a single script with data for hundreds of locales, so we provide\n * this __addLocaleData method as a means for the developer to add the data on an\n * as-needed basis\n */\ndefineProperty(Intl, \"__addLocaleData\", {\n  value(data) {\n    if (!IsStructurallyValidLanguageTag(data.locale))\n      throw new Error(\n        `Invalid language tag \"${data.locale}\" when calling __addLocaleData(\"${data.locale}\", ...) to register new locale data.`\n      )\n\n    addLocaleData(data, data.locale)\n  }\n})\n\nfunction addLocaleData(data, tag) {\n  // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present\n  if (!data.number)\n    throw new Error(\n      \"Object passed doesn't contain locale data for Intl.NumberFormat\"\n    )\n\n  let locale,\n    locales = [ tag ],\n    parts = tag.split(\"-\")\n\n  // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc\n  if (parts.length > 2 && parts[1].length === 4)\n    arrPush.call(locales, `${parts[0]}-${parts[2]}`)\n\n  while (locale = arrShift.call(locales)) {\n    // Add to NumberFormat internal properties as per 11.2.3\n    arrPush.call(internals.NumberFormat[\"[[availableLocales]]\"], locale)\n    internals.NumberFormat[\"[[localeData]]\"][locale] = data.number\n\n    // ...and DateTimeFormat internal properties as per 12.2.3\n    if (data.date) {\n      data.date.nu = data.number.nu\n      arrPush.call(internals.DateTimeFormat[\"[[availableLocales]]\"], locale)\n      internals.DateTimeFormat[\"[[localeData]]\"][locale] = data.date\n    }\n  }\n\n  // If this is the first set of locale data added, make it the default\n  if (defaultLocale === undefined) setDefaultLocale(tag)\n}\n\ndefineProperty(Intl, \"__disableRegExpRestore\", {\n  value() {\n    internals.disableRegExpRestore = true\n  }\n})\n\nexport default Intl\n"],"names":["realDefineProp","sentinel","Object","defineProperty","get","writable","a","prototype","e","es3","__defineGetter__","hop","hasOwnProperty","obj","name","desc","call","value","arrIndexOf","Array","indexOf","search","t","length","i","arguments","max","objCreate","create","proto","props","F","k","arrSlice","slice","arrConcat","concat","arrPush","push","arrJoin","join","arrShift","shift","fnBind","Function","bind","thisObj","fn","args","apply","internals","secret","Math","random","log10Floor","n","log10","floor","x","round","log","LOG10E","Record","enumerable","configurable","List","createRegExpRestore","disableRegExpRestore","regExpCache","lastMatch","RegExp","leftContext","multiline","input","has","esc","replace","exprStr","m","substring","match","expr","lastIndex","exec","toObject","arg","TypeError","toNumber","toInteger","number","isNaN","Infinity","abs","toLength","len","pow","min","getInternalProperties","__getInternalProperties","extlang","language","script","region","variant","singleton","extension","privateuse","irregular","regular","grandfathered","langtag","expBCP47Syntax","expVariantDupes","expSingletonDupes","expExtSequences","defaultLocale","setDefaultLocale","locale","redundantTags","tags","subtags","BU","DD","FX","TP","YD","ZR","heploc","iw","ji","jw","mo","ayx","bjd","ccq","cjr","cka","cmk","drh","drw","gav","hrr","ibi","kgh","lcq","mst","myt","sca","tie","tkk","tlw","tnf","ybd","yma","extLang","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","aed","aen","afb","afg","ajp","apc","apd","arb","arq","ars","ary","arz","ase","asf","asp","asq","asw","auz","avl","ayh","ayl","ayn","ayp","bbz","bfi","bfk","bjn","bog","bqn","bqy","btj","bve","bvl","bvu","bzs","cdo","cds","cjy","cmn","coa","cpx","csc","csd","cse","csf","csg","csl","csn","csq","csr","czh","czo","doq","dse","dsl","dup","ecs","esl","esn","eso","eth","fcs","fse","fsl","fss","gan","gds","gom","gse","gsg","gsm","gss","gus","hab","haf","hak","hds","hji","hks","hos","hps","hsh","hsl","hsn","icl","ils","inl","ins","ise","isg","isr","jak","jax","jcs","jhs","jls","jos","jsl","jus","kgi","knn","kvb","kvk","kvr","kxd","lbs","lce","lcf","liw","lls","lsg","lsl","lso","lsp","lst","lsy","ltg","lvs","lzh","mdl","meo","mfa","mfb","mfs","mnp","mqg","mre","msd","msi","msr","mui","mzc","mzg","mzy","nan","nbs","ncs","nsi","nsl","nsp","nsr","nzs","okl","orn","ors","pel","pga","pks","prl","prz","psc","psd","pse","psg","psl","pso","psp","psr","pys","rms","rsi","rsl","sdl","sfb","sfs","sgg","sgx","shu","slf","sls","sqk","sqs","ssh","ssp","ssr","svk","swc","swh","swl","syy","tmw","tse","tsm","tsq","tss","tsy","tza","ugn","ugy","ukl","uks","urk","uzn","uzs","vgt","vkk","vkt","vsi","vsl","vsv","wuu","xki","xml","xmm","xms","yds","ysl","yue","zib","zlm","zmi","zsl","zsm","toLatinUpperCase","str","ch","charAt","toUpperCase","IsStructurallyValidLanguageTag","test","CanonicalizeLanguageTag","parts","toLowerCase","split","sort","source","DefaultLocale","expCurrencyCode","IsWellFormedCurrencyCode","currency","normalized","expUnicodeExSeq","CanonicalizeLocaleList","locales","seen","O","Pk","kPresent","kValue","tag","RangeError","BestAvailableLocale","availableLocales","candidate","pos","lastIndexOf","LookupMatcher","requestedLocales","availableLocale","noExtensionsLocale","result","extensionIndex","BestFitMatcher","UnicodeExtensionSubtags","size","extensionSubtags","attribute","q","p","c","codePointAt","type","key","attr","tail","ResolveLocale","options","relevantExtensionKeys","localeData","ReferenceError","matcher","r","foundLocale","extensionSubtagsLength","supportedExtension","foundLocaleData","keyLocaleData","supportedExtensionAddition","keyPos","requestedValue","valuePos","optionsValue","privateIndex","preExtension","postExtension","LookupSupportedLocales","subset","subsetArray","BestFitSupportedLocales","SupportedLocales","localeMatcher","P","ex","GetOption","property","values","fallback","GetNumberOption","minimum","maximum","Intl","getCanonicalLocales","ll","currencyMinorUnits","BHD","BYR","XOF","BIF","XAF","CLF","CLP","KMF","DJF","XPF","GNF","ISK","IQD","JPY","JOD","KRW","KWD","LYD","OMR","PYG","RWF","TND","UGX","UYI","VUV","VND","NumberFormatConstructor","NumberFormat","InitializeNumberFormat","SetNumberFormatDigitOptions","intlObj","mnfdDefault","mnid","mnfd","mxfd","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","numberFormat","internal","regexpRestore","opt","dataLocale","s","cDigits","CurrencyDigits","cd","g","dataLocaleData","patterns","stylePatterns","positivePattern","negativePattern","format","GetFormatNumber","FormatNumber","bf","formatToParts","FormatNumberToParts","PartitionNumberPattern","part","FormatNumberToString","ToRawPrecision","ToRawFixed","nums","data","ild","symbols","latn","pattern","beginIndex","endIndex","nextIndex","Error","literal","isFinite","infinity","numSys","digits","digit","integer","fraction","decimalSepIndex","groupSepSymbol","group","groups","pgSize","primaryGroupSize","sgSize","secondaryGroupSize","end","idx","start","integerGroup","decimalSepSymbol","decimal","plusSignSymbol","plusSign","minusSignSymbol","minusSign","percentSignSymbol","percentSign","currencies","minPrecision","maxPrecision","f","exp","LN10","cut","minInteger","minFraction","maxFraction","toFixed","int","z","b","arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","prop","descs","expDTComponents","expPatternTrimmer","unwantedDTCs","dtKeys","tmKeys","isDateFormatOnly","isTimeFormatOnly","joinDateAndTimeFormats","dateFormatObj","timeFormatObj","o","_","j","computeFinalPatterns","formatObj","pattern12","extendedPattern","$0","expDTComponentsMeta","era","year","quarter","month","week","day","weekday","hour12","hour","minute","second","timeZoneName","createDateTimeFormat","skeleton","originalPattern","createDateTimeFormats","formats","availableFormats","timeFormats","dateFormats","computed","timeRelatedFormats","dateRelatedFormats","full","medium","validSyntheticProps","numeric","narrow","generateSyntheticFormat","propName","propValue","dateWidths","resolveDateString","ca","component","width","gregory","alts","resolved","DateTimeFormatConstructor","DateTimeFormat","InitializeDateTimeFormat","dateTimeFormat","ToDateTimeOptions","tz","timeZone","dateTimeComponents","bestFormat","ToDateTimeFormats","BasicFormatMatcher","hr12","BestFitFormatMatcher","hourNo0","GetFormatDateTime","toString","required","defaults","opt2","needDefaults","bestScore","score","optionsProp","formatProp","optionsPropIndex","formatPropIndex","delta","optionsPropNames","patternProp","date","Date","now","FormatDateTime","FormatToPartsDateTime","CreateDateTimeParts","nf","useGrouping","nf2","minimumIntegerDigits","tm","ToLocalTime","index","calendars","fv","v","substr","calendar","d","ls","__localeSensitiveProtos","Number","toLocaleString","toLocaleDateString","toLocaleTimeString","PluralRules","InitializePluralRules","pluralRules","PluralRuleSelection","l","pf","plurals","ResolvePlural","keys","addLocaleData","nu"],"mappings":"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"}