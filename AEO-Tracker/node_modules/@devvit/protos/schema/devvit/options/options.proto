syntax = "proto3";

package devvit.options;

import "google/protobuf/descriptor.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/options";
option java_package = "com.reddit.devvit.options";

// Data Tier defines the level of data delivered to the client
// FIRST_DATA_TIER is the least amount of data, THIRD_DATA_TIER is the most
enum DataTier {
  UNKNOWN_DATA_TIER = 0;
  FIRST_DATA_TIER = 1;
  SECOND_DATA_TIER = 2;
  THIRD_DATA_TIER = 3;
}

enum Selector {
  DEFAULT = 0 [deprecated = true];
  TARGET_USER = 1 [deprecated = true];
  MOD_ACTION_TYPE = 2 [deprecated = true]; // TODO(logan.hanks): Replace this with a field path string
}

extend google.protobuf.MessageOptions {
  // Specifies the source/action/noun of v2 events that this message can be hydrated from.
  repeated EventSpec trigger = 50000;

  // Firehose data tier for a message
  optional DataTier msg_data_tier = 50001;

  optional string source = 51234; // denotes the v2 event "source" field
  optional string action = 51235; // denotes the v2 event "action" field
  optional string noun = 51236; // denotes the v2 event "noun" field
}

extend google.protobuf.FieldOptions {
  // Firehose data tier for a message field
  optional DataTier field_data_tier = 50000;

  // Provides a hint for hydrating a trigger event from a v2 event.
  optional Selector selector = 50001 [deprecated = true];

  // the path to hydrate the property from from a v2 event
  optional string v2_event_path = 50002;

  // the path to hydrate the property from from a trigger event
  optional string trigger_evt_path = 50003;

  // hydrate using a path to field within the same message (after that field has been hydrated)
  optional string secondary_hydration_path = 50004;

  // where to deliver a trigger event to
  optional DeliverTo deliver_to = 50005;

  // firehose event type, maps directly to the stream name in redis
  optional FirehoseEvent firehose_event_type = 50006;
}

message EventSpec {
  string source = 1;
  string action = 2;
  string noun = 3;
}

// Delivery locations for events from snooron-worker
// Nested in a msg since proto doesn't like repeated enums
message DeliverTo {
  repeated DeliveryLocation to = 1;
}

enum DeliveryLocation {
  UNKNOWN_DELIVERY_LOCATION = 0;
  GATEWAY = 1;
  FIREHOSE = 2;
}

// Event types for firehose
// Also maps directly to the stream name in redis
enum FirehoseEvent {
  UNKNOWN_FIREHOSE_EVENT = 0;
  POST_CREATE = 1;
  POST_EDIT = 2;
  POST_DELETE = 3;
  COMMENT_CREATE = 4;
  COMMENT_EDIT = 5;
  COMMENT_DELETE = 6;
  VOTE = 7;
  MOD_ACTION = 8;
  ACCOUNT_DELETE = 9;
  ERROR = 10;
  WARNING = 11;
  POST_APPROVE = 12;
  COMMENT_APPROVE = 13;
}
