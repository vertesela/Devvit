/**
 * #clock.ts
 *
 * @packageDocumentation
 */
import { Metadata, MethodDefinition } from "@lib/Types.js";
import { Empty } from '../../../google/protobuf/empty.js';
import { Timestamp } from '../../../google/protobuf/timestamp.js';
export interface Clock {
    Now(request: Empty, metadata?: Metadata): Promise<Timestamp>;
}
export declare class ClockClientImpl implements Clock {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    Now(request: Empty): Promise<Timestamp>;
}
export type ClockDefinition = typeof ClockDefinition;
export declare const ClockDefinition: {
    name: 'Clock';
    fullName: string;
    methods: {
        [methodName: string]: MethodDefinition & {
            options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=clock.d.ts.map