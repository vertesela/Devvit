/**
 * #subreddits_svc.ts
 *
 * @packageDocumentation
 */
import { Metadata, MethodDefinition } from "@lib/Types.js";
import { Empty } from '../../../../google/protobuf/empty.js';
import { StringValue } from '../../../../google/protobuf/wrappers.js';
import { JsonStatus, Listing } from '../common/common_msg.js';
import { AboutWhereRequest, BasicSearchRequest, BasicSubredditRequest, BasicWhereRequest, DeleteSrImgRequest, SearchRedditNamesResponse, SearchSubredditsResponse, SiteAdminRequest, StickyRequest, StickyResponse, SubmitTextResponse, SubredditAboutEditRequest, SubredditAboutEditResponse, SubredditAboutResponse, SubredditAboutRulesResponse, SubredditAboutTrafficResponse, SubredditAddRemovalReasonRequest, SubredditAddRemovalReasonResponse, SubredditAutocompleteRequest, SubredditAutocompleteResponse, SubredditGetRemovalReasonsRequest, SubredditGetRemovalReasonsResponse, SubredditPostRequirementsResponse, SubredditsSearchRequest, SubredditsSearchResponse, SubredditStylesheetRequest, SubscribeRequest, UploadSrImgRequest, UploadSrImgResponse, UserSearchResponse, UsersSearchRequest } from './subreddits_msg.js';
/** SUBREDDITS - https://www.reddit.com/dev/api#section_subreddits */
export interface Subreddits {
    /** https://www.reddit.com/dev/api#GET_about_\{where\} */
    AboutWhere(request: AboutWhereRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_banner */
    DeleteSrBanner(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_header */
    DeleteSrHeader(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_icon */
    DeleteSrIcon(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_img */
    DeleteSrImg(request: DeleteSrImgRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_search_reddit_names */
    SearchRedditNames(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchRedditNamesResponse>;
    /** https://www.reddit.com/dev/api#POST_api_search_subreddits */
    SearchSubreddits(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchSubredditsResponse>;
    /** https://www.reddit.com/dev/api#POST_api_site_admin */
    SiteAdmin(request: SiteAdminRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#GET_api_submit_text */
    SubmitText(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubmitTextResponse>;
    /** https://www.reddit.com/dev/api#GET_api_subreddit_autocomplete_v2 */
    SubredditAutocomplete(request: SubredditAutocompleteRequest, metadata?: Metadata): Promise<SubredditAutocompleteResponse>;
    /** https://www.reddit.com/dev/api#POST_api_subreddit_stylesheet */
    SubredditStylesheet(request: SubredditStylesheetRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_subscribe */
    Subscribe(request: SubscribeRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_upload_sr_img */
    UploadSrImg(request: UploadSrImgRequest, metadata?: Metadata): Promise<UploadSrImgResponse>;
    /** https://www.reddit.com/dev/api#GET_api_v1_\{subreddit\}_post_requirements */
    SubredditPostRequirements(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditPostRequirementsResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about */
    SubredditAbout(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_edit */
    SubredditAboutEdit(request: SubredditAboutEditRequest, metadata?: Metadata): Promise<SubredditAboutEditResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_rules */
    SubredditAboutRules(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutRulesResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_traffic */
    SubredditAboutTraffic(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutTrafficResponse>;
    /** https://www.reddit.com/dev/api#GET_sidebar */
    Sidebar(request: BasicSubredditRequest, metadata?: Metadata): Promise<StringValue>;
    /** https://www.reddit.com/dev/api#GET_sticky */
    Sticky(request: StickyRequest, metadata?: Metadata): Promise<StickyResponse>;
    /** https://www.reddit.com/dev/api#GET_subreddits_mine_\{where\} */
    SubredditsMineWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<Listing>;
    /**
     * https://www.reddit.com/dev/api#GET_subreddits_search
     * Make Wrapped
     */
    SubredditsSearch(request: SubredditsSearchRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_subreddits_\{where\} */
    SubredditsWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_users_search */
    UsersSearch(request: UsersSearchRequest, metadata?: Metadata): Promise<UserSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_users_\{where\} */
    UsersWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /**
     * Add a removal reason to a subreddit.
     *
     * POST /api/v1/{subreddit}/removal_reasons
     */
    SubredditAddRemovalReason(request: SubredditAddRemovalReasonRequest, metadata?: Metadata): Promise<SubredditAddRemovalReasonResponse>;
    /**
     * Get the list of subreddit's removal reasons.
     *
     * GET /api/v1/{subreddit}/removal_reasons
     */
    SubredditGetRemovalReasons(request: SubredditGetRemovalReasonsRequest, metadata?: Metadata): Promise<SubredditGetRemovalReasonsResponse>;
}
export declare class SubredditsClientImpl implements Subreddits {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    AboutWhere(request: AboutWhereRequest): Promise<Listing>;
    DeleteSrBanner(request: BasicSubredditRequest): Promise<JsonStatus>;
    DeleteSrHeader(request: BasicSubredditRequest): Promise<JsonStatus>;
    DeleteSrIcon(request: BasicSubredditRequest): Promise<JsonStatus>;
    DeleteSrImg(request: DeleteSrImgRequest): Promise<JsonStatus>;
    SearchRedditNames(request: BasicSearchRequest): Promise<SearchRedditNamesResponse>;
    SearchSubreddits(request: BasicSearchRequest): Promise<SearchSubredditsResponse>;
    SiteAdmin(request: SiteAdminRequest): Promise<JsonStatus>;
    SubmitText(request: BasicSubredditRequest): Promise<SubmitTextResponse>;
    SubredditAutocomplete(request: SubredditAutocompleteRequest): Promise<SubredditAutocompleteResponse>;
    SubredditStylesheet(request: SubredditStylesheetRequest): Promise<JsonStatus>;
    Subscribe(request: SubscribeRequest): Promise<Empty>;
    UploadSrImg(request: UploadSrImgRequest): Promise<UploadSrImgResponse>;
    SubredditPostRequirements(request: BasicSubredditRequest): Promise<SubredditPostRequirementsResponse>;
    SubredditAbout(request: BasicSubredditRequest): Promise<SubredditAboutResponse>;
    SubredditAboutEdit(request: SubredditAboutEditRequest): Promise<SubredditAboutEditResponse>;
    SubredditAboutRules(request: BasicSubredditRequest): Promise<SubredditAboutRulesResponse>;
    SubredditAboutTraffic(request: BasicSubredditRequest): Promise<SubredditAboutTrafficResponse>;
    Sidebar(request: BasicSubredditRequest): Promise<StringValue>;
    Sticky(request: StickyRequest): Promise<StickyResponse>;
    SubredditsMineWhere(request: BasicWhereRequest): Promise<Listing>;
    SubredditsSearch(request: SubredditsSearchRequest): Promise<SubredditsSearchResponse>;
    SubredditsWhere(request: BasicWhereRequest): Promise<SubredditsSearchResponse>;
    UsersSearch(request: UsersSearchRequest): Promise<UserSearchResponse>;
    UsersWhere(request: BasicWhereRequest): Promise<SubredditsSearchResponse>;
    SubredditAddRemovalReason(request: SubredditAddRemovalReasonRequest): Promise<SubredditAddRemovalReasonResponse>;
    SubredditGetRemovalReasons(request: SubredditGetRemovalReasonsRequest): Promise<SubredditGetRemovalReasonsResponse>;
}
/** SUBREDDITS - https://www.reddit.com/dev/api#section_subreddits */
export type SubredditsDefinition = typeof SubredditsDefinition;
export declare const SubredditsDefinition: {
    name: 'Subreddits';
    fullName: string;
    methods: {
        [methodName: string]: MethodDefinition & {
            options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=subreddits_svc.d.ts.map