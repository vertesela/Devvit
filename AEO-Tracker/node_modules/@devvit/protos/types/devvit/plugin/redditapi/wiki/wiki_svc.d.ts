/**
 * #wiki_svc.ts
 *
 * @packageDocumentation
 */
import { Metadata, MethodDefinition } from "@lib/Types.js";
import { Empty } from '../../../../google/protobuf/empty.js';
import { AllowEditorRequest, EditWikiPageRequest, GetWikiPageRequest, GetWikiPageResponse, GetWikiPageRevisionsRequest, GetWikiPageSettingsRequest, GetWikiPagesRequest, GetWikiPagesResponse, GetWikiRevisionsRequest, HideWikiPageRevisionRequest, HideWikiPageRevisionResponse, RevertWikiPageRequest, UpdateWikiPageSettingsRequest, WikiPageRevisionListing, WikiPageSettings } from './wiki_msg.js';
/** WIKI - https://www.reddit.com/dev/api#section_wiki */
export interface Wiki {
    /**
     * Get a list of wiki pages for a subreddit
     *
     * @see {@link https://www.reddit.com/dev/api#GET_wiki_pages}
     */
    GetWikiPages(request: GetWikiPagesRequest, metadata?: Metadata): Promise<GetWikiPagesResponse>;
    /**
     * Get a wiki page
     *
     * @see {@link https://www.reddit.com/dev/api#GET_wiki_\{page\}}
     */
    GetWikiPage(request: GetWikiPageRequest, metadata?: Metadata): Promise<GetWikiPageResponse>;
    /**
     * Edit wiki page
     *
     * @see {@link https://www.reddit.com/dev/api#POST_api_wiki_edit}
     */
    EditWikiPage(request: EditWikiPageRequest, metadata?: Metadata): Promise<Empty>;
    /**
     * Hide a wiki page revision
     *
     * @see {@link https://www.reddit.com/dev/api#POST_api_wiki_hide}
     */
    HideWikiPageRevision(request: HideWikiPageRevisionRequest, metadata?: Metadata): Promise<HideWikiPageRevisionResponse>;
    /**
     * Get a list of revisions of a wiki page
     *
     * @see {@link https://www.reddit.com/dev/api#GET_wiki_revisions_\{page\}}
     */
    GetWikiPageRevisions(request: GetWikiPageRevisionsRequest, metadata?: Metadata): Promise<WikiPageRevisionListing>;
    /**
     * Retrieve a list of recently changed wiki pages in this subreddit
     *
     * @see {@link https://www.reddit.com/dev/api#GET_wiki_revisions}
     */
    GetWikiRevisions(request: GetWikiRevisionsRequest, metadata?: Metadata): Promise<WikiPageRevisionListing>;
    /**
     * Revert a wiki page to revision
     *
     * @see {@link https://www.reddit.com/dev/api#POST_api_wiki_revert}
     */
    RevertWikiPage(request: RevertWikiPageRequest, metadata?: Metadata): Promise<Empty>;
    /**
     * Retrieve the current permission settings for page
     *
     * @see {@link https://www.reddit.com/dev/api#GET_wiki_settings_\{page\}}
     */
    GetWikiPageSettings(request: GetWikiPageSettingsRequest, metadata?: Metadata): Promise<WikiPageSettings>;
    /**
     * Update the permissions and visibility of wiki page
     *
     * @see {@link https://www.reddit.com/dev/api#POST_wiki_settings_\{page\}}
     */
    UpdateWikiPageSettings(request: UpdateWikiPageSettingsRequest, metadata?: Metadata): Promise<WikiPageSettings>;
    /**
     * Allow/deny username to edit this wiki page
     * Note act must be either "add" or "del"
     *
     * @see {@link https://www.reddit.com/dev/api#POST_api_wiki_alloweditor_\{act\}}
     */
    AllowEditor(request: AllowEditorRequest, metadata?: Metadata): Promise<Empty>;
}
export declare class WikiClientImpl implements Wiki {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    GetWikiPages(request: GetWikiPagesRequest): Promise<GetWikiPagesResponse>;
    GetWikiPage(request: GetWikiPageRequest): Promise<GetWikiPageResponse>;
    EditWikiPage(request: EditWikiPageRequest): Promise<Empty>;
    HideWikiPageRevision(request: HideWikiPageRevisionRequest): Promise<HideWikiPageRevisionResponse>;
    GetWikiPageRevisions(request: GetWikiPageRevisionsRequest): Promise<WikiPageRevisionListing>;
    GetWikiRevisions(request: GetWikiRevisionsRequest): Promise<WikiPageRevisionListing>;
    RevertWikiPage(request: RevertWikiPageRequest): Promise<Empty>;
    GetWikiPageSettings(request: GetWikiPageSettingsRequest): Promise<WikiPageSettings>;
    UpdateWikiPageSettings(request: UpdateWikiPageSettingsRequest): Promise<WikiPageSettings>;
    AllowEditor(request: AllowEditorRequest): Promise<Empty>;
}
/** WIKI - https://www.reddit.com/dev/api#section_wiki */
export type WikiDefinition = typeof WikiDefinition;
export declare const WikiDefinition: {
    name: 'Wiki';
    fullName: string;
    methods: {
        [methodName: string]: MethodDefinition & {
            options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=wiki_svc.d.ts.map