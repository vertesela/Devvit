/**
 * #subreddits_msg.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { Any } from '../../../../google/protobuf/any.js';
import { CommentContributionSettings, MediaEmbed, UserFlairRichtext } from '../../../reddit/common.js';
/** requests */
export interface AboutWhereRequest {
    /** fullname of a thing */
    after?: string;
    /** fullname of a thing */
    before?: string;
    /** a positive integer (default: 0) */
    count?: number;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number;
    /** (optional) the string all */
    show?: string;
    /** A valid, existing reddit username */
    user?: string;
    /** the name of the subreddit */
    subreddit?: string;
    /** one of "banned", "muted", "wikibanned", "contributors", "wikicontributors", or "moderators" */
    where: string;
}
export interface BasicSubredditRequest {
    /** the name of the subreddit */
    subreddit: string;
}
export interface DeleteSrImgRequest {
    /** the name of the subreddit */
    subreddit: string;
    /** a valid subreddit image name */
    imgName: string;
}
export interface BasicSearchRequest {
    /** boolean value */
    exact?: boolean;
    /** boolean value */
    includeOver18?: boolean;
    /** boolean value */
    includeUnadvertisable?: boolean;
    /** a string up to 50 characters long, consisting of printable characters */
    query: string;
    /** a uuid */
    searchQueryId?: string;
    /** (optional) boolean value */
    typeaheadActive?: boolean;
}
export interface SiteAdminRequest {
    /** boolean value */
    acceptFollowers: boolean;
    /** boolean value */
    adminOverrideSpamComments: boolean;
    /** boolean value */
    adminOverrideSpamLinks: boolean;
    /** boolean value */
    adminOverrideSpamSelfposts: boolean;
    /** boolean value */
    allOriginalContent: boolean;
    /** boolean value */
    allowChatPostCreation: boolean;
    /** boolean value */
    allowDiscovery: boolean;
    /** boolean value */
    allowGalleries: boolean;
    /** boolean value */
    allowImages: boolean;
    /** boolean value */
    allowPolls: boolean;
    /** boolean value */
    allowPostCrossposts: boolean;
    /** boolean value */
    allowPredictionContributors: boolean;
    /** boolean value */
    allowPredictions: boolean;
    /** boolean value */
    allowPredictionsTournament: boolean;
    /** boolean value */
    allowTalks: boolean;
    /** boolean value */
    allowTop: boolean;
    /** boolean value */
    allowVideos: boolean;
    /** an integer between 0 and 3 */
    banEvasionThreshold: number;
    /** boolean value */
    collapseDeletedComments: boolean;
    /**
     * json data:
     * \{
     *   "allowed_media_types": [
     *     one of (`giphy`, `unknown`, `animated`, `static`),
     *     ...
     *   ],
     * \}
     */
    commentContributionSettings?: CommentContributionSettings;
    /** an integer between 0 and 1440 (default: 0) */
    commentScoreHideMins: number;
    /** boolean value */
    crowdControlFilter: boolean;
    /** an integer between 0 and 3 */
    crowdControlLevel: number;
    /** boolean value */
    crowdControlMode: boolean;
    /** an integer between 0 and 3 */
    crowdControlPostLevel: number;
    /** raw markdown text */
    description: string;
    /** boolean value */
    disableContributorRequests: boolean;
    /** boolean value */
    excludeBannedModqueue: boolean;
    /** boolean value */
    freeFormReports: boolean;
    gRecaptchaResponse: string;
    /** an integer between 0 and 3 */
    hatefulContentThresholdAbuse: number;
    /** an integer between 0 and 3 */
    hatefulContentThresholdIdentity: number;
    /** a string no longer than 500 characters */
    headerTitle: string;
    /** a 6-digit rgb hex color, e.g. #AABBCC */
    keyColor: string;
    /** one of (any, link, self) */
    linkType: string;
    /** subreddit name */
    name: string;
    /** boolean value */
    newPinnedPostPnsEnabled: boolean;
    /** boolean value */
    originalContentTagEnabled: boolean;
    /** boolean value */
    over18: boolean;
    /** an integer between 0 and 2 */
    predictionLeaderboardEntryType: number;
    /** raw markdown text */
    publicDescription: string;
    /** boolean value */
    restrictCommenting: boolean;
    /** boolean value */
    restrictPosting: boolean;
    /** boolean value */
    shouldArchivePosts: boolean;
    /** boolean value */
    showMedia: boolean;
    /** boolean value */
    showMediaPreview: boolean;
    /** one of (low, high, all) */
    spamComments: string;
    /** one of (low, high, all) */
    spamLinks: string;
    /** one of (low, high, all) */
    spamSelfposts: string;
    /** boolean value */
    spoilersEnabled: boolean;
    /** fullname of a thing */
    sr: string;
    /** a string no longer than 60 characters */
    submitLinkLabel: string;
    /** raw markdown text */
    submitText: string;
    /** a string no longer than 60 characters */
    submitTextLabel: string;
    /** one of (confidence, top, new, controversial, old, random, qa, live) */
    suggestedCommentSort: string;
    /** a string no longer than 100 characters */
    title: string;
    /** an integer between 0 and 1 */
    toxicityThresholdChatLevel: number;
    /** one of (gold_restricted, archived, restricted, private, employees_only, gold_only, public, user) */
    type: string;
    /** boolean value */
    userFlairPnsEnabled: boolean;
    /** boolean value */
    welcomeMessageEnabled: boolean;
    /** raw markdown text */
    welcomeMessageText: string;
    /** an integer between 0 and 36600 (default: 0) */
    wikiEditAge: number;
    /** an integer between 0 and 1000000000 (default: 0) */
    wikiEditKarma: number;
    /** one of (disabled, modonly, anyone) */
    wikimode: string;
    /** an integer between 0 and 3 */
    crowdControlChatLevel: number;
    /** boolean value */
    hideAds: boolean;
    /** boolean value */
    modmailHarassmentFilterEnabled: boolean;
}
export interface SubredditAutocompleteRequest {
    /** boolean value */
    includeOver18?: boolean;
    /** boolean value */
    includeProfiles?: boolean;
    /** an integer between 1 and 10 (default: 5) */
    limit?: number;
    /** a string up to 25 characters long, consisting of printable characters */
    query: string;
    /** a uuid */
    searchQueryId?: string;
    /** (optional) boolean value */
    typeaheadActive?: boolean;
}
export interface SubredditStylesheetRequest {
    /** one of (save, preview) */
    op: string;
    /** a string up to 256 characters long, consisting of printable characters. */
    reason: string;
    /** the new stylesheet content */
    stylesheetContents: string;
    /** the name of the subreddit */
    subreddit: string;
}
export interface SubscribeRequest {
    /** one of (sub, unsub) */
    action: string;
    /** one of (o, n, b, o, a, r, d, i, n, g) */
    actionSource: string;
    /** boolean value */
    skipInitialDefaults: boolean;
    /** A comma-separated list of subreddit fullnames */
    sr: string;
    /** A comma-separated list of subreddit names */
    srName: string;
}
export interface UploadSrImgRequest {
    /** file upload with maximum size of 500 KiB */
    file: string;
    /** (optional) can be ignored */
    header: number;
    /** an integer between 0 and 1 */
    imgType: string;
    /** a valid subreddit image name */
    name: string;
    /** one of png or jpg (default: png) */
    uploadType: string;
    /** the name of the subreddit */
    subreddit: string;
}
export interface SubredditAboutEditRequest {
    /** one of (true, false) */
    created: string;
    location: string;
    /** the name of the subreddit */
    subreddit: string;
}
export interface StickyRequest {
    /** an integer between 1 and 2 (default: 1) */
    num: number;
    /** the name of the subreddit */
    subreddit: string;
}
export interface BasicWhereRequest {
    /** fullname of a thing */
    after?: string;
    /** fullname of a thing */
    before?: string;
    /** a positive integer (default: 0) */
    count?: number;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number;
    /** (optional) the string all */
    show?: string;
    /** one of (subscriber, contributor, moderator, streams) */
    where: string;
}
export interface SubredditsSearchRequest {
    /** fullname of a thing */
    after?: string;
    /** fullname of a thing */
    before?: string;
    /** a positive integer (default: 0) */
    count?: number;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number;
    /** a search query */
    q: string;
    /** a uuid */
    searchQueryId?: string;
    /** (optional) the string all */
    show?: string;
    /** boolean value */
    showUsers?: boolean;
    /** one of (relevance, activity) */
    sort?: string;
    /** (optional) boolean value */
    typeaheadActive?: boolean;
}
export interface UsersSearchRequest {
    /** fullname of a thing */
    after?: string;
    /** fullname of a thing */
    before?: string;
    /** a positive integer (default: 0) */
    count?: number;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number;
    /** a search query */
    q: string;
    /** a uuid */
    searchQueryId?: string;
    /** (optional) the string all */
    show?: string;
    /** one of (relevance, activity) */
    sort?: string;
    /** (optional) boolean value */
    typeaheadActive?: boolean;
}
/** responses */
export interface SearchRedditNamesResponse {
    names: string[];
}
export interface SearchSubredditsResponse {
    subreddits: SearchSubredditsResponse_SubredditData[];
}
export interface SearchSubredditsResponse_SubredditData {
    activeUserCount?: number;
    iconImg?: string;
    keyColor?: string;
    name?: string;
    subscriberCount?: number;
    isChatPostFeatureEnabled?: boolean;
    allowChatPostCreation?: boolean;
    allowImages?: boolean;
}
export interface SubmitTextResponse {
    submitText?: string;
    submitTextHtml?: string;
}
export interface SubredditAutocompleteResponse {
    kind?: string;
    data?: SubredditAutocompleteResponse_AutocompleteResponse;
}
export interface SubredditAutocompleteResponse_AutocompleteAccount {
    isEmployee?: boolean;
    isFriend?: boolean;
    snoovatarSize?: number;
    id?: string;
    verified?: boolean;
    isGold?: boolean;
    isMod?: boolean;
    hasVerifiedEmail?: boolean;
    iconImg?: string;
    hideFromRobots?: boolean;
    linkKarma?: number;
    acceptChats?: boolean;
    isBlocked?: boolean;
    prefShowSnoovatar?: boolean;
    name?: string;
    created?: number;
    createdUtc?: number;
    snoovatarImg?: string;
    commentKarma?: number;
    acceptFollowers?: boolean;
    hasSubscribed?: boolean;
    acceptPms?: boolean;
}
export interface SubredditAutocompleteResponse_AutocompleteAccount_Subreddit {
    defaultSet?: boolean;
    userIsContributor?: boolean;
    bannerImg?: string;
    allowedMediaInComments: string[];
    userIsBanned?: boolean;
    freeFormReports?: boolean;
    communityIcon?: string;
    showMedia?: boolean;
    iconColor?: string;
    userIsMuted?: boolean;
    displayName?: string;
    headerImg?: string;
    title?: string;
    previousNames: string[];
    over18?: boolean;
    iconSize: number[];
    primaryColor?: string;
    iconImg?: string;
    description?: string;
    submitLinkLabel?: string;
    headerSize?: number;
    restrictPosting?: boolean;
    restrictCommenting?: boolean;
    subscribers?: number;
    submitTextLabel?: string;
    isDefaultIcon?: boolean;
    inkFlairPosition?: string;
    displayNamePrefixed?: string;
    keyColor?: string;
    name?: string;
    isDefaultBanner?: boolean;
    url?: string;
    quarantine?: boolean;
    bannerSize?: number;
    userIsModerator?: boolean;
    acceptFollowers?: boolean;
    publicDescription?: string;
    linkFlairEnabled?: boolean;
    disableContributorRequests?: boolean;
    subredditType?: string;
    userIsSubscriber?: boolean;
}
export interface SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit {
    kind: string;
    data?: FullSubredditObject;
}
export interface SubredditAutocompleteResponse_WrappedAutoCompleteAccount {
    kind: string;
    data?: SubredditAutocompleteResponse_AutocompleteAccount;
}
export interface SubredditAutocompleteResponse_AutocompleteResponse {
    after?: string;
    before?: string;
    dist?: number;
    childrenSubreddits: SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit[];
    childrenAccounts: SubredditAutocompleteResponse_WrappedAutoCompleteAccount[];
}
export interface UploadSrImgResponse {
    errors: string[];
    imgSrc?: string;
    errorsValues: string[];
}
export interface SubredditPostRequirementsResponse {
    titleRegexes: string[];
    bodyBlacklistedStrings: string[];
    titleBlacklistedStrings: string[];
    bodyTextMaxLength?: number;
    titleRequiredStrings: string[];
    guidelinesText?: string;
    galleryMinItems?: number;
    domainBlacklist: string[];
    domainWhitelist: string[];
    titleTextMaxLength?: number;
    bodyRestrictionPolicy?: string;
    linkRestrictionPolicy?: string;
    guidelinesDisplayPolicy?: string;
    bodyRequiredStrings: string[];
    titleTextMinLength?: number;
    galleryCaptionsRequirement?: string;
    isFlairRequired?: boolean;
    galleryMaxItems?: number;
    galleryUrlsRequirement?: string;
    bodyRegexes: string[];
    linkRepostAge?: number;
    bodyTextMinLength?: number;
}
export interface SubredditAboutResponse {
    kind?: string;
    data?: SubredditAboutResponse_AboutData;
}
export interface SubredditAboutResponse_AboutData {
    userFlairBackgroundColor?: string;
    submitTextHtml?: string;
    restrictPosting?: boolean;
    userIsBanned?: boolean;
    freeFormReports?: boolean;
    wikiEnabled?: boolean;
    userIsMuted?: boolean;
    userCanFlairInSr?: boolean;
    displayName?: string;
    headerImg?: string;
    title?: string;
    allowGalleries?: boolean;
    iconSize?: number;
    primaryColor?: string;
    activeUserCount?: number;
    iconImg?: string;
    displayNamePrefixed?: string;
    accountsActive?: number;
    publicTraffic?: boolean;
    subscribers?: number;
    userFlairRichtext: UserFlairRichtext[];
    name?: string;
    quarantine?: boolean;
    hideAds?: boolean;
    predictionLeaderboardEntryType?: string;
    emojisEnabled?: boolean;
    advertiserCategory?: string;
    publicDescription?: string;
    commentScoreHideMins?: number;
    allowPredictions?: boolean;
    userHasFavorited?: boolean;
    userFlairTemplateId?: string;
    communityIcon?: string;
    bannerBackgroundImage?: string;
    originalContentTagEnabled?: boolean;
    communityReviewed?: boolean;
    submitText?: string;
    descriptionHtml?: string;
    spoilersEnabled?: boolean;
    commentContributionSettings?: CommentContributionSettings;
    allowTalks?: boolean;
    headerSize?: number;
    userFlairPosition?: string;
    allOriginalContent?: boolean;
    collectionsEnabled?: boolean;
    isEnrolledInNewModmail?: boolean;
    keyColor?: string;
    eventPostsEnabled?: boolean;
    canAssignUserFlair?: boolean;
    created?: number;
    wls?: string;
    showMediaPreview?: boolean;
    submissionType?: string;
    userIsSubscriber?: boolean;
    allowedMediaInComments: string[];
    allowVideogifs?: boolean;
    shouldArchivePosts?: boolean;
    userFlairType?: string;
    allowPolls?: boolean;
    collapseDeletedComments?: boolean;
    coins?: number;
    emojisCustomSize?: number;
    publicDescriptionHtml?: string;
    allowVideos?: boolean;
    isCrosspostableSubreddit?: boolean;
    notificationLevel?: string;
    shouldShowMediaInCommentsSetting?: boolean;
    canAssignLinkFlair?: boolean;
    hasMenuWidget?: boolean;
    accountsActiveIsFuzzed?: boolean;
    allowPredictionContributors?: boolean;
    submitTextLabel?: string;
    linkFlairPosition?: string;
    userSrFlairEnabled?: boolean;
    userFlairEnabledInSr?: boolean;
    allowChatPostCreation?: boolean;
    allowDiscovery?: boolean;
    acceptFollowers?: boolean;
    userSrThemeEnabled?: boolean;
    linkFlairEnabled?: boolean;
    disableContributorRequests?: boolean;
    subredditType?: string;
    suggestedCommentSort?: string;
    bannerImg?: string;
    userFlairText?: string;
    bannerBackgroundColor?: string;
    showMedia?: boolean;
    id?: string;
    userIsModerator?: boolean;
    over18?: boolean;
    headerTitle?: string;
    description?: string;
    isChatPostFeatureEnabled?: boolean;
    submitLinkLabel?: string;
    userFlairTextColor?: string;
    restrictCommenting?: boolean;
    userFlairCssClass?: string;
    allowImages?: boolean;
    lang?: string;
    whitelistStatus?: boolean;
    url?: string;
    createdUtc?: number;
    bannerSize?: number;
    mobileBannerImage?: string;
    userIsContributor?: boolean;
    allowPredictionsTournament?: boolean;
}
export interface SubredditAboutEditResponse {
    kind?: string;
    data?: SubredditAboutEditResponse_SubredditSettings;
}
export interface SubredditAboutEditResponse_SubredditSettings {
    defaultSet?: boolean;
    toxicityThresholdChatLevel?: number;
    crowdControlChatLevel?: number;
    restrictPosting?: boolean;
    publicDescription?: string;
    subredditId?: string;
    allowImages?: boolean;
    freeFormReports?: boolean;
    domain?: string;
    originalContentTagEnabled?: boolean;
    showMedia?: boolean;
    excludeBannedModqueue?: boolean;
    shouldArchivePosts?: boolean;
    submitText?: string;
    spamLinks?: string;
    title?: string;
    collapseDeletedComments?: boolean;
    wikimode?: string;
    over18?: boolean;
    allowVideos?: boolean;
    allowGalleries?: boolean;
    crowdControlLevel?: number;
    banEvasionThreshold?: number;
    crowdControlMode?: boolean;
    welcomeMessageEnabled?: boolean;
    welcomeMessageText?: string;
    suggestedCommentSort?: boolean;
    disableContributorRequests?: boolean;
    allowTalks?: boolean;
    description?: string;
    submitLinkLabel?: string;
    spoilersEnabled?: boolean;
    allowPostCrossposts?: boolean;
    spamComments?: string;
    publicTraffic?: boolean;
    restrictCommenting?: boolean;
    allowPolls?: boolean;
    commentContributionSettings?: CommentContributionSettings;
    submitTextLabel?: string;
    commentScoreHideMins?: number;
    allOriginalContent?: boolean;
    spamSelfposts?: string;
    keyColor?: string;
    language?: string;
    newPinnedPostPnsEnabled?: boolean;
    hideAds?: boolean;
    predictionLeaderboardEntryType?: number;
    headerHoverText?: string;
    wikiEditAge?: number;
    allowChatPostCreation?: boolean;
    allowPredictionContributors?: boolean;
    allowDiscovery?: boolean;
    acceptFollowers?: boolean;
    crowdControlPostLevel?: number;
    allowPredictionsTournament?: boolean;
    wikiEditKarma?: number;
    showMediaPreview?: boolean;
    crowdControlFilter?: boolean;
    subredditType?: string;
    allowPredictions?: boolean;
    userFlairPnsEnabled?: boolean;
    contentOptions?: string;
}
export interface SubredditAboutRulesResponse {
    rules: SubredditAboutRulesResponse_SubredditRule[];
    siteRules: string[];
    siteRulesFlow: SubredditAboutRulesResponse_RuleFlow[];
}
export interface SubredditAboutRulesResponse_SubredditRule {
    kind?: string;
    description?: string;
    shortName?: string;
    violationReason?: string;
    createdUtc?: number;
    priority?: number;
    descriptionHtml?: string;
}
export interface SubredditAboutRulesResponse_RuleFlow {
    reasonTextToShow?: string;
    reasonText?: string;
    nextStepHeader?: string;
    nextStepReasons: SubredditAboutRulesResponse_RuleFlow[];
    complaintButtonText?: string;
    complaintUrl?: string;
    complaintPageTitle?: string;
    fileComplaint?: boolean;
    complaintPrompt?: string;
    canWriteNotes?: boolean;
    isAbuseOfReportButton?: boolean;
    notesInputTitle?: string;
    usernamesInputTitle?: string;
    canSpecifyUsernames?: boolean;
    requestCrisisSupport?: boolean;
    oneUsername?: boolean;
}
export interface SubredditAboutTrafficResponse {
    day: SubredditAboutTrafficResponse_Data[];
    hour: SubredditAboutTrafficResponse_Data[];
    month: SubredditAboutTrafficResponse_Data[];
}
export interface SubredditAboutTrafficResponse_Data {
    values: number[];
}
export interface StickyResponse {
    kind?: string;
    data?: StickyResponse_StickyResponseData;
}
export interface StickyResponse_LinkData {
    authorFlairBackgroundColor?: string;
    approvedAtUtc?: number;
    subreddit?: string;
    selftext?: string;
    userReports: string[];
    saved?: boolean;
    modReasonTitle?: string;
    gilded?: number;
    clicked?: boolean;
    title?: string;
    linkFlairRichtext: string[];
    subredditNamePrefixed?: string;
    hidden?: boolean;
    pwls?: string;
    linkFlairCssClass?: string;
    downs?: number;
    thumbnailHeight?: number;
    topAwardedType?: string;
    parentWhitelistStatus?: boolean;
    hideScore?: boolean;
    name?: string;
    quarantine?: boolean;
    linkFlairTextColor?: string;
    upvoteRatio?: number;
    ignoreReports?: boolean;
    ups?: number;
    domain?: string;
    mediaEmbed?: MediaEmbed;
    thumbnailWidth?: number;
    authorFlairTemplateId?: string;
    isOriginalContent?: boolean;
    authorFullname?: string;
    secureMedia?: boolean;
    isRedditMediaDomain?: boolean;
    isMeta?: boolean;
    category?: string;
    secureMediaEmbed?: MediaEmbed;
    linkFlairText?: string;
    canModPost?: boolean;
    score?: number;
    approvedBy?: string;
    isCreatedFromAdsUi?: boolean;
    authorPremium?: boolean;
    thumbnail?: string;
    edited?: boolean;
    authorFlairCssClass?: string;
    previousVisits: number[];
    authorFlairRichtext: string[];
    gildings?: Any;
    contentCategories?: string;
    isSelf?: boolean;
    subredditType?: string;
    created?: number;
    linkFlairType?: string;
    wls?: string;
    removedByCategory?: string;
    bannedBy?: string;
    authorFlairType?: string;
    totalAwardsReceived?: number;
    allowLiveComments?: boolean;
    selftextHtml?: string;
    likes?: boolean;
    suggestedSort?: string;
    bannedAtUtc?: number;
    viewCount?: number;
    archived?: boolean;
    noFollow?: boolean;
    spam?: boolean;
    isCrosspostable?: boolean;
    pinned?: boolean;
    over18?: boolean;
    allAwardings: Any[];
    awarders: string[];
    mediaOnly?: boolean;
    canGild?: boolean;
    removed?: boolean;
    spoiler?: boolean;
    locked?: boolean;
    authorFlairText?: string;
    treatmentTags: Any[];
    rteMode?: string;
    visited?: boolean;
    removedBy?: string;
    modNote?: string;
    distinguished?: string;
    subredditId?: string;
    authorIsBlocked?: boolean;
    modReasonBy?: string;
    numReports?: number;
    removalReason?: string;
    linkFlairBackgroundColor?: string;
    id?: string;
    isRobotIndexable?: boolean;
    numDuplicates?: number;
    reportReasons: Any[];
    author?: string;
    discussionType?: string;
    numComments?: number;
    sendReplies?: boolean;
    media?: string;
    contestMode?: boolean;
    authorPatreonFlair?: boolean;
    approved?: boolean;
    authorFlairTextColor?: string;
    permalink?: string;
    whitelistStatus?: boolean;
    stickied?: boolean;
    url?: string;
    subredditSubscribers?: number;
    createdUtc?: number;
    numCrossposts?: number;
    modReports: Any[];
    isVideo?: boolean;
}
export interface StickyResponse_WrappedStickyListing {
    kind?: string;
    data?: StickyResponse_LinkData;
}
export interface StickyResponse_StickyResponseData {
    after?: string;
    before?: string;
    dist?: number;
    modhash?: string;
    geoFilter?: string;
    children: StickyResponse_WrappedStickyListing[];
}
export interface FullSubredditObject {
    userFlairBackgroundColor?: string;
    submitTextHtml?: string;
    restrictPosting?: boolean;
    userIsBanned?: boolean;
    freeFormReports?: boolean;
    wikiEnabled?: boolean;
    userIsMuted?: boolean;
    userCanFlairInSr?: boolean;
    displayName?: string;
    headerImg?: string;
    title?: string;
    allowGalleries?: boolean;
    iconSize: number[];
    primaryColor?: string;
    activeUserCount?: number;
    iconImg?: string;
    displayNamePrefixed?: string;
    accountsActive?: number;
    publicTraffic?: boolean;
    subscribers?: number;
    userFlairRichtext: string[];
    videostreamLinksCount?: number;
    name?: string;
    quarantine?: boolean;
    hideAds?: boolean;
    predictionLeaderboardEntryType?: string;
    emojisEnabled?: boolean;
    advertiserCategory?: string;
    publicDescription?: string;
    commentScoreHideMins?: number;
    allowPredictions?: boolean;
    userHasFavorited?: boolean;
    userFlairTemplateId?: string;
    communityIcon?: string;
    bannerBackgroundImage?: string;
    originalContentTagEnabled?: boolean;
    communityReviewed?: boolean;
    submitText?: string;
    descriptionHtml?: string;
    spoilersEnabled?: boolean;
    commentContributionSettings?: CommentContributionSettings;
    allowTalks?: boolean;
    headerSize: number[];
    userFlairPosition?: string;
    allOriginalContent?: boolean;
    hasMenuWidget?: boolean;
    isEnrolledInNewModmail?: boolean;
    keyColor?: string;
    canAssignUserFlair?: boolean;
    created?: number;
    wls?: number;
    showMediaPreview?: boolean;
    submissionType?: string;
    userIsSubscriber?: boolean;
    allowedMediaInComments: string[];
    allowVideogifs?: boolean;
    shouldArchivePosts?: boolean;
    userFlairType?: string;
    allowPolls?: boolean;
    collapseDeletedComments?: boolean;
    emojisCustomSize: number[];
    publicDescriptionHtml?: string;
    allowVideos?: boolean;
    isCrosspostableSubreddit?: boolean;
    notificationLevel?: string;
    shouldShowMediaInCommentsSetting?: boolean;
    canAssignLinkFlair?: boolean;
    accountsActiveIsFuzzed?: boolean;
    allowPredictionContributors?: boolean;
    submitTextLabel?: string;
    linkFlairPosition?: string;
    userSrFlairEnabled?: boolean;
    userFlairEnabledInSr?: boolean;
    allowChatPostCreation?: boolean;
    allowDiscovery?: boolean;
    acceptFollowers?: boolean;
    userSrThemeEnabled?: boolean;
    linkFlairEnabled?: boolean;
    disableContributorRequests?: boolean;
    subredditType?: string;
    suggestedCommentSort?: string;
    bannerImg?: string;
    userFlairText?: string;
    contentCategory?: string;
    bannerBackgroundColor?: string;
    showMedia?: boolean;
    id?: string;
    userIsModerator?: boolean;
    over18?: boolean;
    headerTitle?: string;
    description?: string;
    isChatPostFeatureEnabled?: boolean;
    submitLinkLabel?: string;
    userFlairTextColor?: string;
    restrictCommenting?: boolean;
    userFlairCssClass?: string;
    allowImages?: boolean;
    lang?: string;
    whitelistStatus?: string;
    url?: string;
    createdUtc?: number;
    bannerSize: number[];
    mobileBannerImage?: string;
    userIsContributor?: boolean;
    allowPredictionsTournament?: boolean;
}
export interface SubredditsSearchResponse {
    kind?: string;
    data?: SubredditsSearchResponse_WrappedSubredditObject;
}
export interface SubredditsSearchResponse_WrappedSubredditObject {
    after?: string;
    before?: string;
    dist?: number;
    geoFilter?: string;
    children: SubredditsSearchResponse_WrappedSubredditObject_SubredditData[];
}
export interface SubredditsSearchResponse_WrappedSubredditObject_SubredditData {
    kind?: string;
    data?: FullSubredditObject;
}
export interface UserSearchResponse {
    kind?: string;
    data?: UserSearchResponse_AccData;
}
export interface UserSearchResponse_AccData {
    after?: string;
    dist?: number;
    modhash?: string;
    geoFilter?: string;
    children: UserSearchResponse_Account[];
    before?: string;
}
export interface UserSearchResponse_Account {
    kind?: string;
    data?: UserSearchResponse_AccountData;
}
export interface UserSearchResponse_AccountData {
    isEmployee?: boolean;
    isFriend?: boolean;
    snoovatarSize: number[];
    id?: string;
    verified?: boolean;
    isGold?: boolean;
    isMod?: boolean;
    hasVerifiedEmail?: boolean;
    iconImg?: string;
    hideFromRobots?: boolean;
    linkKarma?: number;
    acceptChats?: boolean;
    isBlocked?: boolean;
    prefShowSnoovatar?: boolean;
    name?: string;
    created?: number;
    createdUtc?: number;
    snoovatarImg?: string;
    commentKarma?: number;
    acceptFollowers?: boolean;
    hasSubscribed?: boolean;
    acceptPms?: boolean;
    isSuspended?: boolean;
    subreddit?: UserSearchResponse_AccountData_Subreddit;
}
export interface UserSearchResponse_AccountData_Subreddit {
    defaultSet?: boolean;
    userIsContributor?: boolean;
    bannerImg?: string;
    allowedMediaInComments: string[];
    userIsBanned?: boolean;
    freeFormReports?: boolean;
    communityIcon?: string;
    showMedia?: boolean;
    iconColor?: string;
    userIsMuted?: boolean;
    displayName?: string;
    headerImg?: string;
    title?: string;
    previousNames: string[];
    over18?: boolean;
    iconSize: number[];
    primaryColor?: string;
    iconImg?: string;
    description?: string;
    submitLinkLabel?: string;
    headerSize: number[];
    restrictPosting?: boolean;
    restrictCommenting?: boolean;
    subscribers?: number;
    submitTextLabel?: string;
    isDefaultIcon?: boolean;
    linkFlairPosition?: string;
    displayNamePrefixed?: string;
    keyColor?: string;
    name?: string;
    isDefaultBanner?: boolean;
    url?: string;
    quarantine?: boolean;
    bannerSize: number[];
    userIsModerator?: boolean;
    acceptFollowers?: boolean;
    publicDescription?: string;
    linkFlairEnabled?: boolean;
    disableContributorRequests?: boolean;
    subredditType?: string;
    userIsSubscriber?: boolean;
}
export interface SubredditAddRemovalReasonRequest {
    /** The name of the subreddit without `r/` */
    subreddit: string;
    /** A message that will communicate to the user why their post was removed */
    message: string;
    /** Removal Reason title */
    title: string;
}
export interface SubredditAddRemovalReasonResponse {
    /** Removal Reason ID */
    id: string;
}
export interface SubredditGetRemovalReasonsRequest {
    /** The name of the subreddit without `r/` */
    subreddit: string;
}
export interface SubredditGetRemovalReasonsResponse {
    data: {
        [key: string]: SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
    };
    /** Ordered list of Removal Reason IDs */
    order: string[];
}
export interface SubredditGetRemovalReasonsResponse_SubredditRemovalReason {
    /** Removal Reason ID */
    id: string;
    /** A message that will communicate to the user why their post was removed */
    message: string;
    /** Removal Reason title */
    title: string;
}
export interface SubredditGetRemovalReasonsResponse_DataEntry {
    key: string;
    value?: SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
}
export declare const AboutWhereRequest: {
    $type: "devvit.plugin.redditapi.subreddits.AboutWhereRequest";
    encode(message: AboutWhereRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AboutWhereRequest;
    fromJSON(object: any): AboutWhereRequest;
    toJSON(message: AboutWhereRequest): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        show?: string | undefined;
        user?: string | undefined;
        subreddit?: string | undefined;
        where?: string | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        show?: string | undefined;
        user?: string | undefined;
        subreddit?: string | undefined;
        where?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof AboutWhereRequest>]: never; }>(object: I): AboutWhereRequest;
};
export declare const BasicSubredditRequest: {
    $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
    encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
    fromJSON(object: any): BasicSubredditRequest;
    toJSON(message: BasicSubredditRequest): unknown;
    fromPartial<I extends {
        subreddit?: string | undefined;
    } & {
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "subreddit">]: never; }>(object: I): BasicSubredditRequest;
};
export declare const DeleteSrImgRequest: {
    $type: "devvit.plugin.redditapi.subreddits.DeleteSrImgRequest";
    encode(message: DeleteSrImgRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteSrImgRequest;
    fromJSON(object: any): DeleteSrImgRequest;
    toJSON(message: DeleteSrImgRequest): unknown;
    fromPartial<I extends {
        subreddit?: string | undefined;
        imgName?: string | undefined;
    } & {
        subreddit?: string | undefined;
        imgName?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof DeleteSrImgRequest>]: never; }>(object: I): DeleteSrImgRequest;
};
export declare const BasicSearchRequest: {
    $type: "devvit.plugin.redditapi.subreddits.BasicSearchRequest";
    encode(message: BasicSearchRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BasicSearchRequest;
    fromJSON(object: any): BasicSearchRequest;
    toJSON(message: BasicSearchRequest): unknown;
    fromPartial<I extends {
        exact?: boolean | undefined;
        includeOver18?: boolean | undefined;
        includeUnadvertisable?: boolean | undefined;
        query?: string | undefined;
        searchQueryId?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & {
        exact?: boolean | undefined;
        includeOver18?: boolean | undefined;
        includeUnadvertisable?: boolean | undefined;
        query?: string | undefined;
        searchQueryId?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof BasicSearchRequest>]: never; }>(object: I): BasicSearchRequest;
};
export declare const SiteAdminRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SiteAdminRequest";
    encode(message: SiteAdminRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SiteAdminRequest;
    fromJSON(object: any): SiteAdminRequest;
    toJSON(message: SiteAdminRequest): unknown;
    fromPartial<I extends {
        acceptFollowers?: boolean | undefined;
        adminOverrideSpamComments?: boolean | undefined;
        adminOverrideSpamLinks?: boolean | undefined;
        adminOverrideSpamSelfposts?: boolean | undefined;
        allOriginalContent?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        allowImages?: boolean | undefined;
        allowPolls?: boolean | undefined;
        allowPostCrossposts?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowPredictions?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
        allowTalks?: boolean | undefined;
        allowTop?: boolean | undefined;
        allowVideos?: boolean | undefined;
        banEvasionThreshold?: number | undefined;
        collapseDeletedComments?: boolean | undefined;
        commentContributionSettings?: {
            allowedMediaTypes?: string[] | undefined;
        } | undefined;
        commentScoreHideMins?: number | undefined;
        crowdControlFilter?: boolean | undefined;
        crowdControlLevel?: number | undefined;
        crowdControlMode?: boolean | undefined;
        crowdControlPostLevel?: number | undefined;
        description?: string | undefined;
        disableContributorRequests?: boolean | undefined;
        excludeBannedModqueue?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        gRecaptchaResponse?: string | undefined;
        hatefulContentThresholdAbuse?: number | undefined;
        hatefulContentThresholdIdentity?: number | undefined;
        headerTitle?: string | undefined;
        keyColor?: string | undefined;
        linkType?: string | undefined;
        name?: string | undefined;
        newPinnedPostPnsEnabled?: boolean | undefined;
        originalContentTagEnabled?: boolean | undefined;
        over18?: boolean | undefined;
        predictionLeaderboardEntryType?: number | undefined;
        publicDescription?: string | undefined;
        restrictCommenting?: boolean | undefined;
        restrictPosting?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        showMedia?: boolean | undefined;
        showMediaPreview?: boolean | undefined;
        spamComments?: string | undefined;
        spamLinks?: string | undefined;
        spamSelfposts?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        sr?: string | undefined;
        submitLinkLabel?: string | undefined;
        submitText?: string | undefined;
        submitTextLabel?: string | undefined;
        suggestedCommentSort?: string | undefined;
        title?: string | undefined;
        toxicityThresholdChatLevel?: number | undefined;
        type?: string | undefined;
        userFlairPnsEnabled?: boolean | undefined;
        welcomeMessageEnabled?: boolean | undefined;
        welcomeMessageText?: string | undefined;
        wikiEditAge?: number | undefined;
        wikiEditKarma?: number | undefined;
        wikimode?: string | undefined;
        crowdControlChatLevel?: number | undefined;
        hideAds?: boolean | undefined;
        modmailHarassmentFilterEnabled?: boolean | undefined;
    } & {
        acceptFollowers?: boolean | undefined;
        adminOverrideSpamComments?: boolean | undefined;
        adminOverrideSpamLinks?: boolean | undefined;
        adminOverrideSpamSelfposts?: boolean | undefined;
        allOriginalContent?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        allowImages?: boolean | undefined;
        allowPolls?: boolean | undefined;
        allowPostCrossposts?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowPredictions?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
        allowTalks?: boolean | undefined;
        allowTop?: boolean | undefined;
        allowVideos?: boolean | undefined;
        banEvasionThreshold?: number | undefined;
        collapseDeletedComments?: boolean | undefined;
        commentContributionSettings?: ({
            allowedMediaTypes?: string[] | undefined;
        } & {
            allowedMediaTypes?: (string[] & string[] & { [K in Exclude<keyof I["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
        commentScoreHideMins?: number | undefined;
        crowdControlFilter?: boolean | undefined;
        crowdControlLevel?: number | undefined;
        crowdControlMode?: boolean | undefined;
        crowdControlPostLevel?: number | undefined;
        description?: string | undefined;
        disableContributorRequests?: boolean | undefined;
        excludeBannedModqueue?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        gRecaptchaResponse?: string | undefined;
        hatefulContentThresholdAbuse?: number | undefined;
        hatefulContentThresholdIdentity?: number | undefined;
        headerTitle?: string | undefined;
        keyColor?: string | undefined;
        linkType?: string | undefined;
        name?: string | undefined;
        newPinnedPostPnsEnabled?: boolean | undefined;
        originalContentTagEnabled?: boolean | undefined;
        over18?: boolean | undefined;
        predictionLeaderboardEntryType?: number | undefined;
        publicDescription?: string | undefined;
        restrictCommenting?: boolean | undefined;
        restrictPosting?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        showMedia?: boolean | undefined;
        showMediaPreview?: boolean | undefined;
        spamComments?: string | undefined;
        spamLinks?: string | undefined;
        spamSelfposts?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        sr?: string | undefined;
        submitLinkLabel?: string | undefined;
        submitText?: string | undefined;
        submitTextLabel?: string | undefined;
        suggestedCommentSort?: string | undefined;
        title?: string | undefined;
        toxicityThresholdChatLevel?: number | undefined;
        type?: string | undefined;
        userFlairPnsEnabled?: boolean | undefined;
        welcomeMessageEnabled?: boolean | undefined;
        welcomeMessageText?: string | undefined;
        wikiEditAge?: number | undefined;
        wikiEditKarma?: number | undefined;
        wikimode?: string | undefined;
        crowdControlChatLevel?: number | undefined;
        hideAds?: boolean | undefined;
        modmailHarassmentFilterEnabled?: boolean | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof SiteAdminRequest>]: never; }>(object: I): SiteAdminRequest;
};
export declare const SubredditAutocompleteRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteRequest";
    encode(message: SubredditAutocompleteRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteRequest;
    fromJSON(object: any): SubredditAutocompleteRequest;
    toJSON(message: SubredditAutocompleteRequest): unknown;
    fromPartial<I extends {
        includeOver18?: boolean | undefined;
        includeProfiles?: boolean | undefined;
        limit?: number | undefined;
        query?: string | undefined;
        searchQueryId?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & {
        includeOver18?: boolean | undefined;
        includeProfiles?: boolean | undefined;
        limit?: number | undefined;
        query?: string | undefined;
        searchQueryId?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditAutocompleteRequest>]: never; }>(object: I): SubredditAutocompleteRequest;
};
export declare const SubredditStylesheetRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditStylesheetRequest";
    encode(message: SubredditStylesheetRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditStylesheetRequest;
    fromJSON(object: any): SubredditStylesheetRequest;
    toJSON(message: SubredditStylesheetRequest): unknown;
    fromPartial<I extends {
        op?: string | undefined;
        reason?: string | undefined;
        stylesheetContents?: string | undefined;
        subreddit?: string | undefined;
    } & {
        op?: string | undefined;
        reason?: string | undefined;
        stylesheetContents?: string | undefined;
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditStylesheetRequest>]: never; }>(object: I): SubredditStylesheetRequest;
};
export declare const SubscribeRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubscribeRequest";
    encode(message: SubscribeRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubscribeRequest;
    fromJSON(object: any): SubscribeRequest;
    toJSON(message: SubscribeRequest): unknown;
    fromPartial<I extends {
        action?: string | undefined;
        actionSource?: string | undefined;
        skipInitialDefaults?: boolean | undefined;
        sr?: string | undefined;
        srName?: string | undefined;
    } & {
        action?: string | undefined;
        actionSource?: string | undefined;
        skipInitialDefaults?: boolean | undefined;
        sr?: string | undefined;
        srName?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubscribeRequest>]: never; }>(object: I): SubscribeRequest;
};
export declare const UploadSrImgRequest: {
    $type: "devvit.plugin.redditapi.subreddits.UploadSrImgRequest";
    encode(message: UploadSrImgRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UploadSrImgRequest;
    fromJSON(object: any): UploadSrImgRequest;
    toJSON(message: UploadSrImgRequest): unknown;
    fromPartial<I extends {
        file?: string | undefined;
        header?: number | undefined;
        imgType?: string | undefined;
        name?: string | undefined;
        uploadType?: string | undefined;
        subreddit?: string | undefined;
    } & {
        file?: string | undefined;
        header?: number | undefined;
        imgType?: string | undefined;
        name?: string | undefined;
        uploadType?: string | undefined;
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof UploadSrImgRequest>]: never; }>(object: I): UploadSrImgRequest;
};
export declare const SubredditAboutEditRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutEditRequest";
    encode(message: SubredditAboutEditRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutEditRequest;
    fromJSON(object: any): SubredditAboutEditRequest;
    toJSON(message: SubredditAboutEditRequest): unknown;
    fromPartial<I extends {
        created?: string | undefined;
        location?: string | undefined;
        subreddit?: string | undefined;
    } & {
        created?: string | undefined;
        location?: string | undefined;
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditAboutEditRequest>]: never; }>(object: I): SubredditAboutEditRequest;
};
export declare const StickyRequest: {
    $type: "devvit.plugin.redditapi.subreddits.StickyRequest";
    encode(message: StickyRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StickyRequest;
    fromJSON(object: any): StickyRequest;
    toJSON(message: StickyRequest): unknown;
    fromPartial<I extends {
        num?: number | undefined;
        subreddit?: string | undefined;
    } & {
        num?: number | undefined;
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof StickyRequest>]: never; }>(object: I): StickyRequest;
};
export declare const BasicWhereRequest: {
    $type: "devvit.plugin.redditapi.subreddits.BasicWhereRequest";
    encode(message: BasicWhereRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BasicWhereRequest;
    fromJSON(object: any): BasicWhereRequest;
    toJSON(message: BasicWhereRequest): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        show?: string | undefined;
        where?: string | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        show?: string | undefined;
        where?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof BasicWhereRequest>]: never; }>(object: I): BasicWhereRequest;
};
export declare const SubredditsSearchRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchRequest";
    encode(message: SubredditsSearchRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchRequest;
    fromJSON(object: any): SubredditsSearchRequest;
    toJSON(message: SubredditsSearchRequest): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        q?: string | undefined;
        searchQueryId?: string | undefined;
        show?: string | undefined;
        showUsers?: boolean | undefined;
        sort?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        q?: string | undefined;
        searchQueryId?: string | undefined;
        show?: string | undefined;
        showUsers?: boolean | undefined;
        sort?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditsSearchRequest>]: never; }>(object: I): SubredditsSearchRequest;
};
export declare const UsersSearchRequest: {
    $type: "devvit.plugin.redditapi.subreddits.UsersSearchRequest";
    encode(message: UsersSearchRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UsersSearchRequest;
    fromJSON(object: any): UsersSearchRequest;
    toJSON(message: UsersSearchRequest): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        q?: string | undefined;
        searchQueryId?: string | undefined;
        show?: string | undefined;
        sort?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        count?: number | undefined;
        limit?: number | undefined;
        q?: string | undefined;
        searchQueryId?: string | undefined;
        show?: string | undefined;
        sort?: string | undefined;
        typeaheadActive?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof UsersSearchRequest>]: never; }>(object: I): UsersSearchRequest;
};
export declare const SearchRedditNamesResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SearchRedditNamesResponse";
    encode(message: SearchRedditNamesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SearchRedditNamesResponse;
    fromJSON(object: any): SearchRedditNamesResponse;
    toJSON(message: SearchRedditNamesResponse): unknown;
    fromPartial<I extends {
        names?: string[] | undefined;
    } & {
        names?: (string[] & string[] & { [K in Exclude<keyof I["names"], "$type" | keyof string[]>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | "names">]: never; }>(object: I): SearchRedditNamesResponse;
};
export declare const SearchSubredditsResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SearchSubredditsResponse";
    encode(message: SearchSubredditsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SearchSubredditsResponse;
    fromJSON(object: any): SearchSubredditsResponse;
    toJSON(message: SearchSubredditsResponse): unknown;
    fromPartial<I extends {
        subreddits?: {
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            subscriberCount?: number | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowImages?: boolean | undefined;
        }[] | undefined;
    } & {
        subreddits?: ({
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            subscriberCount?: number | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowImages?: boolean | undefined;
        }[] & ({
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            subscriberCount?: number | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowImages?: boolean | undefined;
        } & {
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            subscriberCount?: number | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowImages?: boolean | undefined;
        } & { [K in Exclude<keyof I["subreddits"][number], "$type" | keyof SearchSubredditsResponse_SubredditData>]: never; })[] & { [K_1 in Exclude<keyof I["subreddits"], "$type" | keyof {
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            subscriberCount?: number | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowImages?: boolean | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | "subreddits">]: never; }>(object: I): SearchSubredditsResponse;
};
export declare const SearchSubredditsResponse_SubredditData: {
    $type: "devvit.plugin.redditapi.subreddits.SearchSubredditsResponse.SubredditData";
    encode(message: SearchSubredditsResponse_SubredditData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SearchSubredditsResponse_SubredditData;
    fromJSON(object: any): SearchSubredditsResponse_SubredditData;
    toJSON(message: SearchSubredditsResponse_SubredditData): unknown;
    fromPartial<I extends {
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        subscriberCount?: number | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowImages?: boolean | undefined;
    } & {
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        subscriberCount?: number | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowImages?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SearchSubredditsResponse_SubredditData>]: never; }>(object: I): SearchSubredditsResponse_SubredditData;
};
export declare const SubmitTextResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubmitTextResponse";
    encode(message: SubmitTextResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubmitTextResponse;
    fromJSON(object: any): SubmitTextResponse;
    toJSON(message: SubmitTextResponse): unknown;
    fromPartial<I extends {
        submitText?: string | undefined;
        submitTextHtml?: string | undefined;
    } & {
        submitText?: string | undefined;
        submitTextHtml?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubmitTextResponse>]: never; }>(object: I): SubmitTextResponse;
};
export declare const SubredditAutocompleteResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse";
    encode(message: SubredditAutocompleteResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse;
    fromJSON(object: any): SubredditAutocompleteResponse;
    toJSON(message: SubredditAutocompleteResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            childrenSubreddits?: {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] | undefined;
            childrenAccounts?: {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            childrenSubreddits?: {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] | undefined;
            childrenAccounts?: {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            childrenSubreddits?: ({
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } & {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: ({
                        allowedMediaTypes?: string[] | undefined;
                    } & {
                        allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
                    } & { [K_3 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } & { [K_8 in Exclude<keyof I["data"]["childrenSubreddits"][number]["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
            } & { [K_9 in Exclude<keyof I["data"]["childrenSubreddits"][number], "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit>]: never; })[] & { [K_10 in Exclude<keyof I["data"]["childrenSubreddits"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
            childrenAccounts?: ({
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } & {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } & { [K_11 in Exclude<keyof I["data"]["childrenAccounts"][number]["data"], "$type" | keyof SubredditAutocompleteResponse_AutocompleteAccount>]: never; }) | undefined;
            } & { [K_12 in Exclude<keyof I["data"]["childrenAccounts"][number], "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteAccount>]: never; })[] & { [K_13 in Exclude<keyof I["data"]["childrenAccounts"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_14 in Exclude<keyof I["data"], "$type" | keyof SubredditAutocompleteResponse_AutocompleteResponse>]: never; }) | undefined;
    } & { [K_15 in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse>]: never; }>(object: I): SubredditAutocompleteResponse;
};
export declare const SubredditAutocompleteResponse_AutocompleteAccount: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse.AutocompleteAccount";
    encode(message: SubredditAutocompleteResponse_AutocompleteAccount, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse_AutocompleteAccount;
    fromJSON(object: any): SubredditAutocompleteResponse_AutocompleteAccount;
    toJSON(message: SubredditAutocompleteResponse_AutocompleteAccount): unknown;
    fromPartial<I extends {
        isEmployee?: boolean | undefined;
        isFriend?: boolean | undefined;
        snoovatarSize?: number | undefined;
        id?: string | undefined;
        verified?: boolean | undefined;
        isGold?: boolean | undefined;
        isMod?: boolean | undefined;
        hasVerifiedEmail?: boolean | undefined;
        iconImg?: string | undefined;
        hideFromRobots?: boolean | undefined;
        linkKarma?: number | undefined;
        acceptChats?: boolean | undefined;
        isBlocked?: boolean | undefined;
        prefShowSnoovatar?: boolean | undefined;
        name?: string | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        snoovatarImg?: string | undefined;
        commentKarma?: number | undefined;
        acceptFollowers?: boolean | undefined;
        hasSubscribed?: boolean | undefined;
        acceptPms?: boolean | undefined;
    } & {
        isEmployee?: boolean | undefined;
        isFriend?: boolean | undefined;
        snoovatarSize?: number | undefined;
        id?: string | undefined;
        verified?: boolean | undefined;
        isGold?: boolean | undefined;
        isMod?: boolean | undefined;
        hasVerifiedEmail?: boolean | undefined;
        iconImg?: string | undefined;
        hideFromRobots?: boolean | undefined;
        linkKarma?: number | undefined;
        acceptChats?: boolean | undefined;
        isBlocked?: boolean | undefined;
        prefShowSnoovatar?: boolean | undefined;
        name?: string | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        snoovatarImg?: string | undefined;
        commentKarma?: number | undefined;
        acceptFollowers?: boolean | undefined;
        hasSubscribed?: boolean | undefined;
        acceptPms?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse_AutocompleteAccount>]: never; }>(object: I): SubredditAutocompleteResponse_AutocompleteAccount;
};
export declare const SubredditAutocompleteResponse_AutocompleteAccount_Subreddit: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse.AutocompleteAccount.Subreddit";
    encode(message: SubredditAutocompleteResponse_AutocompleteAccount_Subreddit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse_AutocompleteAccount_Subreddit;
    fromJSON(object: any): SubredditAutocompleteResponse_AutocompleteAccount_Subreddit;
    toJSON(message: SubredditAutocompleteResponse_AutocompleteAccount_Subreddit): unknown;
    fromPartial<I extends {
        defaultSet?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        bannerImg?: string | undefined;
        allowedMediaInComments?: string[] | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        communityIcon?: string | undefined;
        showMedia?: boolean | undefined;
        iconColor?: string | undefined;
        userIsMuted?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        previousNames?: string[] | undefined;
        over18?: boolean | undefined;
        iconSize?: number[] | undefined;
        primaryColor?: string | undefined;
        iconImg?: string | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        headerSize?: number | undefined;
        restrictPosting?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        subscribers?: number | undefined;
        submitTextLabel?: string | undefined;
        isDefaultIcon?: boolean | undefined;
        inkFlairPosition?: string | undefined;
        displayNamePrefixed?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        isDefaultBanner?: boolean | undefined;
        url?: string | undefined;
        quarantine?: boolean | undefined;
        bannerSize?: number | undefined;
        userIsModerator?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        publicDescription?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
    } & {
        defaultSet?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        bannerImg?: string | undefined;
        allowedMediaInComments?: (string[] & string[] & { [K in Exclude<keyof I["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        communityIcon?: string | undefined;
        showMedia?: boolean | undefined;
        iconColor?: string | undefined;
        userIsMuted?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        previousNames?: (string[] & string[] & { [K_1 in Exclude<keyof I["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
        over18?: boolean | undefined;
        iconSize?: (number[] & number[] & { [K_2 in Exclude<keyof I["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
        primaryColor?: string | undefined;
        iconImg?: string | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        headerSize?: number | undefined;
        restrictPosting?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        subscribers?: number | undefined;
        submitTextLabel?: string | undefined;
        isDefaultIcon?: boolean | undefined;
        inkFlairPosition?: string | undefined;
        displayNamePrefixed?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        isDefaultBanner?: boolean | undefined;
        url?: string | undefined;
        quarantine?: boolean | undefined;
        bannerSize?: number | undefined;
        userIsModerator?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        publicDescription?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse_AutocompleteAccount_Subreddit>]: never; }>(object: I): SubredditAutocompleteResponse_AutocompleteAccount_Subreddit;
};
export declare const SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse.WrappedAutoCompleteSubreddit";
    encode(message: SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit;
    fromJSON(object: any): SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit;
    toJSON(message: SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: string[] | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number[] | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: number[] | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number[] | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: string[] | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number[] | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: number[] | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number[] | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: ({
                allowedMediaTypes?: string[] | undefined;
            } & {
                allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
            } & { [K_3 in Exclude<keyof I["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & { [K_8 in Exclude<keyof I["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
    } & { [K_9 in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit>]: never; }>(object: I): SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit;
};
export declare const SubredditAutocompleteResponse_WrappedAutoCompleteAccount: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse.WrappedAutoCompleteAccount";
    encode(message: SubredditAutocompleteResponse_WrappedAutoCompleteAccount, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse_WrappedAutoCompleteAccount;
    fromJSON(object: any): SubredditAutocompleteResponse_WrappedAutoCompleteAccount;
    toJSON(message: SubredditAutocompleteResponse_WrappedAutoCompleteAccount): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: number | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: number | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
        } & {
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: number | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
        } & { [K in Exclude<keyof I["data"], "$type" | keyof SubredditAutocompleteResponse_AutocompleteAccount>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteAccount>]: never; }>(object: I): SubredditAutocompleteResponse_WrappedAutoCompleteAccount;
};
export declare const SubredditAutocompleteResponse_AutocompleteResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse.AutocompleteResponse";
    encode(message: SubredditAutocompleteResponse_AutocompleteResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse_AutocompleteResponse;
    fromJSON(object: any): SubredditAutocompleteResponse_AutocompleteResponse;
    toJSON(message: SubredditAutocompleteResponse_AutocompleteResponse): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        childrenSubreddits?: {
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[] | undefined;
        childrenAccounts?: {
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        childrenSubreddits?: ({
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } & {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: (number[] & number[] & { [K in Exclude<keyof I["childrenSubreddits"][number]["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["childrenSubreddits"][number]["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: ({
                    allowedMediaTypes?: string[] | undefined;
                } & {
                    allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["childrenSubreddits"][number]["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
                } & { [K_3 in Exclude<keyof I["childrenSubreddits"][number]["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["childrenSubreddits"][number]["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["childrenSubreddits"][number]["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["childrenSubreddits"][number]["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["childrenSubreddits"][number]["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } & { [K_8 in Exclude<keyof I["childrenSubreddits"][number]["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
        } & { [K_9 in Exclude<keyof I["childrenSubreddits"][number], "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit>]: never; })[] & { [K_10 in Exclude<keyof I["childrenSubreddits"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
        childrenAccounts?: ({
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } & {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } & { [K_11 in Exclude<keyof I["childrenAccounts"][number]["data"], "$type" | keyof SubredditAutocompleteResponse_AutocompleteAccount>]: never; }) | undefined;
        } & { [K_12 in Exclude<keyof I["childrenAccounts"][number], "$type" | keyof SubredditAutocompleteResponse_WrappedAutoCompleteAccount>]: never; })[] & { [K_13 in Exclude<keyof I["childrenAccounts"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_14 in Exclude<keyof I, "$type" | keyof SubredditAutocompleteResponse_AutocompleteResponse>]: never; }>(object: I): SubredditAutocompleteResponse_AutocompleteResponse;
};
export declare const UploadSrImgResponse: {
    $type: "devvit.plugin.redditapi.subreddits.UploadSrImgResponse";
    encode(message: UploadSrImgResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UploadSrImgResponse;
    fromJSON(object: any): UploadSrImgResponse;
    toJSON(message: UploadSrImgResponse): unknown;
    fromPartial<I extends {
        errors?: string[] | undefined;
        imgSrc?: string | undefined;
        errorsValues?: string[] | undefined;
    } & {
        errors?: (string[] & string[] & { [K in Exclude<keyof I["errors"], "$type" | keyof string[]>]: never; }) | undefined;
        imgSrc?: string | undefined;
        errorsValues?: (string[] & string[] & { [K_1 in Exclude<keyof I["errorsValues"], "$type" | keyof string[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof UploadSrImgResponse>]: never; }>(object: I): UploadSrImgResponse;
};
export declare const SubredditPostRequirementsResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditPostRequirementsResponse";
    encode(message: SubredditPostRequirementsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditPostRequirementsResponse;
    fromJSON(object: any): SubredditPostRequirementsResponse;
    toJSON(message: SubredditPostRequirementsResponse): unknown;
    fromPartial<I extends {
        titleRegexes?: string[] | undefined;
        bodyBlacklistedStrings?: string[] | undefined;
        titleBlacklistedStrings?: string[] | undefined;
        bodyTextMaxLength?: number | undefined;
        titleRequiredStrings?: string[] | undefined;
        guidelinesText?: string | undefined;
        galleryMinItems?: number | undefined;
        domainBlacklist?: string[] | undefined;
        domainWhitelist?: string[] | undefined;
        titleTextMaxLength?: number | undefined;
        bodyRestrictionPolicy?: string | undefined;
        linkRestrictionPolicy?: string | undefined;
        guidelinesDisplayPolicy?: string | undefined;
        bodyRequiredStrings?: string[] | undefined;
        titleTextMinLength?: number | undefined;
        galleryCaptionsRequirement?: string | undefined;
        isFlairRequired?: boolean | undefined;
        galleryMaxItems?: number | undefined;
        galleryUrlsRequirement?: string | undefined;
        bodyRegexes?: string[] | undefined;
        linkRepostAge?: number | undefined;
        bodyTextMinLength?: number | undefined;
    } & {
        titleRegexes?: (string[] & string[] & { [K in Exclude<keyof I["titleRegexes"], "$type" | keyof string[]>]: never; }) | undefined;
        bodyBlacklistedStrings?: (string[] & string[] & { [K_1 in Exclude<keyof I["bodyBlacklistedStrings"], "$type" | keyof string[]>]: never; }) | undefined;
        titleBlacklistedStrings?: (string[] & string[] & { [K_2 in Exclude<keyof I["titleBlacklistedStrings"], "$type" | keyof string[]>]: never; }) | undefined;
        bodyTextMaxLength?: number | undefined;
        titleRequiredStrings?: (string[] & string[] & { [K_3 in Exclude<keyof I["titleRequiredStrings"], "$type" | keyof string[]>]: never; }) | undefined;
        guidelinesText?: string | undefined;
        galleryMinItems?: number | undefined;
        domainBlacklist?: (string[] & string[] & { [K_4 in Exclude<keyof I["domainBlacklist"], "$type" | keyof string[]>]: never; }) | undefined;
        domainWhitelist?: (string[] & string[] & { [K_5 in Exclude<keyof I["domainWhitelist"], "$type" | keyof string[]>]: never; }) | undefined;
        titleTextMaxLength?: number | undefined;
        bodyRestrictionPolicy?: string | undefined;
        linkRestrictionPolicy?: string | undefined;
        guidelinesDisplayPolicy?: string | undefined;
        bodyRequiredStrings?: (string[] & string[] & { [K_6 in Exclude<keyof I["bodyRequiredStrings"], "$type" | keyof string[]>]: never; }) | undefined;
        titleTextMinLength?: number | undefined;
        galleryCaptionsRequirement?: string | undefined;
        isFlairRequired?: boolean | undefined;
        galleryMaxItems?: number | undefined;
        galleryUrlsRequirement?: string | undefined;
        bodyRegexes?: (string[] & string[] & { [K_7 in Exclude<keyof I["bodyRegexes"], "$type" | keyof string[]>]: never; }) | undefined;
        linkRepostAge?: number | undefined;
        bodyTextMinLength?: number | undefined;
    } & { [K_8 in Exclude<keyof I, "$type" | keyof SubredditPostRequirementsResponse>]: never; }>(object: I): SubredditPostRequirementsResponse;
};
export declare const SubredditAboutResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutResponse";
    encode(message: SubredditAboutResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutResponse;
    fromJSON(object: any): SubredditAboutResponse;
    toJSON(message: SubredditAboutResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            collectionsEnabled?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            eventPostsEnabled?: boolean | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: string | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            coins?: number | undefined;
            emojisCustomSize?: number | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: boolean | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            collectionsEnabled?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            eventPostsEnabled?: boolean | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: string | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            coins?: number | undefined;
            emojisCustomSize?: number | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: boolean | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: ({
                e?: string | undefined;
                t?: string | undefined;
            }[] & ({
                e?: string | undefined;
                t?: string | undefined;
            } & {
                e?: string | undefined;
                t?: string | undefined;
            } & { [K in Exclude<keyof I["data"]["userFlairRichtext"][number], "$type" | keyof UserFlairRichtext>]: never; })[] & { [K_1 in Exclude<keyof I["data"]["userFlairRichtext"], "$type" | keyof {
                e?: string | undefined;
                t?: string | undefined;
            }[]>]: never; }) | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: ({
                allowedMediaTypes?: string[] | undefined;
            } & {
                allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
            } & { [K_3 in Exclude<keyof I["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            collectionsEnabled?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            eventPostsEnabled?: boolean | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: string | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: (string[] & string[] & { [K_4 in Exclude<keyof I["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            coins?: number | undefined;
            emojisCustomSize?: number | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: boolean | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["data"], "$type" | keyof SubredditAboutResponse_AboutData>]: never; }) | undefined;
    } & { [K_6 in Exclude<keyof I, "$type" | keyof SubredditAboutResponse>]: never; }>(object: I): SubredditAboutResponse;
};
export declare const SubredditAboutResponse_AboutData: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutResponse.AboutData";
    encode(message: SubredditAboutResponse_AboutData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutResponse_AboutData;
    fromJSON(object: any): SubredditAboutResponse_AboutData;
    toJSON(message: SubredditAboutResponse_AboutData): unknown;
    fromPartial<I extends {
        userFlairBackgroundColor?: string | undefined;
        submitTextHtml?: string | undefined;
        restrictPosting?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        wikiEnabled?: boolean | undefined;
        userIsMuted?: boolean | undefined;
        userCanFlairInSr?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        allowGalleries?: boolean | undefined;
        iconSize?: number | undefined;
        primaryColor?: string | undefined;
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        displayNamePrefixed?: string | undefined;
        accountsActive?: number | undefined;
        publicTraffic?: boolean | undefined;
        subscribers?: number | undefined;
        userFlairRichtext?: {
            e?: string | undefined;
            t?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        emojisEnabled?: boolean | undefined;
        advertiserCategory?: string | undefined;
        publicDescription?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allowPredictions?: boolean | undefined;
        userHasFavorited?: boolean | undefined;
        userFlairTemplateId?: string | undefined;
        communityIcon?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        communityReviewed?: boolean | undefined;
        submitText?: string | undefined;
        descriptionHtml?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        commentContributionSettings?: {
            allowedMediaTypes?: string[] | undefined;
        } | undefined;
        allowTalks?: boolean | undefined;
        headerSize?: number | undefined;
        userFlairPosition?: string | undefined;
        allOriginalContent?: boolean | undefined;
        collectionsEnabled?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        eventPostsEnabled?: boolean | undefined;
        canAssignUserFlair?: boolean | undefined;
        created?: number | undefined;
        wls?: string | undefined;
        showMediaPreview?: boolean | undefined;
        submissionType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
        allowedMediaInComments?: string[] | undefined;
        allowVideogifs?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        userFlairType?: string | undefined;
        allowPolls?: boolean | undefined;
        collapseDeletedComments?: boolean | undefined;
        coins?: number | undefined;
        emojisCustomSize?: number | undefined;
        publicDescriptionHtml?: string | undefined;
        allowVideos?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        notificationLevel?: string | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        canAssignLinkFlair?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        submitTextLabel?: string | undefined;
        linkFlairPosition?: string | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        suggestedCommentSort?: string | undefined;
        bannerImg?: string | undefined;
        userFlairText?: string | undefined;
        bannerBackgroundColor?: string | undefined;
        showMedia?: boolean | undefined;
        id?: string | undefined;
        userIsModerator?: boolean | undefined;
        over18?: boolean | undefined;
        headerTitle?: string | undefined;
        description?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        submitLinkLabel?: string | undefined;
        userFlairTextColor?: string | undefined;
        restrictCommenting?: boolean | undefined;
        userFlairCssClass?: string | undefined;
        allowImages?: boolean | undefined;
        lang?: string | undefined;
        whitelistStatus?: boolean | undefined;
        url?: string | undefined;
        createdUtc?: number | undefined;
        bannerSize?: number | undefined;
        mobileBannerImage?: string | undefined;
        userIsContributor?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
    } & {
        userFlairBackgroundColor?: string | undefined;
        submitTextHtml?: string | undefined;
        restrictPosting?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        wikiEnabled?: boolean | undefined;
        userIsMuted?: boolean | undefined;
        userCanFlairInSr?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        allowGalleries?: boolean | undefined;
        iconSize?: number | undefined;
        primaryColor?: string | undefined;
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        displayNamePrefixed?: string | undefined;
        accountsActive?: number | undefined;
        publicTraffic?: boolean | undefined;
        subscribers?: number | undefined;
        userFlairRichtext?: ({
            e?: string | undefined;
            t?: string | undefined;
        }[] & ({
            e?: string | undefined;
            t?: string | undefined;
        } & {
            e?: string | undefined;
            t?: string | undefined;
        } & { [K in Exclude<keyof I["userFlairRichtext"][number], "$type" | keyof UserFlairRichtext>]: never; })[] & { [K_1 in Exclude<keyof I["userFlairRichtext"], "$type" | keyof {
            e?: string | undefined;
            t?: string | undefined;
        }[]>]: never; }) | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        emojisEnabled?: boolean | undefined;
        advertiserCategory?: string | undefined;
        publicDescription?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allowPredictions?: boolean | undefined;
        userHasFavorited?: boolean | undefined;
        userFlairTemplateId?: string | undefined;
        communityIcon?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        communityReviewed?: boolean | undefined;
        submitText?: string | undefined;
        descriptionHtml?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        commentContributionSettings?: ({
            allowedMediaTypes?: string[] | undefined;
        } & {
            allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
        allowTalks?: boolean | undefined;
        headerSize?: number | undefined;
        userFlairPosition?: string | undefined;
        allOriginalContent?: boolean | undefined;
        collectionsEnabled?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        eventPostsEnabled?: boolean | undefined;
        canAssignUserFlair?: boolean | undefined;
        created?: number | undefined;
        wls?: string | undefined;
        showMediaPreview?: boolean | undefined;
        submissionType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
        allowedMediaInComments?: (string[] & string[] & { [K_4 in Exclude<keyof I["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
        allowVideogifs?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        userFlairType?: string | undefined;
        allowPolls?: boolean | undefined;
        collapseDeletedComments?: boolean | undefined;
        coins?: number | undefined;
        emojisCustomSize?: number | undefined;
        publicDescriptionHtml?: string | undefined;
        allowVideos?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        notificationLevel?: string | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        canAssignLinkFlair?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        submitTextLabel?: string | undefined;
        linkFlairPosition?: string | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        suggestedCommentSort?: string | undefined;
        bannerImg?: string | undefined;
        userFlairText?: string | undefined;
        bannerBackgroundColor?: string | undefined;
        showMedia?: boolean | undefined;
        id?: string | undefined;
        userIsModerator?: boolean | undefined;
        over18?: boolean | undefined;
        headerTitle?: string | undefined;
        description?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        submitLinkLabel?: string | undefined;
        userFlairTextColor?: string | undefined;
        restrictCommenting?: boolean | undefined;
        userFlairCssClass?: string | undefined;
        allowImages?: boolean | undefined;
        lang?: string | undefined;
        whitelistStatus?: boolean | undefined;
        url?: string | undefined;
        createdUtc?: number | undefined;
        bannerSize?: number | undefined;
        mobileBannerImage?: string | undefined;
        userIsContributor?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
    } & { [K_5 in Exclude<keyof I, "$type" | keyof SubredditAboutResponse_AboutData>]: never; }>(object: I): SubredditAboutResponse_AboutData;
};
export declare const SubredditAboutEditResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutEditResponse";
    encode(message: SubredditAboutEditResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutEditResponse;
    fromJSON(object: any): SubredditAboutEditResponse;
    toJSON(message: SubredditAboutEditResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            defaultSet?: boolean | undefined;
            toxicityThresholdChatLevel?: number | undefined;
            crowdControlChatLevel?: number | undefined;
            restrictPosting?: boolean | undefined;
            publicDescription?: string | undefined;
            subredditId?: string | undefined;
            allowImages?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            domain?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            showMedia?: boolean | undefined;
            excludeBannedModqueue?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            submitText?: string | undefined;
            spamLinks?: string | undefined;
            title?: string | undefined;
            collapseDeletedComments?: boolean | undefined;
            wikimode?: string | undefined;
            over18?: boolean | undefined;
            allowVideos?: boolean | undefined;
            allowGalleries?: boolean | undefined;
            crowdControlLevel?: number | undefined;
            banEvasionThreshold?: number | undefined;
            crowdControlMode?: boolean | undefined;
            welcomeMessageEnabled?: boolean | undefined;
            welcomeMessageText?: string | undefined;
            suggestedCommentSort?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            allowTalks?: boolean | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            allowPostCrossposts?: boolean | undefined;
            spamComments?: string | undefined;
            publicTraffic?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            allowPolls?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            submitTextLabel?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allOriginalContent?: boolean | undefined;
            spamSelfposts?: string | undefined;
            keyColor?: string | undefined;
            language?: string | undefined;
            newPinnedPostPnsEnabled?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: number | undefined;
            headerHoverText?: string | undefined;
            wikiEditAge?: number | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            crowdControlPostLevel?: number | undefined;
            allowPredictionsTournament?: boolean | undefined;
            wikiEditKarma?: number | undefined;
            showMediaPreview?: boolean | undefined;
            crowdControlFilter?: boolean | undefined;
            subredditType?: string | undefined;
            allowPredictions?: boolean | undefined;
            userFlairPnsEnabled?: boolean | undefined;
            contentOptions?: string | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            defaultSet?: boolean | undefined;
            toxicityThresholdChatLevel?: number | undefined;
            crowdControlChatLevel?: number | undefined;
            restrictPosting?: boolean | undefined;
            publicDescription?: string | undefined;
            subredditId?: string | undefined;
            allowImages?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            domain?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            showMedia?: boolean | undefined;
            excludeBannedModqueue?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            submitText?: string | undefined;
            spamLinks?: string | undefined;
            title?: string | undefined;
            collapseDeletedComments?: boolean | undefined;
            wikimode?: string | undefined;
            over18?: boolean | undefined;
            allowVideos?: boolean | undefined;
            allowGalleries?: boolean | undefined;
            crowdControlLevel?: number | undefined;
            banEvasionThreshold?: number | undefined;
            crowdControlMode?: boolean | undefined;
            welcomeMessageEnabled?: boolean | undefined;
            welcomeMessageText?: string | undefined;
            suggestedCommentSort?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            allowTalks?: boolean | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            allowPostCrossposts?: boolean | undefined;
            spamComments?: string | undefined;
            publicTraffic?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            allowPolls?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            submitTextLabel?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allOriginalContent?: boolean | undefined;
            spamSelfposts?: string | undefined;
            keyColor?: string | undefined;
            language?: string | undefined;
            newPinnedPostPnsEnabled?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: number | undefined;
            headerHoverText?: string | undefined;
            wikiEditAge?: number | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            crowdControlPostLevel?: number | undefined;
            allowPredictionsTournament?: boolean | undefined;
            wikiEditKarma?: number | undefined;
            showMediaPreview?: boolean | undefined;
            crowdControlFilter?: boolean | undefined;
            subredditType?: string | undefined;
            allowPredictions?: boolean | undefined;
            userFlairPnsEnabled?: boolean | undefined;
            contentOptions?: string | undefined;
        } & {
            defaultSet?: boolean | undefined;
            toxicityThresholdChatLevel?: number | undefined;
            crowdControlChatLevel?: number | undefined;
            restrictPosting?: boolean | undefined;
            publicDescription?: string | undefined;
            subredditId?: string | undefined;
            allowImages?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            domain?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            showMedia?: boolean | undefined;
            excludeBannedModqueue?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            submitText?: string | undefined;
            spamLinks?: string | undefined;
            title?: string | undefined;
            collapseDeletedComments?: boolean | undefined;
            wikimode?: string | undefined;
            over18?: boolean | undefined;
            allowVideos?: boolean | undefined;
            allowGalleries?: boolean | undefined;
            crowdControlLevel?: number | undefined;
            banEvasionThreshold?: number | undefined;
            crowdControlMode?: boolean | undefined;
            welcomeMessageEnabled?: boolean | undefined;
            welcomeMessageText?: string | undefined;
            suggestedCommentSort?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            allowTalks?: boolean | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            allowPostCrossposts?: boolean | undefined;
            spamComments?: string | undefined;
            publicTraffic?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            allowPolls?: boolean | undefined;
            commentContributionSettings?: ({
                allowedMediaTypes?: string[] | undefined;
            } & {
                allowedMediaTypes?: (string[] & string[] & { [K in Exclude<keyof I["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
            } & { [K_1 in Exclude<keyof I["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
            submitTextLabel?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allOriginalContent?: boolean | undefined;
            spamSelfposts?: string | undefined;
            keyColor?: string | undefined;
            language?: string | undefined;
            newPinnedPostPnsEnabled?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: number | undefined;
            headerHoverText?: string | undefined;
            wikiEditAge?: number | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            crowdControlPostLevel?: number | undefined;
            allowPredictionsTournament?: boolean | undefined;
            wikiEditKarma?: number | undefined;
            showMediaPreview?: boolean | undefined;
            crowdControlFilter?: boolean | undefined;
            subredditType?: string | undefined;
            allowPredictions?: boolean | undefined;
            userFlairPnsEnabled?: boolean | undefined;
            contentOptions?: string | undefined;
        } & { [K_2 in Exclude<keyof I["data"], "$type" | keyof SubredditAboutEditResponse_SubredditSettings>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof SubredditAboutEditResponse>]: never; }>(object: I): SubredditAboutEditResponse;
};
export declare const SubredditAboutEditResponse_SubredditSettings: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutEditResponse.SubredditSettings";
    encode(message: SubredditAboutEditResponse_SubredditSettings, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutEditResponse_SubredditSettings;
    fromJSON(object: any): SubredditAboutEditResponse_SubredditSettings;
    toJSON(message: SubredditAboutEditResponse_SubredditSettings): unknown;
    fromPartial<I extends {
        defaultSet?: boolean | undefined;
        toxicityThresholdChatLevel?: number | undefined;
        crowdControlChatLevel?: number | undefined;
        restrictPosting?: boolean | undefined;
        publicDescription?: string | undefined;
        subredditId?: string | undefined;
        allowImages?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        domain?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        showMedia?: boolean | undefined;
        excludeBannedModqueue?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        submitText?: string | undefined;
        spamLinks?: string | undefined;
        title?: string | undefined;
        collapseDeletedComments?: boolean | undefined;
        wikimode?: string | undefined;
        over18?: boolean | undefined;
        allowVideos?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        crowdControlLevel?: number | undefined;
        banEvasionThreshold?: number | undefined;
        crowdControlMode?: boolean | undefined;
        welcomeMessageEnabled?: boolean | undefined;
        welcomeMessageText?: string | undefined;
        suggestedCommentSort?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        allowTalks?: boolean | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        allowPostCrossposts?: boolean | undefined;
        spamComments?: string | undefined;
        publicTraffic?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        allowPolls?: boolean | undefined;
        commentContributionSettings?: {
            allowedMediaTypes?: string[] | undefined;
        } | undefined;
        submitTextLabel?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allOriginalContent?: boolean | undefined;
        spamSelfposts?: string | undefined;
        keyColor?: string | undefined;
        language?: string | undefined;
        newPinnedPostPnsEnabled?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: number | undefined;
        headerHoverText?: string | undefined;
        wikiEditAge?: number | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        crowdControlPostLevel?: number | undefined;
        allowPredictionsTournament?: boolean | undefined;
        wikiEditKarma?: number | undefined;
        showMediaPreview?: boolean | undefined;
        crowdControlFilter?: boolean | undefined;
        subredditType?: string | undefined;
        allowPredictions?: boolean | undefined;
        userFlairPnsEnabled?: boolean | undefined;
        contentOptions?: string | undefined;
    } & {
        defaultSet?: boolean | undefined;
        toxicityThresholdChatLevel?: number | undefined;
        crowdControlChatLevel?: number | undefined;
        restrictPosting?: boolean | undefined;
        publicDescription?: string | undefined;
        subredditId?: string | undefined;
        allowImages?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        domain?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        showMedia?: boolean | undefined;
        excludeBannedModqueue?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        submitText?: string | undefined;
        spamLinks?: string | undefined;
        title?: string | undefined;
        collapseDeletedComments?: boolean | undefined;
        wikimode?: string | undefined;
        over18?: boolean | undefined;
        allowVideos?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        crowdControlLevel?: number | undefined;
        banEvasionThreshold?: number | undefined;
        crowdControlMode?: boolean | undefined;
        welcomeMessageEnabled?: boolean | undefined;
        welcomeMessageText?: string | undefined;
        suggestedCommentSort?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        allowTalks?: boolean | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        allowPostCrossposts?: boolean | undefined;
        spamComments?: string | undefined;
        publicTraffic?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        allowPolls?: boolean | undefined;
        commentContributionSettings?: ({
            allowedMediaTypes?: string[] | undefined;
        } & {
            allowedMediaTypes?: (string[] & string[] & { [K in Exclude<keyof I["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
        submitTextLabel?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allOriginalContent?: boolean | undefined;
        spamSelfposts?: string | undefined;
        keyColor?: string | undefined;
        language?: string | undefined;
        newPinnedPostPnsEnabled?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: number | undefined;
        headerHoverText?: string | undefined;
        wikiEditAge?: number | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        crowdControlPostLevel?: number | undefined;
        allowPredictionsTournament?: boolean | undefined;
        wikiEditKarma?: number | undefined;
        showMediaPreview?: boolean | undefined;
        crowdControlFilter?: boolean | undefined;
        subredditType?: string | undefined;
        allowPredictions?: boolean | undefined;
        userFlairPnsEnabled?: boolean | undefined;
        contentOptions?: string | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof SubredditAboutEditResponse_SubredditSettings>]: never; }>(object: I): SubredditAboutEditResponse_SubredditSettings;
};
export declare const SubredditAboutRulesResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutRulesResponse";
    encode(message: SubredditAboutRulesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutRulesResponse;
    fromJSON(object: any): SubredditAboutRulesResponse;
    toJSON(message: SubredditAboutRulesResponse): unknown;
    fromPartial<I extends {
        rules?: {
            kind?: string | undefined;
            description?: string | undefined;
            shortName?: string | undefined;
            violationReason?: string | undefined;
            createdUtc?: number | undefined;
            priority?: number | undefined;
            descriptionHtml?: string | undefined;
        }[] | undefined;
        siteRules?: string[] | undefined;
        siteRulesFlow?: {
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        }[] | undefined;
    } & {
        rules?: ({
            kind?: string | undefined;
            description?: string | undefined;
            shortName?: string | undefined;
            violationReason?: string | undefined;
            createdUtc?: number | undefined;
            priority?: number | undefined;
            descriptionHtml?: string | undefined;
        }[] & ({
            kind?: string | undefined;
            description?: string | undefined;
            shortName?: string | undefined;
            violationReason?: string | undefined;
            createdUtc?: number | undefined;
            priority?: number | undefined;
            descriptionHtml?: string | undefined;
        } & {
            kind?: string | undefined;
            description?: string | undefined;
            shortName?: string | undefined;
            violationReason?: string | undefined;
            createdUtc?: number | undefined;
            priority?: number | undefined;
            descriptionHtml?: string | undefined;
        } & { [K in Exclude<keyof I["rules"][number], "$type" | keyof SubredditAboutRulesResponse_SubredditRule>]: never; })[] & { [K_1 in Exclude<keyof I["rules"], "$type" | keyof {
            kind?: string | undefined;
            description?: string | undefined;
            shortName?: string | undefined;
            violationReason?: string | undefined;
            createdUtc?: number | undefined;
            priority?: number | undefined;
            descriptionHtml?: string | undefined;
        }[]>]: never; }) | undefined;
        siteRules?: (string[] & string[] & { [K_2 in Exclude<keyof I["siteRules"], "$type" | keyof string[]>]: never; }) | undefined;
        siteRulesFlow?: ({
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        }[] & ({
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        } & {
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: ({
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            }[] & ({
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            } & {
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: ({
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                }[] & ({
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                } & {
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: ({
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    }[] & ({
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    } & {
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: ({
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        }[] & ({
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        } & {
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: ({
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            }[] & ({
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            } & {
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: ({
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                }[] & ({
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                } & {
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: ({
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    }[] & ({
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    } & {
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: ({
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        }[] & ({
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        } & {
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: ({
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            }[] & ({
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            } & {
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: ({
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                }[] & ({
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                } & any & { [K_3 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_4 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                }[]>]: never; }) | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            } & { [K_5 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_6 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            }[]>]: never; }) | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        } & { [K_7 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_8 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        }[]>]: never; }) | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    } & { [K_9 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_10 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    }[]>]: never; }) | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                } & { [K_11 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_12 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                }[]>]: never; }) | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            } & { [K_13 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_14 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            }[]>]: never; }) | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        } & { [K_15 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_16 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        }[]>]: never; }) | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    } & { [K_17 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_18 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    }[]>]: never; }) | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                } & { [K_19 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_20 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                }[]>]: never; }) | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            } & { [K_21 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_22 in Exclude<keyof I["siteRulesFlow"][number]["nextStepReasons"], "$type" | keyof {
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            }[]>]: never; }) | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        } & { [K_23 in Exclude<keyof I["siteRulesFlow"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_24 in Exclude<keyof I["siteRulesFlow"], "$type" | keyof {
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_25 in Exclude<keyof I, "$type" | keyof SubredditAboutRulesResponse>]: never; }>(object: I): SubredditAboutRulesResponse;
};
export declare const SubredditAboutRulesResponse_SubredditRule: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutRulesResponse.SubredditRule";
    encode(message: SubredditAboutRulesResponse_SubredditRule, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutRulesResponse_SubredditRule;
    fromJSON(object: any): SubredditAboutRulesResponse_SubredditRule;
    toJSON(message: SubredditAboutRulesResponse_SubredditRule): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        description?: string | undefined;
        shortName?: string | undefined;
        violationReason?: string | undefined;
        createdUtc?: number | undefined;
        priority?: number | undefined;
        descriptionHtml?: string | undefined;
    } & {
        kind?: string | undefined;
        description?: string | undefined;
        shortName?: string | undefined;
        violationReason?: string | undefined;
        createdUtc?: number | undefined;
        priority?: number | undefined;
        descriptionHtml?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditAboutRulesResponse_SubredditRule>]: never; }>(object: I): SubredditAboutRulesResponse_SubredditRule;
};
export declare const SubredditAboutRulesResponse_RuleFlow: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutRulesResponse.RuleFlow";
    encode(message: SubredditAboutRulesResponse_RuleFlow, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutRulesResponse_RuleFlow;
    fromJSON(object: any): SubredditAboutRulesResponse_RuleFlow;
    toJSON(message: SubredditAboutRulesResponse_RuleFlow): unknown;
    fromPartial<I extends {
        reasonTextToShow?: string | undefined;
        reasonText?: string | undefined;
        nextStepHeader?: string | undefined;
        nextStepReasons?: any[] | undefined;
        complaintButtonText?: string | undefined;
        complaintUrl?: string | undefined;
        complaintPageTitle?: string | undefined;
        fileComplaint?: boolean | undefined;
        complaintPrompt?: string | undefined;
        canWriteNotes?: boolean | undefined;
        isAbuseOfReportButton?: boolean | undefined;
        notesInputTitle?: string | undefined;
        usernamesInputTitle?: string | undefined;
        canSpecifyUsernames?: boolean | undefined;
        requestCrisisSupport?: boolean | undefined;
        oneUsername?: boolean | undefined;
    } & {
        reasonTextToShow?: string | undefined;
        reasonText?: string | undefined;
        nextStepHeader?: string | undefined;
        nextStepReasons?: ({
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        }[] & ({
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        } & {
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: ({
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            }[] & ({
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            } & {
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: ({
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                }[] & ({
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                } & {
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: ({
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    }[] & ({
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    } & {
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: ({
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        }[] & ({
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        } & {
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: ({
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            }[] & ({
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            } & {
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: ({
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                }[] & ({
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                } & {
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: ({
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    }[] & ({
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    } & {
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: ({
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        }[] & ({
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        } & {
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: ({
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            }[] & ({
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            } & {
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: ({
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                }[] & ({
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                } & any & { [K in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_1 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                                    reasonTextToShow?: string | undefined;
                                                    reasonText?: string | undefined;
                                                    nextStepHeader?: string | undefined;
                                                    nextStepReasons?: any[] | undefined;
                                                    complaintButtonText?: string | undefined;
                                                    complaintUrl?: string | undefined;
                                                    complaintPageTitle?: string | undefined;
                                                    fileComplaint?: boolean | undefined;
                                                    complaintPrompt?: string | undefined;
                                                    canWriteNotes?: boolean | undefined;
                                                    isAbuseOfReportButton?: boolean | undefined;
                                                    notesInputTitle?: string | undefined;
                                                    usernamesInputTitle?: string | undefined;
                                                    canSpecifyUsernames?: boolean | undefined;
                                                    requestCrisisSupport?: boolean | undefined;
                                                    oneUsername?: boolean | undefined;
                                                }[]>]: never; }) | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            } & { [K_2 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_3 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                                reasonTextToShow?: string | undefined;
                                                reasonText?: string | undefined;
                                                nextStepHeader?: string | undefined;
                                                nextStepReasons?: any[] | undefined;
                                                complaintButtonText?: string | undefined;
                                                complaintUrl?: string | undefined;
                                                complaintPageTitle?: string | undefined;
                                                fileComplaint?: boolean | undefined;
                                                complaintPrompt?: string | undefined;
                                                canWriteNotes?: boolean | undefined;
                                                isAbuseOfReportButton?: boolean | undefined;
                                                notesInputTitle?: string | undefined;
                                                usernamesInputTitle?: string | undefined;
                                                canSpecifyUsernames?: boolean | undefined;
                                                requestCrisisSupport?: boolean | undefined;
                                                oneUsername?: boolean | undefined;
                                            }[]>]: never; }) | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        } & { [K_4 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_5 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                            reasonTextToShow?: string | undefined;
                                            reasonText?: string | undefined;
                                            nextStepHeader?: string | undefined;
                                            nextStepReasons?: any[] | undefined;
                                            complaintButtonText?: string | undefined;
                                            complaintUrl?: string | undefined;
                                            complaintPageTitle?: string | undefined;
                                            fileComplaint?: boolean | undefined;
                                            complaintPrompt?: string | undefined;
                                            canWriteNotes?: boolean | undefined;
                                            isAbuseOfReportButton?: boolean | undefined;
                                            notesInputTitle?: string | undefined;
                                            usernamesInputTitle?: string | undefined;
                                            canSpecifyUsernames?: boolean | undefined;
                                            requestCrisisSupport?: boolean | undefined;
                                            oneUsername?: boolean | undefined;
                                        }[]>]: never; }) | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    } & { [K_6 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_7 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                        reasonTextToShow?: string | undefined;
                                        reasonText?: string | undefined;
                                        nextStepHeader?: string | undefined;
                                        nextStepReasons?: any[] | undefined;
                                        complaintButtonText?: string | undefined;
                                        complaintUrl?: string | undefined;
                                        complaintPageTitle?: string | undefined;
                                        fileComplaint?: boolean | undefined;
                                        complaintPrompt?: string | undefined;
                                        canWriteNotes?: boolean | undefined;
                                        isAbuseOfReportButton?: boolean | undefined;
                                        notesInputTitle?: string | undefined;
                                        usernamesInputTitle?: string | undefined;
                                        canSpecifyUsernames?: boolean | undefined;
                                        requestCrisisSupport?: boolean | undefined;
                                        oneUsername?: boolean | undefined;
                                    }[]>]: never; }) | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                } & { [K_8 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_9 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                    reasonTextToShow?: string | undefined;
                                    reasonText?: string | undefined;
                                    nextStepHeader?: string | undefined;
                                    nextStepReasons?: any[] | undefined;
                                    complaintButtonText?: string | undefined;
                                    complaintUrl?: string | undefined;
                                    complaintPageTitle?: string | undefined;
                                    fileComplaint?: boolean | undefined;
                                    complaintPrompt?: string | undefined;
                                    canWriteNotes?: boolean | undefined;
                                    isAbuseOfReportButton?: boolean | undefined;
                                    notesInputTitle?: string | undefined;
                                    usernamesInputTitle?: string | undefined;
                                    canSpecifyUsernames?: boolean | undefined;
                                    requestCrisisSupport?: boolean | undefined;
                                    oneUsername?: boolean | undefined;
                                }[]>]: never; }) | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            } & { [K_10 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_11 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                                reasonTextToShow?: string | undefined;
                                reasonText?: string | undefined;
                                nextStepHeader?: string | undefined;
                                nextStepReasons?: any[] | undefined;
                                complaintButtonText?: string | undefined;
                                complaintUrl?: string | undefined;
                                complaintPageTitle?: string | undefined;
                                fileComplaint?: boolean | undefined;
                                complaintPrompt?: string | undefined;
                                canWriteNotes?: boolean | undefined;
                                isAbuseOfReportButton?: boolean | undefined;
                                notesInputTitle?: string | undefined;
                                usernamesInputTitle?: string | undefined;
                                canSpecifyUsernames?: boolean | undefined;
                                requestCrisisSupport?: boolean | undefined;
                                oneUsername?: boolean | undefined;
                            }[]>]: never; }) | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        } & { [K_12 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_13 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                            reasonTextToShow?: string | undefined;
                            reasonText?: string | undefined;
                            nextStepHeader?: string | undefined;
                            nextStepReasons?: any[] | undefined;
                            complaintButtonText?: string | undefined;
                            complaintUrl?: string | undefined;
                            complaintPageTitle?: string | undefined;
                            fileComplaint?: boolean | undefined;
                            complaintPrompt?: string | undefined;
                            canWriteNotes?: boolean | undefined;
                            isAbuseOfReportButton?: boolean | undefined;
                            notesInputTitle?: string | undefined;
                            usernamesInputTitle?: string | undefined;
                            canSpecifyUsernames?: boolean | undefined;
                            requestCrisisSupport?: boolean | undefined;
                            oneUsername?: boolean | undefined;
                        }[]>]: never; }) | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    } & { [K_14 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_15 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                        reasonTextToShow?: string | undefined;
                        reasonText?: string | undefined;
                        nextStepHeader?: string | undefined;
                        nextStepReasons?: any[] | undefined;
                        complaintButtonText?: string | undefined;
                        complaintUrl?: string | undefined;
                        complaintPageTitle?: string | undefined;
                        fileComplaint?: boolean | undefined;
                        complaintPrompt?: string | undefined;
                        canWriteNotes?: boolean | undefined;
                        isAbuseOfReportButton?: boolean | undefined;
                        notesInputTitle?: string | undefined;
                        usernamesInputTitle?: string | undefined;
                        canSpecifyUsernames?: boolean | undefined;
                        requestCrisisSupport?: boolean | undefined;
                        oneUsername?: boolean | undefined;
                    }[]>]: never; }) | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                } & { [K_16 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_17 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                    reasonTextToShow?: string | undefined;
                    reasonText?: string | undefined;
                    nextStepHeader?: string | undefined;
                    nextStepReasons?: any[] | undefined;
                    complaintButtonText?: string | undefined;
                    complaintUrl?: string | undefined;
                    complaintPageTitle?: string | undefined;
                    fileComplaint?: boolean | undefined;
                    complaintPrompt?: string | undefined;
                    canWriteNotes?: boolean | undefined;
                    isAbuseOfReportButton?: boolean | undefined;
                    notesInputTitle?: string | undefined;
                    usernamesInputTitle?: string | undefined;
                    canSpecifyUsernames?: boolean | undefined;
                    requestCrisisSupport?: boolean | undefined;
                    oneUsername?: boolean | undefined;
                }[]>]: never; }) | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            } & { [K_18 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_19 in Exclude<keyof I["nextStepReasons"][number]["nextStepReasons"], "$type" | keyof {
                reasonTextToShow?: string | undefined;
                reasonText?: string | undefined;
                nextStepHeader?: string | undefined;
                nextStepReasons?: any[] | undefined;
                complaintButtonText?: string | undefined;
                complaintUrl?: string | undefined;
                complaintPageTitle?: string | undefined;
                fileComplaint?: boolean | undefined;
                complaintPrompt?: string | undefined;
                canWriteNotes?: boolean | undefined;
                isAbuseOfReportButton?: boolean | undefined;
                notesInputTitle?: string | undefined;
                usernamesInputTitle?: string | undefined;
                canSpecifyUsernames?: boolean | undefined;
                requestCrisisSupport?: boolean | undefined;
                oneUsername?: boolean | undefined;
            }[]>]: never; }) | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        } & { [K_20 in Exclude<keyof I["nextStepReasons"][number], "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; })[] & { [K_21 in Exclude<keyof I["nextStepReasons"], "$type" | keyof {
            reasonTextToShow?: string | undefined;
            reasonText?: string | undefined;
            nextStepHeader?: string | undefined;
            nextStepReasons?: any[] | undefined;
            complaintButtonText?: string | undefined;
            complaintUrl?: string | undefined;
            complaintPageTitle?: string | undefined;
            fileComplaint?: boolean | undefined;
            complaintPrompt?: string | undefined;
            canWriteNotes?: boolean | undefined;
            isAbuseOfReportButton?: boolean | undefined;
            notesInputTitle?: string | undefined;
            usernamesInputTitle?: string | undefined;
            canSpecifyUsernames?: boolean | undefined;
            requestCrisisSupport?: boolean | undefined;
            oneUsername?: boolean | undefined;
        }[]>]: never; }) | undefined;
        complaintButtonText?: string | undefined;
        complaintUrl?: string | undefined;
        complaintPageTitle?: string | undefined;
        fileComplaint?: boolean | undefined;
        complaintPrompt?: string | undefined;
        canWriteNotes?: boolean | undefined;
        isAbuseOfReportButton?: boolean | undefined;
        notesInputTitle?: string | undefined;
        usernamesInputTitle?: string | undefined;
        canSpecifyUsernames?: boolean | undefined;
        requestCrisisSupport?: boolean | undefined;
        oneUsername?: boolean | undefined;
    } & { [K_22 in Exclude<keyof I, "$type" | keyof SubredditAboutRulesResponse_RuleFlow>]: never; }>(object: I): SubredditAboutRulesResponse_RuleFlow;
};
export declare const SubredditAboutTrafficResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutTrafficResponse";
    encode(message: SubredditAboutTrafficResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutTrafficResponse;
    fromJSON(object: any): SubredditAboutTrafficResponse;
    toJSON(message: SubredditAboutTrafficResponse): unknown;
    fromPartial<I extends {
        day?: {
            values?: number[] | undefined;
        }[] | undefined;
        hour?: {
            values?: number[] | undefined;
        }[] | undefined;
        month?: {
            values?: number[] | undefined;
        }[] | undefined;
    } & {
        day?: ({
            values?: number[] | undefined;
        }[] & ({
            values?: number[] | undefined;
        } & {
            values?: (number[] & number[] & { [K in Exclude<keyof I["day"][number]["values"], "$type" | keyof number[]>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["day"][number], "$type" | "values">]: never; })[] & { [K_2 in Exclude<keyof I["day"], "$type" | keyof {
            values?: number[] | undefined;
        }[]>]: never; }) | undefined;
        hour?: ({
            values?: number[] | undefined;
        }[] & ({
            values?: number[] | undefined;
        } & {
            values?: (number[] & number[] & { [K_3 in Exclude<keyof I["hour"][number]["values"], "$type" | keyof number[]>]: never; }) | undefined;
        } & { [K_4 in Exclude<keyof I["hour"][number], "$type" | "values">]: never; })[] & { [K_5 in Exclude<keyof I["hour"], "$type" | keyof {
            values?: number[] | undefined;
        }[]>]: never; }) | undefined;
        month?: ({
            values?: number[] | undefined;
        }[] & ({
            values?: number[] | undefined;
        } & {
            values?: (number[] & number[] & { [K_6 in Exclude<keyof I["month"][number]["values"], "$type" | keyof number[]>]: never; }) | undefined;
        } & { [K_7 in Exclude<keyof I["month"][number], "$type" | "values">]: never; })[] & { [K_8 in Exclude<keyof I["month"], "$type" | keyof {
            values?: number[] | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_9 in Exclude<keyof I, "$type" | keyof SubredditAboutTrafficResponse>]: never; }>(object: I): SubredditAboutTrafficResponse;
};
export declare const SubredditAboutTrafficResponse_Data: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAboutTrafficResponse.Data";
    encode(message: SubredditAboutTrafficResponse_Data, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutTrafficResponse_Data;
    fromJSON(object: any): SubredditAboutTrafficResponse_Data;
    toJSON(message: SubredditAboutTrafficResponse_Data): unknown;
    fromPartial<I extends {
        values?: number[] | undefined;
    } & {
        values?: (number[] & number[] & { [K in Exclude<keyof I["values"], "$type" | keyof number[]>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | "values">]: never; }>(object: I): SubredditAboutTrafficResponse_Data;
};
export declare const StickyResponse: {
    $type: "devvit.plugin.redditapi.subreddits.StickyResponse";
    encode(message: StickyResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StickyResponse;
    fromJSON(object: any): StickyResponse;
    toJSON(message: StickyResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: ({
                kind?: string | undefined;
                data?: {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } & {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: (string[] & string[] & { [K in Exclude<keyof I["data"]["children"][number]["data"]["userReports"], "$type" | keyof string[]>]: never; }) | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["children"][number]["data"]["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: ({
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } & {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } & { [K_2 in Exclude<keyof I["data"]["children"][number]["data"]["mediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: ({
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } & {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } & { [K_3 in Exclude<keyof I["data"]["children"][number]["data"]["secureMediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["children"][number]["data"]["previousVisits"], "$type" | keyof number[]>]: never; }) | undefined;
                    authorFlairRichtext?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["children"][number]["data"]["authorFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                    gildings?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & { [K_6 in Exclude<keyof I["data"]["children"][number]["data"]["gildings"], "$type" | keyof Any>]: never; }) | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] & ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & { [K_7 in Exclude<keyof I["data"]["children"][number]["data"]["allAwardings"][number], "$type" | keyof Any>]: never; })[] & { [K_8 in Exclude<keyof I["data"]["children"][number]["data"]["allAwardings"], "$type" | keyof {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[]>]: never; }) | undefined;
                    awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["data"]["children"][number]["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] & ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & { [K_10 in Exclude<keyof I["data"]["children"][number]["data"]["treatmentTags"][number], "$type" | keyof Any>]: never; })[] & { [K_11 in Exclude<keyof I["data"]["children"][number]["data"]["treatmentTags"], "$type" | keyof {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[]>]: never; }) | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] & ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & { [K_12 in Exclude<keyof I["data"]["children"][number]["data"]["reportReasons"][number], "$type" | keyof Any>]: never; })[] & { [K_13 in Exclude<keyof I["data"]["children"][number]["data"]["reportReasons"], "$type" | keyof {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[]>]: never; }) | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] & ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & { [K_14 in Exclude<keyof I["data"]["children"][number]["data"]["modReports"][number], "$type" | keyof Any>]: never; })[] & { [K_15 in Exclude<keyof I["data"]["children"][number]["data"]["modReports"], "$type" | keyof {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[]>]: never; }) | undefined;
                    isVideo?: boolean | undefined;
                } & { [K_16 in Exclude<keyof I["data"]["children"][number]["data"], "$type" | keyof StickyResponse_LinkData>]: never; }) | undefined;
            } & { [K_17 in Exclude<keyof I["data"]["children"][number], "$type" | keyof StickyResponse_WrappedStickyListing>]: never; })[] & { [K_18 in Exclude<keyof I["data"]["children"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    authorFlairBackgroundColor?: string | undefined;
                    approvedAtUtc?: number | undefined;
                    subreddit?: string | undefined;
                    selftext?: string | undefined;
                    userReports?: string[] | undefined;
                    saved?: boolean | undefined;
                    modReasonTitle?: string | undefined;
                    gilded?: number | undefined;
                    clicked?: boolean | undefined;
                    title?: string | undefined;
                    linkFlairRichtext?: string[] | undefined;
                    subredditNamePrefixed?: string | undefined;
                    hidden?: boolean | undefined;
                    pwls?: string | undefined;
                    linkFlairCssClass?: string | undefined;
                    downs?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    topAwardedType?: string | undefined;
                    parentWhitelistStatus?: boolean | undefined;
                    hideScore?: boolean | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    linkFlairTextColor?: string | undefined;
                    upvoteRatio?: number | undefined;
                    ignoreReports?: boolean | undefined;
                    ups?: number | undefined;
                    domain?: string | undefined;
                    mediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    thumbnailWidth?: number | undefined;
                    authorFlairTemplateId?: string | undefined;
                    isOriginalContent?: boolean | undefined;
                    authorFullname?: string | undefined;
                    secureMedia?: boolean | undefined;
                    isRedditMediaDomain?: boolean | undefined;
                    isMeta?: boolean | undefined;
                    category?: string | undefined;
                    secureMediaEmbed?: {
                        content?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        sandbox?: boolean | undefined;
                        scrolling?: boolean | undefined;
                        publicThumbnailUrl?: string | undefined;
                    } | undefined;
                    linkFlairText?: string | undefined;
                    canModPost?: boolean | undefined;
                    score?: number | undefined;
                    approvedBy?: string | undefined;
                    isCreatedFromAdsUi?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    thumbnail?: string | undefined;
                    edited?: boolean | undefined;
                    authorFlairCssClass?: string | undefined;
                    previousVisits?: number[] | undefined;
                    authorFlairRichtext?: string[] | undefined;
                    gildings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    contentCategories?: string | undefined;
                    isSelf?: boolean | undefined;
                    subredditType?: string | undefined;
                    created?: number | undefined;
                    linkFlairType?: string | undefined;
                    wls?: string | undefined;
                    removedByCategory?: string | undefined;
                    bannedBy?: string | undefined;
                    authorFlairType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    allowLiveComments?: boolean | undefined;
                    selftextHtml?: string | undefined;
                    likes?: boolean | undefined;
                    suggestedSort?: string | undefined;
                    bannedAtUtc?: number | undefined;
                    viewCount?: number | undefined;
                    archived?: boolean | undefined;
                    noFollow?: boolean | undefined;
                    spam?: boolean | undefined;
                    isCrosspostable?: boolean | undefined;
                    pinned?: boolean | undefined;
                    over18?: boolean | undefined;
                    allAwardings?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    awarders?: string[] | undefined;
                    mediaOnly?: boolean | undefined;
                    canGild?: boolean | undefined;
                    removed?: boolean | undefined;
                    spoiler?: boolean | undefined;
                    locked?: boolean | undefined;
                    authorFlairText?: string | undefined;
                    treatmentTags?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    rteMode?: string | undefined;
                    visited?: boolean | undefined;
                    removedBy?: string | undefined;
                    modNote?: string | undefined;
                    distinguished?: string | undefined;
                    subredditId?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    modReasonBy?: string | undefined;
                    numReports?: number | undefined;
                    removalReason?: string | undefined;
                    linkFlairBackgroundColor?: string | undefined;
                    id?: string | undefined;
                    isRobotIndexable?: boolean | undefined;
                    numDuplicates?: number | undefined;
                    reportReasons?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    author?: string | undefined;
                    discussionType?: string | undefined;
                    numComments?: number | undefined;
                    sendReplies?: boolean | undefined;
                    media?: string | undefined;
                    contestMode?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    approved?: boolean | undefined;
                    authorFlairTextColor?: string | undefined;
                    permalink?: string | undefined;
                    whitelistStatus?: boolean | undefined;
                    stickied?: boolean | undefined;
                    url?: string | undefined;
                    subredditSubscribers?: number | undefined;
                    createdUtc?: number | undefined;
                    numCrossposts?: number | undefined;
                    modReports?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    isVideo?: boolean | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_19 in Exclude<keyof I["data"], "$type" | keyof StickyResponse_StickyResponseData>]: never; }) | undefined;
    } & { [K_20 in Exclude<keyof I, "$type" | keyof StickyResponse>]: never; }>(object: I): StickyResponse;
};
export declare const StickyResponse_LinkData: {
    $type: "devvit.plugin.redditapi.subreddits.StickyResponse.LinkData";
    encode(message: StickyResponse_LinkData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StickyResponse_LinkData;
    fromJSON(object: any): StickyResponse_LinkData;
    toJSON(message: StickyResponse_LinkData): unknown;
    fromPartial<I extends {
        authorFlairBackgroundColor?: string | undefined;
        approvedAtUtc?: number | undefined;
        subreddit?: string | undefined;
        selftext?: string | undefined;
        userReports?: string[] | undefined;
        saved?: boolean | undefined;
        modReasonTitle?: string | undefined;
        gilded?: number | undefined;
        clicked?: boolean | undefined;
        title?: string | undefined;
        linkFlairRichtext?: string[] | undefined;
        subredditNamePrefixed?: string | undefined;
        hidden?: boolean | undefined;
        pwls?: string | undefined;
        linkFlairCssClass?: string | undefined;
        downs?: number | undefined;
        thumbnailHeight?: number | undefined;
        topAwardedType?: string | undefined;
        parentWhitelistStatus?: boolean | undefined;
        hideScore?: boolean | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        linkFlairTextColor?: string | undefined;
        upvoteRatio?: number | undefined;
        ignoreReports?: boolean | undefined;
        ups?: number | undefined;
        domain?: string | undefined;
        mediaEmbed?: {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } | undefined;
        thumbnailWidth?: number | undefined;
        authorFlairTemplateId?: string | undefined;
        isOriginalContent?: boolean | undefined;
        authorFullname?: string | undefined;
        secureMedia?: boolean | undefined;
        isRedditMediaDomain?: boolean | undefined;
        isMeta?: boolean | undefined;
        category?: string | undefined;
        secureMediaEmbed?: {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } | undefined;
        linkFlairText?: string | undefined;
        canModPost?: boolean | undefined;
        score?: number | undefined;
        approvedBy?: string | undefined;
        isCreatedFromAdsUi?: boolean | undefined;
        authorPremium?: boolean | undefined;
        thumbnail?: string | undefined;
        edited?: boolean | undefined;
        authorFlairCssClass?: string | undefined;
        previousVisits?: number[] | undefined;
        authorFlairRichtext?: string[] | undefined;
        gildings?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } | undefined;
        contentCategories?: string | undefined;
        isSelf?: boolean | undefined;
        subredditType?: string | undefined;
        created?: number | undefined;
        linkFlairType?: string | undefined;
        wls?: string | undefined;
        removedByCategory?: string | undefined;
        bannedBy?: string | undefined;
        authorFlairType?: string | undefined;
        totalAwardsReceived?: number | undefined;
        allowLiveComments?: boolean | undefined;
        selftextHtml?: string | undefined;
        likes?: boolean | undefined;
        suggestedSort?: string | undefined;
        bannedAtUtc?: number | undefined;
        viewCount?: number | undefined;
        archived?: boolean | undefined;
        noFollow?: boolean | undefined;
        spam?: boolean | undefined;
        isCrosspostable?: boolean | undefined;
        pinned?: boolean | undefined;
        over18?: boolean | undefined;
        allAwardings?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        awarders?: string[] | undefined;
        mediaOnly?: boolean | undefined;
        canGild?: boolean | undefined;
        removed?: boolean | undefined;
        spoiler?: boolean | undefined;
        locked?: boolean | undefined;
        authorFlairText?: string | undefined;
        treatmentTags?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        rteMode?: string | undefined;
        visited?: boolean | undefined;
        removedBy?: string | undefined;
        modNote?: string | undefined;
        distinguished?: string | undefined;
        subredditId?: string | undefined;
        authorIsBlocked?: boolean | undefined;
        modReasonBy?: string | undefined;
        numReports?: number | undefined;
        removalReason?: string | undefined;
        linkFlairBackgroundColor?: string | undefined;
        id?: string | undefined;
        isRobotIndexable?: boolean | undefined;
        numDuplicates?: number | undefined;
        reportReasons?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        author?: string | undefined;
        discussionType?: string | undefined;
        numComments?: number | undefined;
        sendReplies?: boolean | undefined;
        media?: string | undefined;
        contestMode?: boolean | undefined;
        authorPatreonFlair?: boolean | undefined;
        approved?: boolean | undefined;
        authorFlairTextColor?: string | undefined;
        permalink?: string | undefined;
        whitelistStatus?: boolean | undefined;
        stickied?: boolean | undefined;
        url?: string | undefined;
        subredditSubscribers?: number | undefined;
        createdUtc?: number | undefined;
        numCrossposts?: number | undefined;
        modReports?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        isVideo?: boolean | undefined;
    } & {
        authorFlairBackgroundColor?: string | undefined;
        approvedAtUtc?: number | undefined;
        subreddit?: string | undefined;
        selftext?: string | undefined;
        userReports?: (string[] & string[] & { [K in Exclude<keyof I["userReports"], "$type" | keyof string[]>]: never; }) | undefined;
        saved?: boolean | undefined;
        modReasonTitle?: string | undefined;
        gilded?: number | undefined;
        clicked?: boolean | undefined;
        title?: string | undefined;
        linkFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
        subredditNamePrefixed?: string | undefined;
        hidden?: boolean | undefined;
        pwls?: string | undefined;
        linkFlairCssClass?: string | undefined;
        downs?: number | undefined;
        thumbnailHeight?: number | undefined;
        topAwardedType?: string | undefined;
        parentWhitelistStatus?: boolean | undefined;
        hideScore?: boolean | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        linkFlairTextColor?: string | undefined;
        upvoteRatio?: number | undefined;
        ignoreReports?: boolean | undefined;
        ups?: number | undefined;
        domain?: string | undefined;
        mediaEmbed?: ({
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & { [K_2 in Exclude<keyof I["mediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
        thumbnailWidth?: number | undefined;
        authorFlairTemplateId?: string | undefined;
        isOriginalContent?: boolean | undefined;
        authorFullname?: string | undefined;
        secureMedia?: boolean | undefined;
        isRedditMediaDomain?: boolean | undefined;
        isMeta?: boolean | undefined;
        category?: string | undefined;
        secureMediaEmbed?: ({
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & { [K_3 in Exclude<keyof I["secureMediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
        linkFlairText?: string | undefined;
        canModPost?: boolean | undefined;
        score?: number | undefined;
        approvedBy?: string | undefined;
        isCreatedFromAdsUi?: boolean | undefined;
        authorPremium?: boolean | undefined;
        thumbnail?: string | undefined;
        edited?: boolean | undefined;
        authorFlairCssClass?: string | undefined;
        previousVisits?: (number[] & number[] & { [K_4 in Exclude<keyof I["previousVisits"], "$type" | keyof number[]>]: never; }) | undefined;
        authorFlairRichtext?: (string[] & string[] & { [K_5 in Exclude<keyof I["authorFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
        gildings?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K_6 in Exclude<keyof I["gildings"], "$type" | keyof Any>]: never; }) | undefined;
        contentCategories?: string | undefined;
        isSelf?: boolean | undefined;
        subredditType?: string | undefined;
        created?: number | undefined;
        linkFlairType?: string | undefined;
        wls?: string | undefined;
        removedByCategory?: string | undefined;
        bannedBy?: string | undefined;
        authorFlairType?: string | undefined;
        totalAwardsReceived?: number | undefined;
        allowLiveComments?: boolean | undefined;
        selftextHtml?: string | undefined;
        likes?: boolean | undefined;
        suggestedSort?: string | undefined;
        bannedAtUtc?: number | undefined;
        viewCount?: number | undefined;
        archived?: boolean | undefined;
        noFollow?: boolean | undefined;
        spam?: boolean | undefined;
        isCrosspostable?: boolean | undefined;
        pinned?: boolean | undefined;
        over18?: boolean | undefined;
        allAwardings?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K_7 in Exclude<keyof I["allAwardings"][number], "$type" | keyof Any>]: never; })[] & { [K_8 in Exclude<keyof I["allAwardings"], "$type" | keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
        awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
        mediaOnly?: boolean | undefined;
        canGild?: boolean | undefined;
        removed?: boolean | undefined;
        spoiler?: boolean | undefined;
        locked?: boolean | undefined;
        authorFlairText?: string | undefined;
        treatmentTags?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K_10 in Exclude<keyof I["treatmentTags"][number], "$type" | keyof Any>]: never; })[] & { [K_11 in Exclude<keyof I["treatmentTags"], "$type" | keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
        rteMode?: string | undefined;
        visited?: boolean | undefined;
        removedBy?: string | undefined;
        modNote?: string | undefined;
        distinguished?: string | undefined;
        subredditId?: string | undefined;
        authorIsBlocked?: boolean | undefined;
        modReasonBy?: string | undefined;
        numReports?: number | undefined;
        removalReason?: string | undefined;
        linkFlairBackgroundColor?: string | undefined;
        id?: string | undefined;
        isRobotIndexable?: boolean | undefined;
        numDuplicates?: number | undefined;
        reportReasons?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K_12 in Exclude<keyof I["reportReasons"][number], "$type" | keyof Any>]: never; })[] & { [K_13 in Exclude<keyof I["reportReasons"], "$type" | keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
        author?: string | undefined;
        discussionType?: string | undefined;
        numComments?: number | undefined;
        sendReplies?: boolean | undefined;
        media?: string | undefined;
        contestMode?: boolean | undefined;
        authorPatreonFlair?: boolean | undefined;
        approved?: boolean | undefined;
        authorFlairTextColor?: string | undefined;
        permalink?: string | undefined;
        whitelistStatus?: boolean | undefined;
        stickied?: boolean | undefined;
        url?: string | undefined;
        subredditSubscribers?: number | undefined;
        createdUtc?: number | undefined;
        numCrossposts?: number | undefined;
        modReports?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K_14 in Exclude<keyof I["modReports"][number], "$type" | keyof Any>]: never; })[] & { [K_15 in Exclude<keyof I["modReports"], "$type" | keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
        isVideo?: boolean | undefined;
    } & { [K_16 in Exclude<keyof I, "$type" | keyof StickyResponse_LinkData>]: never; }>(object: I): StickyResponse_LinkData;
};
export declare const StickyResponse_WrappedStickyListing: {
    $type: "devvit.plugin.redditapi.subreddits.StickyResponse.WrappedStickyListing";
    encode(message: StickyResponse_WrappedStickyListing, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StickyResponse_WrappedStickyListing;
    fromJSON(object: any): StickyResponse_WrappedStickyListing;
    toJSON(message: StickyResponse_WrappedStickyListing): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            authorFlairBackgroundColor?: string | undefined;
            approvedAtUtc?: number | undefined;
            subreddit?: string | undefined;
            selftext?: string | undefined;
            userReports?: string[] | undefined;
            saved?: boolean | undefined;
            modReasonTitle?: string | undefined;
            gilded?: number | undefined;
            clicked?: boolean | undefined;
            title?: string | undefined;
            linkFlairRichtext?: string[] | undefined;
            subredditNamePrefixed?: string | undefined;
            hidden?: boolean | undefined;
            pwls?: string | undefined;
            linkFlairCssClass?: string | undefined;
            downs?: number | undefined;
            thumbnailHeight?: number | undefined;
            topAwardedType?: string | undefined;
            parentWhitelistStatus?: boolean | undefined;
            hideScore?: boolean | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            linkFlairTextColor?: string | undefined;
            upvoteRatio?: number | undefined;
            ignoreReports?: boolean | undefined;
            ups?: number | undefined;
            domain?: string | undefined;
            mediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            thumbnailWidth?: number | undefined;
            authorFlairTemplateId?: string | undefined;
            isOriginalContent?: boolean | undefined;
            authorFullname?: string | undefined;
            secureMedia?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isMeta?: boolean | undefined;
            category?: string | undefined;
            secureMediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            linkFlairText?: string | undefined;
            canModPost?: boolean | undefined;
            score?: number | undefined;
            approvedBy?: string | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            authorPremium?: boolean | undefined;
            thumbnail?: string | undefined;
            edited?: boolean | undefined;
            authorFlairCssClass?: string | undefined;
            previousVisits?: number[] | undefined;
            authorFlairRichtext?: string[] | undefined;
            gildings?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            contentCategories?: string | undefined;
            isSelf?: boolean | undefined;
            subredditType?: string | undefined;
            created?: number | undefined;
            linkFlairType?: string | undefined;
            wls?: string | undefined;
            removedByCategory?: string | undefined;
            bannedBy?: string | undefined;
            authorFlairType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            allowLiveComments?: boolean | undefined;
            selftextHtml?: string | undefined;
            likes?: boolean | undefined;
            suggestedSort?: string | undefined;
            bannedAtUtc?: number | undefined;
            viewCount?: number | undefined;
            archived?: boolean | undefined;
            noFollow?: boolean | undefined;
            spam?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            pinned?: boolean | undefined;
            over18?: boolean | undefined;
            allAwardings?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            awarders?: string[] | undefined;
            mediaOnly?: boolean | undefined;
            canGild?: boolean | undefined;
            removed?: boolean | undefined;
            spoiler?: boolean | undefined;
            locked?: boolean | undefined;
            authorFlairText?: string | undefined;
            treatmentTags?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            rteMode?: string | undefined;
            visited?: boolean | undefined;
            removedBy?: string | undefined;
            modNote?: string | undefined;
            distinguished?: string | undefined;
            subredditId?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            modReasonBy?: string | undefined;
            numReports?: number | undefined;
            removalReason?: string | undefined;
            linkFlairBackgroundColor?: string | undefined;
            id?: string | undefined;
            isRobotIndexable?: boolean | undefined;
            numDuplicates?: number | undefined;
            reportReasons?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            author?: string | undefined;
            discussionType?: string | undefined;
            numComments?: number | undefined;
            sendReplies?: boolean | undefined;
            media?: string | undefined;
            contestMode?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            approved?: boolean | undefined;
            authorFlairTextColor?: string | undefined;
            permalink?: string | undefined;
            whitelistStatus?: boolean | undefined;
            stickied?: boolean | undefined;
            url?: string | undefined;
            subredditSubscribers?: number | undefined;
            createdUtc?: number | undefined;
            numCrossposts?: number | undefined;
            modReports?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            isVideo?: boolean | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            authorFlairBackgroundColor?: string | undefined;
            approvedAtUtc?: number | undefined;
            subreddit?: string | undefined;
            selftext?: string | undefined;
            userReports?: string[] | undefined;
            saved?: boolean | undefined;
            modReasonTitle?: string | undefined;
            gilded?: number | undefined;
            clicked?: boolean | undefined;
            title?: string | undefined;
            linkFlairRichtext?: string[] | undefined;
            subredditNamePrefixed?: string | undefined;
            hidden?: boolean | undefined;
            pwls?: string | undefined;
            linkFlairCssClass?: string | undefined;
            downs?: number | undefined;
            thumbnailHeight?: number | undefined;
            topAwardedType?: string | undefined;
            parentWhitelistStatus?: boolean | undefined;
            hideScore?: boolean | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            linkFlairTextColor?: string | undefined;
            upvoteRatio?: number | undefined;
            ignoreReports?: boolean | undefined;
            ups?: number | undefined;
            domain?: string | undefined;
            mediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            thumbnailWidth?: number | undefined;
            authorFlairTemplateId?: string | undefined;
            isOriginalContent?: boolean | undefined;
            authorFullname?: string | undefined;
            secureMedia?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isMeta?: boolean | undefined;
            category?: string | undefined;
            secureMediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            linkFlairText?: string | undefined;
            canModPost?: boolean | undefined;
            score?: number | undefined;
            approvedBy?: string | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            authorPremium?: boolean | undefined;
            thumbnail?: string | undefined;
            edited?: boolean | undefined;
            authorFlairCssClass?: string | undefined;
            previousVisits?: number[] | undefined;
            authorFlairRichtext?: string[] | undefined;
            gildings?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            contentCategories?: string | undefined;
            isSelf?: boolean | undefined;
            subredditType?: string | undefined;
            created?: number | undefined;
            linkFlairType?: string | undefined;
            wls?: string | undefined;
            removedByCategory?: string | undefined;
            bannedBy?: string | undefined;
            authorFlairType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            allowLiveComments?: boolean | undefined;
            selftextHtml?: string | undefined;
            likes?: boolean | undefined;
            suggestedSort?: string | undefined;
            bannedAtUtc?: number | undefined;
            viewCount?: number | undefined;
            archived?: boolean | undefined;
            noFollow?: boolean | undefined;
            spam?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            pinned?: boolean | undefined;
            over18?: boolean | undefined;
            allAwardings?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            awarders?: string[] | undefined;
            mediaOnly?: boolean | undefined;
            canGild?: boolean | undefined;
            removed?: boolean | undefined;
            spoiler?: boolean | undefined;
            locked?: boolean | undefined;
            authorFlairText?: string | undefined;
            treatmentTags?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            rteMode?: string | undefined;
            visited?: boolean | undefined;
            removedBy?: string | undefined;
            modNote?: string | undefined;
            distinguished?: string | undefined;
            subredditId?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            modReasonBy?: string | undefined;
            numReports?: number | undefined;
            removalReason?: string | undefined;
            linkFlairBackgroundColor?: string | undefined;
            id?: string | undefined;
            isRobotIndexable?: boolean | undefined;
            numDuplicates?: number | undefined;
            reportReasons?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            author?: string | undefined;
            discussionType?: string | undefined;
            numComments?: number | undefined;
            sendReplies?: boolean | undefined;
            media?: string | undefined;
            contestMode?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            approved?: boolean | undefined;
            authorFlairTextColor?: string | undefined;
            permalink?: string | undefined;
            whitelistStatus?: boolean | undefined;
            stickied?: boolean | undefined;
            url?: string | undefined;
            subredditSubscribers?: number | undefined;
            createdUtc?: number | undefined;
            numCrossposts?: number | undefined;
            modReports?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            isVideo?: boolean | undefined;
        } & {
            authorFlairBackgroundColor?: string | undefined;
            approvedAtUtc?: number | undefined;
            subreddit?: string | undefined;
            selftext?: string | undefined;
            userReports?: (string[] & string[] & { [K in Exclude<keyof I["data"]["userReports"], "$type" | keyof string[]>]: never; }) | undefined;
            saved?: boolean | undefined;
            modReasonTitle?: string | undefined;
            gilded?: number | undefined;
            clicked?: boolean | undefined;
            title?: string | undefined;
            linkFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
            subredditNamePrefixed?: string | undefined;
            hidden?: boolean | undefined;
            pwls?: string | undefined;
            linkFlairCssClass?: string | undefined;
            downs?: number | undefined;
            thumbnailHeight?: number | undefined;
            topAwardedType?: string | undefined;
            parentWhitelistStatus?: boolean | undefined;
            hideScore?: boolean | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            linkFlairTextColor?: string | undefined;
            upvoteRatio?: number | undefined;
            ignoreReports?: boolean | undefined;
            ups?: number | undefined;
            domain?: string | undefined;
            mediaEmbed?: ({
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & { [K_2 in Exclude<keyof I["data"]["mediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
            thumbnailWidth?: number | undefined;
            authorFlairTemplateId?: string | undefined;
            isOriginalContent?: boolean | undefined;
            authorFullname?: string | undefined;
            secureMedia?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isMeta?: boolean | undefined;
            category?: string | undefined;
            secureMediaEmbed?: ({
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & { [K_3 in Exclude<keyof I["data"]["secureMediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
            linkFlairText?: string | undefined;
            canModPost?: boolean | undefined;
            score?: number | undefined;
            approvedBy?: string | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            authorPremium?: boolean | undefined;
            thumbnail?: string | undefined;
            edited?: boolean | undefined;
            authorFlairCssClass?: string | undefined;
            previousVisits?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["previousVisits"], "$type" | keyof number[]>]: never; }) | undefined;
            authorFlairRichtext?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["authorFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
            gildings?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K_6 in Exclude<keyof I["data"]["gildings"], "$type" | keyof Any>]: never; }) | undefined;
            contentCategories?: string | undefined;
            isSelf?: boolean | undefined;
            subredditType?: string | undefined;
            created?: number | undefined;
            linkFlairType?: string | undefined;
            wls?: string | undefined;
            removedByCategory?: string | undefined;
            bannedBy?: string | undefined;
            authorFlairType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            allowLiveComments?: boolean | undefined;
            selftextHtml?: string | undefined;
            likes?: boolean | undefined;
            suggestedSort?: string | undefined;
            bannedAtUtc?: number | undefined;
            viewCount?: number | undefined;
            archived?: boolean | undefined;
            noFollow?: boolean | undefined;
            spam?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            pinned?: boolean | undefined;
            over18?: boolean | undefined;
            allAwardings?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K_7 in Exclude<keyof I["data"]["allAwardings"][number], "$type" | keyof Any>]: never; })[] & { [K_8 in Exclude<keyof I["data"]["allAwardings"], "$type" | keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>]: never; }) | undefined;
            awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
            mediaOnly?: boolean | undefined;
            canGild?: boolean | undefined;
            removed?: boolean | undefined;
            spoiler?: boolean | undefined;
            locked?: boolean | undefined;
            authorFlairText?: string | undefined;
            treatmentTags?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K_10 in Exclude<keyof I["data"]["treatmentTags"][number], "$type" | keyof Any>]: never; })[] & { [K_11 in Exclude<keyof I["data"]["treatmentTags"], "$type" | keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>]: never; }) | undefined;
            rteMode?: string | undefined;
            visited?: boolean | undefined;
            removedBy?: string | undefined;
            modNote?: string | undefined;
            distinguished?: string | undefined;
            subredditId?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            modReasonBy?: string | undefined;
            numReports?: number | undefined;
            removalReason?: string | undefined;
            linkFlairBackgroundColor?: string | undefined;
            id?: string | undefined;
            isRobotIndexable?: boolean | undefined;
            numDuplicates?: number | undefined;
            reportReasons?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K_12 in Exclude<keyof I["data"]["reportReasons"][number], "$type" | keyof Any>]: never; })[] & { [K_13 in Exclude<keyof I["data"]["reportReasons"], "$type" | keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>]: never; }) | undefined;
            author?: string | undefined;
            discussionType?: string | undefined;
            numComments?: number | undefined;
            sendReplies?: boolean | undefined;
            media?: string | undefined;
            contestMode?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            approved?: boolean | undefined;
            authorFlairTextColor?: string | undefined;
            permalink?: string | undefined;
            whitelistStatus?: boolean | undefined;
            stickied?: boolean | undefined;
            url?: string | undefined;
            subredditSubscribers?: number | undefined;
            createdUtc?: number | undefined;
            numCrossposts?: number | undefined;
            modReports?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K_14 in Exclude<keyof I["data"]["modReports"][number], "$type" | keyof Any>]: never; })[] & { [K_15 in Exclude<keyof I["data"]["modReports"], "$type" | keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>]: never; }) | undefined;
            isVideo?: boolean | undefined;
        } & { [K_16 in Exclude<keyof I["data"], "$type" | keyof StickyResponse_LinkData>]: never; }) | undefined;
    } & { [K_17 in Exclude<keyof I, "$type" | keyof StickyResponse_WrappedStickyListing>]: never; }>(object: I): StickyResponse_WrappedStickyListing;
};
export declare const StickyResponse_StickyResponseData: {
    $type: "devvit.plugin.redditapi.subreddits.StickyResponse.StickyResponseData";
    encode(message: StickyResponse_StickyResponseData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StickyResponse_StickyResponseData;
    fromJSON(object: any): StickyResponse_StickyResponseData;
    toJSON(message: StickyResponse_StickyResponseData): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        modhash?: string | undefined;
        geoFilter?: string | undefined;
        children?: {
            kind?: string | undefined;
            data?: {
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: string[] | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: string[] | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: number[] | undefined;
                authorFlairRichtext?: string[] | undefined;
                gildings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                awarders?: string[] | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                isVideo?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        modhash?: string | undefined;
        geoFilter?: string | undefined;
        children?: ({
            kind?: string | undefined;
            data?: {
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: string[] | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: string[] | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: number[] | undefined;
                authorFlairRichtext?: string[] | undefined;
                gildings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                awarders?: string[] | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                isVideo?: boolean | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: string[] | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: string[] | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: number[] | undefined;
                authorFlairRichtext?: string[] | undefined;
                gildings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                awarders?: string[] | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                isVideo?: boolean | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: string[] | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: string[] | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: number[] | undefined;
                authorFlairRichtext?: string[] | undefined;
                gildings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                awarders?: string[] | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                isVideo?: boolean | undefined;
            } & {
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: (string[] & string[] & { [K in Exclude<keyof I["children"][number]["data"]["userReports"], "$type" | keyof string[]>]: never; }) | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["children"][number]["data"]["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: ({
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } & {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } & { [K_2 in Exclude<keyof I["children"][number]["data"]["mediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: ({
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } & {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } & { [K_3 in Exclude<keyof I["children"][number]["data"]["secureMediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: (number[] & number[] & { [K_4 in Exclude<keyof I["children"][number]["data"]["previousVisits"], "$type" | keyof number[]>]: never; }) | undefined;
                authorFlairRichtext?: (string[] & string[] & { [K_5 in Exclude<keyof I["children"][number]["data"]["authorFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                gildings?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & { [K_6 in Exclude<keyof I["children"][number]["data"]["gildings"], "$type" | keyof Any>]: never; }) | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & { [K_7 in Exclude<keyof I["children"][number]["data"]["allAwardings"][number], "$type" | keyof Any>]: never; })[] & { [K_8 in Exclude<keyof I["children"][number]["data"]["allAwardings"], "$type" | keyof {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[]>]: never; }) | undefined;
                awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["children"][number]["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & { [K_10 in Exclude<keyof I["children"][number]["data"]["treatmentTags"][number], "$type" | keyof Any>]: never; })[] & { [K_11 in Exclude<keyof I["children"][number]["data"]["treatmentTags"], "$type" | keyof {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[]>]: never; }) | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & { [K_12 in Exclude<keyof I["children"][number]["data"]["reportReasons"][number], "$type" | keyof Any>]: never; })[] & { [K_13 in Exclude<keyof I["children"][number]["data"]["reportReasons"], "$type" | keyof {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[]>]: never; }) | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & { [K_14 in Exclude<keyof I["children"][number]["data"]["modReports"][number], "$type" | keyof Any>]: never; })[] & { [K_15 in Exclude<keyof I["children"][number]["data"]["modReports"], "$type" | keyof {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[]>]: never; }) | undefined;
                isVideo?: boolean | undefined;
            } & { [K_16 in Exclude<keyof I["children"][number]["data"], "$type" | keyof StickyResponse_LinkData>]: never; }) | undefined;
        } & { [K_17 in Exclude<keyof I["children"][number], "$type" | keyof StickyResponse_WrappedStickyListing>]: never; })[] & { [K_18 in Exclude<keyof I["children"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                authorFlairBackgroundColor?: string | undefined;
                approvedAtUtc?: number | undefined;
                subreddit?: string | undefined;
                selftext?: string | undefined;
                userReports?: string[] | undefined;
                saved?: boolean | undefined;
                modReasonTitle?: string | undefined;
                gilded?: number | undefined;
                clicked?: boolean | undefined;
                title?: string | undefined;
                linkFlairRichtext?: string[] | undefined;
                subredditNamePrefixed?: string | undefined;
                hidden?: boolean | undefined;
                pwls?: string | undefined;
                linkFlairCssClass?: string | undefined;
                downs?: number | undefined;
                thumbnailHeight?: number | undefined;
                topAwardedType?: string | undefined;
                parentWhitelistStatus?: boolean | undefined;
                hideScore?: boolean | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                linkFlairTextColor?: string | undefined;
                upvoteRatio?: number | undefined;
                ignoreReports?: boolean | undefined;
                ups?: number | undefined;
                domain?: string | undefined;
                mediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                thumbnailWidth?: number | undefined;
                authorFlairTemplateId?: string | undefined;
                isOriginalContent?: boolean | undefined;
                authorFullname?: string | undefined;
                secureMedia?: boolean | undefined;
                isRedditMediaDomain?: boolean | undefined;
                isMeta?: boolean | undefined;
                category?: string | undefined;
                secureMediaEmbed?: {
                    content?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                    sandbox?: boolean | undefined;
                    scrolling?: boolean | undefined;
                    publicThumbnailUrl?: string | undefined;
                } | undefined;
                linkFlairText?: string | undefined;
                canModPost?: boolean | undefined;
                score?: number | undefined;
                approvedBy?: string | undefined;
                isCreatedFromAdsUi?: boolean | undefined;
                authorPremium?: boolean | undefined;
                thumbnail?: string | undefined;
                edited?: boolean | undefined;
                authorFlairCssClass?: string | undefined;
                previousVisits?: number[] | undefined;
                authorFlairRichtext?: string[] | undefined;
                gildings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                contentCategories?: string | undefined;
                isSelf?: boolean | undefined;
                subredditType?: string | undefined;
                created?: number | undefined;
                linkFlairType?: string | undefined;
                wls?: string | undefined;
                removedByCategory?: string | undefined;
                bannedBy?: string | undefined;
                authorFlairType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                allowLiveComments?: boolean | undefined;
                selftextHtml?: string | undefined;
                likes?: boolean | undefined;
                suggestedSort?: string | undefined;
                bannedAtUtc?: number | undefined;
                viewCount?: number | undefined;
                archived?: boolean | undefined;
                noFollow?: boolean | undefined;
                spam?: boolean | undefined;
                isCrosspostable?: boolean | undefined;
                pinned?: boolean | undefined;
                over18?: boolean | undefined;
                allAwardings?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                awarders?: string[] | undefined;
                mediaOnly?: boolean | undefined;
                canGild?: boolean | undefined;
                removed?: boolean | undefined;
                spoiler?: boolean | undefined;
                locked?: boolean | undefined;
                authorFlairText?: string | undefined;
                treatmentTags?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                rteMode?: string | undefined;
                visited?: boolean | undefined;
                removedBy?: string | undefined;
                modNote?: string | undefined;
                distinguished?: string | undefined;
                subredditId?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                modReasonBy?: string | undefined;
                numReports?: number | undefined;
                removalReason?: string | undefined;
                linkFlairBackgroundColor?: string | undefined;
                id?: string | undefined;
                isRobotIndexable?: boolean | undefined;
                numDuplicates?: number | undefined;
                reportReasons?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                author?: string | undefined;
                discussionType?: string | undefined;
                numComments?: number | undefined;
                sendReplies?: boolean | undefined;
                media?: string | undefined;
                contestMode?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                approved?: boolean | undefined;
                authorFlairTextColor?: string | undefined;
                permalink?: string | undefined;
                whitelistStatus?: boolean | undefined;
                stickied?: boolean | undefined;
                url?: string | undefined;
                subredditSubscribers?: number | undefined;
                createdUtc?: number | undefined;
                numCrossposts?: number | undefined;
                modReports?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                isVideo?: boolean | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_19 in Exclude<keyof I, "$type" | keyof StickyResponse_StickyResponseData>]: never; }>(object: I): StickyResponse_StickyResponseData;
};
export declare const FullSubredditObject: {
    $type: "devvit.plugin.redditapi.subreddits.FullSubredditObject";
    encode(message: FullSubredditObject, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FullSubredditObject;
    fromJSON(object: any): FullSubredditObject;
    toJSON(message: FullSubredditObject): unknown;
    fromPartial<I extends {
        userFlairBackgroundColor?: string | undefined;
        submitTextHtml?: string | undefined;
        restrictPosting?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        wikiEnabled?: boolean | undefined;
        userIsMuted?: boolean | undefined;
        userCanFlairInSr?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        allowGalleries?: boolean | undefined;
        iconSize?: number[] | undefined;
        primaryColor?: string | undefined;
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        displayNamePrefixed?: string | undefined;
        accountsActive?: number | undefined;
        publicTraffic?: boolean | undefined;
        subscribers?: number | undefined;
        userFlairRichtext?: string[] | undefined;
        videostreamLinksCount?: number | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        emojisEnabled?: boolean | undefined;
        advertiserCategory?: string | undefined;
        publicDescription?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allowPredictions?: boolean | undefined;
        userHasFavorited?: boolean | undefined;
        userFlairTemplateId?: string | undefined;
        communityIcon?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        communityReviewed?: boolean | undefined;
        submitText?: string | undefined;
        descriptionHtml?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        commentContributionSettings?: {
            allowedMediaTypes?: string[] | undefined;
        } | undefined;
        allowTalks?: boolean | undefined;
        headerSize?: number[] | undefined;
        userFlairPosition?: string | undefined;
        allOriginalContent?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        canAssignUserFlair?: boolean | undefined;
        created?: number | undefined;
        wls?: number | undefined;
        showMediaPreview?: boolean | undefined;
        submissionType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
        allowedMediaInComments?: string[] | undefined;
        allowVideogifs?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        userFlairType?: string | undefined;
        allowPolls?: boolean | undefined;
        collapseDeletedComments?: boolean | undefined;
        emojisCustomSize?: number[] | undefined;
        publicDescriptionHtml?: string | undefined;
        allowVideos?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        notificationLevel?: string | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        canAssignLinkFlair?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        submitTextLabel?: string | undefined;
        linkFlairPosition?: string | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        suggestedCommentSort?: string | undefined;
        bannerImg?: string | undefined;
        userFlairText?: string | undefined;
        contentCategory?: string | undefined;
        bannerBackgroundColor?: string | undefined;
        showMedia?: boolean | undefined;
        id?: string | undefined;
        userIsModerator?: boolean | undefined;
        over18?: boolean | undefined;
        headerTitle?: string | undefined;
        description?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        submitLinkLabel?: string | undefined;
        userFlairTextColor?: string | undefined;
        restrictCommenting?: boolean | undefined;
        userFlairCssClass?: string | undefined;
        allowImages?: boolean | undefined;
        lang?: string | undefined;
        whitelistStatus?: string | undefined;
        url?: string | undefined;
        createdUtc?: number | undefined;
        bannerSize?: number[] | undefined;
        mobileBannerImage?: string | undefined;
        userIsContributor?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
    } & {
        userFlairBackgroundColor?: string | undefined;
        submitTextHtml?: string | undefined;
        restrictPosting?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        wikiEnabled?: boolean | undefined;
        userIsMuted?: boolean | undefined;
        userCanFlairInSr?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        allowGalleries?: boolean | undefined;
        iconSize?: (number[] & number[] & { [K in Exclude<keyof I["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
        primaryColor?: string | undefined;
        activeUserCount?: number | undefined;
        iconImg?: string | undefined;
        displayNamePrefixed?: string | undefined;
        accountsActive?: number | undefined;
        publicTraffic?: boolean | undefined;
        subscribers?: number | undefined;
        userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
        videostreamLinksCount?: number | undefined;
        name?: string | undefined;
        quarantine?: boolean | undefined;
        hideAds?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        emojisEnabled?: boolean | undefined;
        advertiserCategory?: string | undefined;
        publicDescription?: string | undefined;
        commentScoreHideMins?: number | undefined;
        allowPredictions?: boolean | undefined;
        userHasFavorited?: boolean | undefined;
        userFlairTemplateId?: string | undefined;
        communityIcon?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        originalContentTagEnabled?: boolean | undefined;
        communityReviewed?: boolean | undefined;
        submitText?: string | undefined;
        descriptionHtml?: string | undefined;
        spoilersEnabled?: boolean | undefined;
        commentContributionSettings?: ({
            allowedMediaTypes?: string[] | undefined;
        } & {
            allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
        allowTalks?: boolean | undefined;
        headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        userFlairPosition?: string | undefined;
        allOriginalContent?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        canAssignUserFlair?: boolean | undefined;
        created?: number | undefined;
        wls?: number | undefined;
        showMediaPreview?: boolean | undefined;
        submissionType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
        allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
        allowVideogifs?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        userFlairType?: string | undefined;
        allowPolls?: boolean | undefined;
        collapseDeletedComments?: boolean | undefined;
        emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
        publicDescriptionHtml?: string | undefined;
        allowVideos?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        notificationLevel?: string | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        canAssignLinkFlair?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        submitTextLabel?: string | undefined;
        linkFlairPosition?: string | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        suggestedCommentSort?: string | undefined;
        bannerImg?: string | undefined;
        userFlairText?: string | undefined;
        contentCategory?: string | undefined;
        bannerBackgroundColor?: string | undefined;
        showMedia?: boolean | undefined;
        id?: string | undefined;
        userIsModerator?: boolean | undefined;
        over18?: boolean | undefined;
        headerTitle?: string | undefined;
        description?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        submitLinkLabel?: string | undefined;
        userFlairTextColor?: string | undefined;
        restrictCommenting?: boolean | undefined;
        userFlairCssClass?: string | undefined;
        allowImages?: boolean | undefined;
        lang?: string | undefined;
        whitelistStatus?: string | undefined;
        url?: string | undefined;
        createdUtc?: number | undefined;
        bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        mobileBannerImage?: string | undefined;
        userIsContributor?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
    } & { [K_8 in Exclude<keyof I, "$type" | keyof FullSubredditObject>]: never; }>(object: I): FullSubredditObject;
};
export declare const SubredditsSearchResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse";
    encode(message: SubredditsSearchResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse;
    fromJSON(object: any): SubredditsSearchResponse;
    toJSON(message: SubredditsSearchResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            after?: string | undefined;
            before?: string | undefined;
            dist?: number | undefined;
            geoFilter?: string | undefined;
            children?: ({
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } & {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["children"][number]["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["children"][number]["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: ({
                        allowedMediaTypes?: string[] | undefined;
                    } & {
                        allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["children"][number]["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
                    } & { [K_3 in Exclude<keyof I["data"]["children"][number]["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["children"][number]["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["children"][number]["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["data"]["children"][number]["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["data"]["children"][number]["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } & { [K_8 in Exclude<keyof I["data"]["children"][number]["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
            } & { [K_9 in Exclude<keyof I["data"]["children"][number], "$type" | keyof SubredditsSearchResponse_WrappedSubredditObject_SubredditData>]: never; })[] & { [K_10 in Exclude<keyof I["data"]["children"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    userFlairBackgroundColor?: string | undefined;
                    submitTextHtml?: string | undefined;
                    restrictPosting?: boolean | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    wikiEnabled?: boolean | undefined;
                    userIsMuted?: boolean | undefined;
                    userCanFlairInSr?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    allowGalleries?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    activeUserCount?: number | undefined;
                    iconImg?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    accountsActive?: number | undefined;
                    publicTraffic?: boolean | undefined;
                    subscribers?: number | undefined;
                    userFlairRichtext?: string[] | undefined;
                    videostreamLinksCount?: number | undefined;
                    name?: string | undefined;
                    quarantine?: boolean | undefined;
                    hideAds?: boolean | undefined;
                    predictionLeaderboardEntryType?: string | undefined;
                    emojisEnabled?: boolean | undefined;
                    advertiserCategory?: string | undefined;
                    publicDescription?: string | undefined;
                    commentScoreHideMins?: number | undefined;
                    allowPredictions?: boolean | undefined;
                    userHasFavorited?: boolean | undefined;
                    userFlairTemplateId?: string | undefined;
                    communityIcon?: string | undefined;
                    bannerBackgroundImage?: string | undefined;
                    originalContentTagEnabled?: boolean | undefined;
                    communityReviewed?: boolean | undefined;
                    submitText?: string | undefined;
                    descriptionHtml?: string | undefined;
                    spoilersEnabled?: boolean | undefined;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[] | undefined;
                    } | undefined;
                    allowTalks?: boolean | undefined;
                    headerSize?: number[] | undefined;
                    userFlairPosition?: string | undefined;
                    allOriginalContent?: boolean | undefined;
                    hasMenuWidget?: boolean | undefined;
                    isEnrolledInNewModmail?: boolean | undefined;
                    keyColor?: string | undefined;
                    canAssignUserFlair?: boolean | undefined;
                    created?: number | undefined;
                    wls?: number | undefined;
                    showMediaPreview?: boolean | undefined;
                    submissionType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    allowVideogifs?: boolean | undefined;
                    shouldArchivePosts?: boolean | undefined;
                    userFlairType?: string | undefined;
                    allowPolls?: boolean | undefined;
                    collapseDeletedComments?: boolean | undefined;
                    emojisCustomSize?: number[] | undefined;
                    publicDescriptionHtml?: string | undefined;
                    allowVideos?: boolean | undefined;
                    isCrosspostableSubreddit?: boolean | undefined;
                    notificationLevel?: string | undefined;
                    shouldShowMediaInCommentsSetting?: boolean | undefined;
                    canAssignLinkFlair?: boolean | undefined;
                    accountsActiveIsFuzzed?: boolean | undefined;
                    allowPredictionContributors?: boolean | undefined;
                    submitTextLabel?: string | undefined;
                    linkFlairPosition?: string | undefined;
                    userSrFlairEnabled?: boolean | undefined;
                    userFlairEnabledInSr?: boolean | undefined;
                    allowChatPostCreation?: boolean | undefined;
                    allowDiscovery?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    userSrThemeEnabled?: boolean | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    suggestedCommentSort?: string | undefined;
                    bannerImg?: string | undefined;
                    userFlairText?: string | undefined;
                    contentCategory?: string | undefined;
                    bannerBackgroundColor?: string | undefined;
                    showMedia?: boolean | undefined;
                    id?: string | undefined;
                    userIsModerator?: boolean | undefined;
                    over18?: boolean | undefined;
                    headerTitle?: string | undefined;
                    description?: string | undefined;
                    isChatPostFeatureEnabled?: boolean | undefined;
                    submitLinkLabel?: string | undefined;
                    userFlairTextColor?: string | undefined;
                    restrictCommenting?: boolean | undefined;
                    userFlairCssClass?: string | undefined;
                    allowImages?: boolean | undefined;
                    lang?: string | undefined;
                    whitelistStatus?: string | undefined;
                    url?: string | undefined;
                    createdUtc?: number | undefined;
                    bannerSize?: number[] | undefined;
                    mobileBannerImage?: string | undefined;
                    userIsContributor?: boolean | undefined;
                    allowPredictionsTournament?: boolean | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_11 in Exclude<keyof I["data"], "$type" | keyof SubredditsSearchResponse_WrappedSubredditObject>]: never; }) | undefined;
    } & { [K_12 in Exclude<keyof I, "$type" | keyof SubredditsSearchResponse>]: never; }>(object: I): SubredditsSearchResponse;
};
export declare const SubredditsSearchResponse_WrappedSubredditObject: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse.WrappedSubredditObject";
    encode(message: SubredditsSearchResponse_WrappedSubredditObject, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse_WrappedSubredditObject;
    fromJSON(object: any): SubredditsSearchResponse_WrappedSubredditObject;
    toJSON(message: SubredditsSearchResponse_WrappedSubredditObject): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        geoFilter?: string | undefined;
        children?: {
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        after?: string | undefined;
        before?: string | undefined;
        dist?: number | undefined;
        geoFilter?: string | undefined;
        children?: ({
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } & {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: (number[] & number[] & { [K in Exclude<keyof I["children"][number]["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["children"][number]["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: ({
                    allowedMediaTypes?: string[] | undefined;
                } & {
                    allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["children"][number]["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
                } & { [K_3 in Exclude<keyof I["children"][number]["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["children"][number]["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["children"][number]["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["children"][number]["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["children"][number]["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } & { [K_8 in Exclude<keyof I["children"][number]["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
        } & { [K_9 in Exclude<keyof I["children"][number], "$type" | keyof SubredditsSearchResponse_WrappedSubredditObject_SubredditData>]: never; })[] & { [K_10 in Exclude<keyof I["children"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                userFlairBackgroundColor?: string | undefined;
                submitTextHtml?: string | undefined;
                restrictPosting?: boolean | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                wikiEnabled?: boolean | undefined;
                userIsMuted?: boolean | undefined;
                userCanFlairInSr?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                allowGalleries?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                activeUserCount?: number | undefined;
                iconImg?: string | undefined;
                displayNamePrefixed?: string | undefined;
                accountsActive?: number | undefined;
                publicTraffic?: boolean | undefined;
                subscribers?: number | undefined;
                userFlairRichtext?: string[] | undefined;
                videostreamLinksCount?: number | undefined;
                name?: string | undefined;
                quarantine?: boolean | undefined;
                hideAds?: boolean | undefined;
                predictionLeaderboardEntryType?: string | undefined;
                emojisEnabled?: boolean | undefined;
                advertiserCategory?: string | undefined;
                publicDescription?: string | undefined;
                commentScoreHideMins?: number | undefined;
                allowPredictions?: boolean | undefined;
                userHasFavorited?: boolean | undefined;
                userFlairTemplateId?: string | undefined;
                communityIcon?: string | undefined;
                bannerBackgroundImage?: string | undefined;
                originalContentTagEnabled?: boolean | undefined;
                communityReviewed?: boolean | undefined;
                submitText?: string | undefined;
                descriptionHtml?: string | undefined;
                spoilersEnabled?: boolean | undefined;
                commentContributionSettings?: {
                    allowedMediaTypes?: string[] | undefined;
                } | undefined;
                allowTalks?: boolean | undefined;
                headerSize?: number[] | undefined;
                userFlairPosition?: string | undefined;
                allOriginalContent?: boolean | undefined;
                hasMenuWidget?: boolean | undefined;
                isEnrolledInNewModmail?: boolean | undefined;
                keyColor?: string | undefined;
                canAssignUserFlair?: boolean | undefined;
                created?: number | undefined;
                wls?: number | undefined;
                showMediaPreview?: boolean | undefined;
                submissionType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
                allowedMediaInComments?: string[] | undefined;
                allowVideogifs?: boolean | undefined;
                shouldArchivePosts?: boolean | undefined;
                userFlairType?: string | undefined;
                allowPolls?: boolean | undefined;
                collapseDeletedComments?: boolean | undefined;
                emojisCustomSize?: number[] | undefined;
                publicDescriptionHtml?: string | undefined;
                allowVideos?: boolean | undefined;
                isCrosspostableSubreddit?: boolean | undefined;
                notificationLevel?: string | undefined;
                shouldShowMediaInCommentsSetting?: boolean | undefined;
                canAssignLinkFlair?: boolean | undefined;
                accountsActiveIsFuzzed?: boolean | undefined;
                allowPredictionContributors?: boolean | undefined;
                submitTextLabel?: string | undefined;
                linkFlairPosition?: string | undefined;
                userSrFlairEnabled?: boolean | undefined;
                userFlairEnabledInSr?: boolean | undefined;
                allowChatPostCreation?: boolean | undefined;
                allowDiscovery?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                userSrThemeEnabled?: boolean | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                suggestedCommentSort?: string | undefined;
                bannerImg?: string | undefined;
                userFlairText?: string | undefined;
                contentCategory?: string | undefined;
                bannerBackgroundColor?: string | undefined;
                showMedia?: boolean | undefined;
                id?: string | undefined;
                userIsModerator?: boolean | undefined;
                over18?: boolean | undefined;
                headerTitle?: string | undefined;
                description?: string | undefined;
                isChatPostFeatureEnabled?: boolean | undefined;
                submitLinkLabel?: string | undefined;
                userFlairTextColor?: string | undefined;
                restrictCommenting?: boolean | undefined;
                userFlairCssClass?: string | undefined;
                allowImages?: boolean | undefined;
                lang?: string | undefined;
                whitelistStatus?: string | undefined;
                url?: string | undefined;
                createdUtc?: number | undefined;
                bannerSize?: number[] | undefined;
                mobileBannerImage?: string | undefined;
                userIsContributor?: boolean | undefined;
                allowPredictionsTournament?: boolean | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof SubredditsSearchResponse_WrappedSubredditObject>]: never; }>(object: I): SubredditsSearchResponse_WrappedSubredditObject;
};
export declare const SubredditsSearchResponse_WrappedSubredditObject_SubredditData: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse.WrappedSubredditObject.SubredditData";
    encode(message: SubredditsSearchResponse_WrappedSubredditObject_SubredditData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse_WrappedSubredditObject_SubredditData;
    fromJSON(object: any): SubredditsSearchResponse_WrappedSubredditObject_SubredditData;
    toJSON(message: SubredditsSearchResponse_WrappedSubredditObject_SubredditData): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: string[] | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number[] | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: number[] | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number[] | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: string[] | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: {
                allowedMediaTypes?: string[] | undefined;
            } | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: number[] | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: string[] | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: number[] | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: number[] | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & {
            userFlairBackgroundColor?: string | undefined;
            submitTextHtml?: string | undefined;
            restrictPosting?: boolean | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            wikiEnabled?: boolean | undefined;
            userIsMuted?: boolean | undefined;
            userCanFlairInSr?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            allowGalleries?: boolean | undefined;
            iconSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
            primaryColor?: string | undefined;
            activeUserCount?: number | undefined;
            iconImg?: string | undefined;
            displayNamePrefixed?: string | undefined;
            accountsActive?: number | undefined;
            publicTraffic?: boolean | undefined;
            subscribers?: number | undefined;
            userFlairRichtext?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["userFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
            videostreamLinksCount?: number | undefined;
            name?: string | undefined;
            quarantine?: boolean | undefined;
            hideAds?: boolean | undefined;
            predictionLeaderboardEntryType?: string | undefined;
            emojisEnabled?: boolean | undefined;
            advertiserCategory?: string | undefined;
            publicDescription?: string | undefined;
            commentScoreHideMins?: number | undefined;
            allowPredictions?: boolean | undefined;
            userHasFavorited?: boolean | undefined;
            userFlairTemplateId?: string | undefined;
            communityIcon?: string | undefined;
            bannerBackgroundImage?: string | undefined;
            originalContentTagEnabled?: boolean | undefined;
            communityReviewed?: boolean | undefined;
            submitText?: string | undefined;
            descriptionHtml?: string | undefined;
            spoilersEnabled?: boolean | undefined;
            commentContributionSettings?: ({
                allowedMediaTypes?: string[] | undefined;
            } & {
                allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
            } & { [K_3 in Exclude<keyof I["data"]["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
            allowTalks?: boolean | undefined;
            headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            userFlairPosition?: string | undefined;
            allOriginalContent?: boolean | undefined;
            hasMenuWidget?: boolean | undefined;
            isEnrolledInNewModmail?: boolean | undefined;
            keyColor?: string | undefined;
            canAssignUserFlair?: boolean | undefined;
            created?: number | undefined;
            wls?: number | undefined;
            showMediaPreview?: boolean | undefined;
            submissionType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
            allowedMediaInComments?: (string[] & string[] & { [K_5 in Exclude<keyof I["data"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
            allowVideogifs?: boolean | undefined;
            shouldArchivePosts?: boolean | undefined;
            userFlairType?: string | undefined;
            allowPolls?: boolean | undefined;
            collapseDeletedComments?: boolean | undefined;
            emojisCustomSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["data"]["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
            publicDescriptionHtml?: string | undefined;
            allowVideos?: boolean | undefined;
            isCrosspostableSubreddit?: boolean | undefined;
            notificationLevel?: string | undefined;
            shouldShowMediaInCommentsSetting?: boolean | undefined;
            canAssignLinkFlair?: boolean | undefined;
            accountsActiveIsFuzzed?: boolean | undefined;
            allowPredictionContributors?: boolean | undefined;
            submitTextLabel?: string | undefined;
            linkFlairPosition?: string | undefined;
            userSrFlairEnabled?: boolean | undefined;
            userFlairEnabledInSr?: boolean | undefined;
            allowChatPostCreation?: boolean | undefined;
            allowDiscovery?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            userSrThemeEnabled?: boolean | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            suggestedCommentSort?: string | undefined;
            bannerImg?: string | undefined;
            userFlairText?: string | undefined;
            contentCategory?: string | undefined;
            bannerBackgroundColor?: string | undefined;
            showMedia?: boolean | undefined;
            id?: string | undefined;
            userIsModerator?: boolean | undefined;
            over18?: boolean | undefined;
            headerTitle?: string | undefined;
            description?: string | undefined;
            isChatPostFeatureEnabled?: boolean | undefined;
            submitLinkLabel?: string | undefined;
            userFlairTextColor?: string | undefined;
            restrictCommenting?: boolean | undefined;
            userFlairCssClass?: string | undefined;
            allowImages?: boolean | undefined;
            lang?: string | undefined;
            whitelistStatus?: string | undefined;
            url?: string | undefined;
            createdUtc?: number | undefined;
            bannerSize?: (number[] & number[] & { [K_7 in Exclude<keyof I["data"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            mobileBannerImage?: string | undefined;
            userIsContributor?: boolean | undefined;
            allowPredictionsTournament?: boolean | undefined;
        } & { [K_8 in Exclude<keyof I["data"], "$type" | keyof FullSubredditObject>]: never; }) | undefined;
    } & { [K_9 in Exclude<keyof I, "$type" | keyof SubredditsSearchResponse_WrappedSubredditObject_SubredditData>]: never; }>(object: I): SubredditsSearchResponse_WrappedSubredditObject_SubredditData;
};
export declare const UserSearchResponse: {
    $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse";
    encode(message: UserSearchResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse;
    fromJSON(object: any): UserSearchResponse;
    toJSON(message: UserSearchResponse): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            after?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            before?: string | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            after?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            before?: string | undefined;
        } & {
            after?: string | undefined;
            dist?: number | undefined;
            modhash?: string | undefined;
            geoFilter?: string | undefined;
            children?: ({
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } & {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["children"][number]["data"]["snoovatarSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: ({
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } & {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"]["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
                        over18?: boolean | undefined;
                        iconSize?: (number[] & number[] & { [K_3 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: (number[] & number[] & { [K_5 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } & { [K_6 in Exclude<keyof I["data"]["children"][number]["data"]["subreddit"], "$type" | keyof UserSearchResponse_AccountData_Subreddit>]: never; }) | undefined;
                } & { [K_7 in Exclude<keyof I["data"]["children"][number]["data"], "$type" | keyof UserSearchResponse_AccountData>]: never; }) | undefined;
            } & { [K_8 in Exclude<keyof I["data"]["children"][number], "$type" | keyof UserSearchResponse_Account>]: never; })[] & { [K_9 in Exclude<keyof I["data"]["children"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    isEmployee?: boolean | undefined;
                    isFriend?: boolean | undefined;
                    snoovatarSize?: number[] | undefined;
                    id?: string | undefined;
                    verified?: boolean | undefined;
                    isGold?: boolean | undefined;
                    isMod?: boolean | undefined;
                    hasVerifiedEmail?: boolean | undefined;
                    iconImg?: string | undefined;
                    hideFromRobots?: boolean | undefined;
                    linkKarma?: number | undefined;
                    acceptChats?: boolean | undefined;
                    isBlocked?: boolean | undefined;
                    prefShowSnoovatar?: boolean | undefined;
                    name?: string | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    snoovatarImg?: string | undefined;
                    commentKarma?: number | undefined;
                    acceptFollowers?: boolean | undefined;
                    hasSubscribed?: boolean | undefined;
                    acceptPms?: boolean | undefined;
                    isSuspended?: boolean | undefined;
                    subreddit?: {
                        defaultSet?: boolean | undefined;
                        userIsContributor?: boolean | undefined;
                        bannerImg?: string | undefined;
                        allowedMediaInComments?: string[] | undefined;
                        userIsBanned?: boolean | undefined;
                        freeFormReports?: boolean | undefined;
                        communityIcon?: string | undefined;
                        showMedia?: boolean | undefined;
                        iconColor?: string | undefined;
                        userIsMuted?: boolean | undefined;
                        displayName?: string | undefined;
                        headerImg?: string | undefined;
                        title?: string | undefined;
                        previousNames?: string[] | undefined;
                        over18?: boolean | undefined;
                        iconSize?: number[] | undefined;
                        primaryColor?: string | undefined;
                        iconImg?: string | undefined;
                        description?: string | undefined;
                        submitLinkLabel?: string | undefined;
                        headerSize?: number[] | undefined;
                        restrictPosting?: boolean | undefined;
                        restrictCommenting?: boolean | undefined;
                        subscribers?: number | undefined;
                        submitTextLabel?: string | undefined;
                        isDefaultIcon?: boolean | undefined;
                        linkFlairPosition?: string | undefined;
                        displayNamePrefixed?: string | undefined;
                        keyColor?: string | undefined;
                        name?: string | undefined;
                        isDefaultBanner?: boolean | undefined;
                        url?: string | undefined;
                        quarantine?: boolean | undefined;
                        bannerSize?: number[] | undefined;
                        userIsModerator?: boolean | undefined;
                        acceptFollowers?: boolean | undefined;
                        publicDescription?: string | undefined;
                        linkFlairEnabled?: boolean | undefined;
                        disableContributorRequests?: boolean | undefined;
                        subredditType?: string | undefined;
                        userIsSubscriber?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
            before?: string | undefined;
        } & { [K_10 in Exclude<keyof I["data"], "$type" | keyof UserSearchResponse_AccData>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof UserSearchResponse>]: never; }>(object: I): UserSearchResponse;
};
export declare const UserSearchResponse_AccData: {
    $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse.AccData";
    encode(message: UserSearchResponse_AccData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse_AccData;
    fromJSON(object: any): UserSearchResponse_AccData;
    toJSON(message: UserSearchResponse_AccData): unknown;
    fromPartial<I extends {
        after?: string | undefined;
        dist?: number | undefined;
        modhash?: string | undefined;
        geoFilter?: string | undefined;
        children?: {
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number[] | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } | undefined;
            } | undefined;
        }[] | undefined;
        before?: string | undefined;
    } & {
        after?: string | undefined;
        dist?: number | undefined;
        modhash?: string | undefined;
        geoFilter?: string | undefined;
        children?: ({
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number[] | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number[] | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number[] | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } | undefined;
            } & {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: (number[] & number[] & { [K in Exclude<keyof I["children"][number]["data"]["snoovatarSize"], "$type" | keyof number[]>]: never; }) | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: ({
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } & {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: (string[] & string[] & { [K_1 in Exclude<keyof I["children"][number]["data"]["subreddit"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: (string[] & string[] & { [K_2 in Exclude<keyof I["children"][number]["data"]["subreddit"]["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
                    over18?: boolean | undefined;
                    iconSize?: (number[] & number[] & { [K_3 in Exclude<keyof I["children"][number]["data"]["subreddit"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["children"][number]["data"]["subreddit"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: (number[] & number[] & { [K_5 in Exclude<keyof I["children"][number]["data"]["subreddit"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } & { [K_6 in Exclude<keyof I["children"][number]["data"]["subreddit"], "$type" | keyof UserSearchResponse_AccountData_Subreddit>]: never; }) | undefined;
            } & { [K_7 in Exclude<keyof I["children"][number]["data"], "$type" | keyof UserSearchResponse_AccountData>]: never; }) | undefined;
        } & { [K_8 in Exclude<keyof I["children"][number], "$type" | keyof UserSearchResponse_Account>]: never; })[] & { [K_9 in Exclude<keyof I["children"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                isEmployee?: boolean | undefined;
                isFriend?: boolean | undefined;
                snoovatarSize?: number[] | undefined;
                id?: string | undefined;
                verified?: boolean | undefined;
                isGold?: boolean | undefined;
                isMod?: boolean | undefined;
                hasVerifiedEmail?: boolean | undefined;
                iconImg?: string | undefined;
                hideFromRobots?: boolean | undefined;
                linkKarma?: number | undefined;
                acceptChats?: boolean | undefined;
                isBlocked?: boolean | undefined;
                prefShowSnoovatar?: boolean | undefined;
                name?: string | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                snoovatarImg?: string | undefined;
                commentKarma?: number | undefined;
                acceptFollowers?: boolean | undefined;
                hasSubscribed?: boolean | undefined;
                acceptPms?: boolean | undefined;
                isSuspended?: boolean | undefined;
                subreddit?: {
                    defaultSet?: boolean | undefined;
                    userIsContributor?: boolean | undefined;
                    bannerImg?: string | undefined;
                    allowedMediaInComments?: string[] | undefined;
                    userIsBanned?: boolean | undefined;
                    freeFormReports?: boolean | undefined;
                    communityIcon?: string | undefined;
                    showMedia?: boolean | undefined;
                    iconColor?: string | undefined;
                    userIsMuted?: boolean | undefined;
                    displayName?: string | undefined;
                    headerImg?: string | undefined;
                    title?: string | undefined;
                    previousNames?: string[] | undefined;
                    over18?: boolean | undefined;
                    iconSize?: number[] | undefined;
                    primaryColor?: string | undefined;
                    iconImg?: string | undefined;
                    description?: string | undefined;
                    submitLinkLabel?: string | undefined;
                    headerSize?: number[] | undefined;
                    restrictPosting?: boolean | undefined;
                    restrictCommenting?: boolean | undefined;
                    subscribers?: number | undefined;
                    submitTextLabel?: string | undefined;
                    isDefaultIcon?: boolean | undefined;
                    linkFlairPosition?: string | undefined;
                    displayNamePrefixed?: string | undefined;
                    keyColor?: string | undefined;
                    name?: string | undefined;
                    isDefaultBanner?: boolean | undefined;
                    url?: string | undefined;
                    quarantine?: boolean | undefined;
                    bannerSize?: number[] | undefined;
                    userIsModerator?: boolean | undefined;
                    acceptFollowers?: boolean | undefined;
                    publicDescription?: string | undefined;
                    linkFlairEnabled?: boolean | undefined;
                    disableContributorRequests?: boolean | undefined;
                    subredditType?: string | undefined;
                    userIsSubscriber?: boolean | undefined;
                } | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
        before?: string | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof UserSearchResponse_AccData>]: never; }>(object: I): UserSearchResponse_AccData;
};
export declare const UserSearchResponse_Account: {
    $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse.Account";
    encode(message: UserSearchResponse_Account, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse_Account;
    fromJSON(object: any): UserSearchResponse_Account;
    toJSON(message: UserSearchResponse_Account): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: number[] | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
            isSuspended?: boolean | undefined;
            subreddit?: {
                defaultSet?: boolean | undefined;
                userIsContributor?: boolean | undefined;
                bannerImg?: string | undefined;
                allowedMediaInComments?: string[] | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                communityIcon?: string | undefined;
                showMedia?: boolean | undefined;
                iconColor?: string | undefined;
                userIsMuted?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                previousNames?: string[] | undefined;
                over18?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                iconImg?: string | undefined;
                description?: string | undefined;
                submitLinkLabel?: string | undefined;
                headerSize?: number[] | undefined;
                restrictPosting?: boolean | undefined;
                restrictCommenting?: boolean | undefined;
                subscribers?: number | undefined;
                submitTextLabel?: string | undefined;
                isDefaultIcon?: boolean | undefined;
                linkFlairPosition?: string | undefined;
                displayNamePrefixed?: string | undefined;
                keyColor?: string | undefined;
                name?: string | undefined;
                isDefaultBanner?: boolean | undefined;
                url?: string | undefined;
                quarantine?: boolean | undefined;
                bannerSize?: number[] | undefined;
                userIsModerator?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                publicDescription?: string | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
            } | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: number[] | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
            isSuspended?: boolean | undefined;
            subreddit?: {
                defaultSet?: boolean | undefined;
                userIsContributor?: boolean | undefined;
                bannerImg?: string | undefined;
                allowedMediaInComments?: string[] | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                communityIcon?: string | undefined;
                showMedia?: boolean | undefined;
                iconColor?: string | undefined;
                userIsMuted?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                previousNames?: string[] | undefined;
                over18?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                iconImg?: string | undefined;
                description?: string | undefined;
                submitLinkLabel?: string | undefined;
                headerSize?: number[] | undefined;
                restrictPosting?: boolean | undefined;
                restrictCommenting?: boolean | undefined;
                subscribers?: number | undefined;
                submitTextLabel?: string | undefined;
                isDefaultIcon?: boolean | undefined;
                linkFlairPosition?: string | undefined;
                displayNamePrefixed?: string | undefined;
                keyColor?: string | undefined;
                name?: string | undefined;
                isDefaultBanner?: boolean | undefined;
                url?: string | undefined;
                quarantine?: boolean | undefined;
                bannerSize?: number[] | undefined;
                userIsModerator?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                publicDescription?: string | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
            } | undefined;
        } & {
            isEmployee?: boolean | undefined;
            isFriend?: boolean | undefined;
            snoovatarSize?: (number[] & number[] & { [K in Exclude<keyof I["data"]["snoovatarSize"], "$type" | keyof number[]>]: never; }) | undefined;
            id?: string | undefined;
            verified?: boolean | undefined;
            isGold?: boolean | undefined;
            isMod?: boolean | undefined;
            hasVerifiedEmail?: boolean | undefined;
            iconImg?: string | undefined;
            hideFromRobots?: boolean | undefined;
            linkKarma?: number | undefined;
            acceptChats?: boolean | undefined;
            isBlocked?: boolean | undefined;
            prefShowSnoovatar?: boolean | undefined;
            name?: string | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            snoovatarImg?: string | undefined;
            commentKarma?: number | undefined;
            acceptFollowers?: boolean | undefined;
            hasSubscribed?: boolean | undefined;
            acceptPms?: boolean | undefined;
            isSuspended?: boolean | undefined;
            subreddit?: ({
                defaultSet?: boolean | undefined;
                userIsContributor?: boolean | undefined;
                bannerImg?: string | undefined;
                allowedMediaInComments?: string[] | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                communityIcon?: string | undefined;
                showMedia?: boolean | undefined;
                iconColor?: string | undefined;
                userIsMuted?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                previousNames?: string[] | undefined;
                over18?: boolean | undefined;
                iconSize?: number[] | undefined;
                primaryColor?: string | undefined;
                iconImg?: string | undefined;
                description?: string | undefined;
                submitLinkLabel?: string | undefined;
                headerSize?: number[] | undefined;
                restrictPosting?: boolean | undefined;
                restrictCommenting?: boolean | undefined;
                subscribers?: number | undefined;
                submitTextLabel?: string | undefined;
                isDefaultIcon?: boolean | undefined;
                linkFlairPosition?: string | undefined;
                displayNamePrefixed?: string | undefined;
                keyColor?: string | undefined;
                name?: string | undefined;
                isDefaultBanner?: boolean | undefined;
                url?: string | undefined;
                quarantine?: boolean | undefined;
                bannerSize?: number[] | undefined;
                userIsModerator?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                publicDescription?: string | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
            } & {
                defaultSet?: boolean | undefined;
                userIsContributor?: boolean | undefined;
                bannerImg?: string | undefined;
                allowedMediaInComments?: (string[] & string[] & { [K_1 in Exclude<keyof I["data"]["subreddit"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
                userIsBanned?: boolean | undefined;
                freeFormReports?: boolean | undefined;
                communityIcon?: string | undefined;
                showMedia?: boolean | undefined;
                iconColor?: string | undefined;
                userIsMuted?: boolean | undefined;
                displayName?: string | undefined;
                headerImg?: string | undefined;
                title?: string | undefined;
                previousNames?: (string[] & string[] & { [K_2 in Exclude<keyof I["data"]["subreddit"]["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
                over18?: boolean | undefined;
                iconSize?: (number[] & number[] & { [K_3 in Exclude<keyof I["data"]["subreddit"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
                primaryColor?: string | undefined;
                iconImg?: string | undefined;
                description?: string | undefined;
                submitLinkLabel?: string | undefined;
                headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["data"]["subreddit"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                restrictPosting?: boolean | undefined;
                restrictCommenting?: boolean | undefined;
                subscribers?: number | undefined;
                submitTextLabel?: string | undefined;
                isDefaultIcon?: boolean | undefined;
                linkFlairPosition?: string | undefined;
                displayNamePrefixed?: string | undefined;
                keyColor?: string | undefined;
                name?: string | undefined;
                isDefaultBanner?: boolean | undefined;
                url?: string | undefined;
                quarantine?: boolean | undefined;
                bannerSize?: (number[] & number[] & { [K_5 in Exclude<keyof I["data"]["subreddit"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
                userIsModerator?: boolean | undefined;
                acceptFollowers?: boolean | undefined;
                publicDescription?: string | undefined;
                linkFlairEnabled?: boolean | undefined;
                disableContributorRequests?: boolean | undefined;
                subredditType?: string | undefined;
                userIsSubscriber?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["data"]["subreddit"], "$type" | keyof UserSearchResponse_AccountData_Subreddit>]: never; }) | undefined;
        } & { [K_7 in Exclude<keyof I["data"], "$type" | keyof UserSearchResponse_AccountData>]: never; }) | undefined;
    } & { [K_8 in Exclude<keyof I, "$type" | keyof UserSearchResponse_Account>]: never; }>(object: I): UserSearchResponse_Account;
};
export declare const UserSearchResponse_AccountData: {
    $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse.AccountData";
    encode(message: UserSearchResponse_AccountData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse_AccountData;
    fromJSON(object: any): UserSearchResponse_AccountData;
    toJSON(message: UserSearchResponse_AccountData): unknown;
    fromPartial<I extends {
        isEmployee?: boolean | undefined;
        isFriend?: boolean | undefined;
        snoovatarSize?: number[] | undefined;
        id?: string | undefined;
        verified?: boolean | undefined;
        isGold?: boolean | undefined;
        isMod?: boolean | undefined;
        hasVerifiedEmail?: boolean | undefined;
        iconImg?: string | undefined;
        hideFromRobots?: boolean | undefined;
        linkKarma?: number | undefined;
        acceptChats?: boolean | undefined;
        isBlocked?: boolean | undefined;
        prefShowSnoovatar?: boolean | undefined;
        name?: string | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        snoovatarImg?: string | undefined;
        commentKarma?: number | undefined;
        acceptFollowers?: boolean | undefined;
        hasSubscribed?: boolean | undefined;
        acceptPms?: boolean | undefined;
        isSuspended?: boolean | undefined;
        subreddit?: {
            defaultSet?: boolean | undefined;
            userIsContributor?: boolean | undefined;
            bannerImg?: string | undefined;
            allowedMediaInComments?: string[] | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            communityIcon?: string | undefined;
            showMedia?: boolean | undefined;
            iconColor?: string | undefined;
            userIsMuted?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            previousNames?: string[] | undefined;
            over18?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            iconImg?: string | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            headerSize?: number[] | undefined;
            restrictPosting?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            subscribers?: number | undefined;
            submitTextLabel?: string | undefined;
            isDefaultIcon?: boolean | undefined;
            linkFlairPosition?: string | undefined;
            displayNamePrefixed?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            isDefaultBanner?: boolean | undefined;
            url?: string | undefined;
            quarantine?: boolean | undefined;
            bannerSize?: number[] | undefined;
            userIsModerator?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            publicDescription?: string | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
        } | undefined;
    } & {
        isEmployee?: boolean | undefined;
        isFriend?: boolean | undefined;
        snoovatarSize?: (number[] & number[] & { [K in Exclude<keyof I["snoovatarSize"], "$type" | keyof number[]>]: never; }) | undefined;
        id?: string | undefined;
        verified?: boolean | undefined;
        isGold?: boolean | undefined;
        isMod?: boolean | undefined;
        hasVerifiedEmail?: boolean | undefined;
        iconImg?: string | undefined;
        hideFromRobots?: boolean | undefined;
        linkKarma?: number | undefined;
        acceptChats?: boolean | undefined;
        isBlocked?: boolean | undefined;
        prefShowSnoovatar?: boolean | undefined;
        name?: string | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        snoovatarImg?: string | undefined;
        commentKarma?: number | undefined;
        acceptFollowers?: boolean | undefined;
        hasSubscribed?: boolean | undefined;
        acceptPms?: boolean | undefined;
        isSuspended?: boolean | undefined;
        subreddit?: ({
            defaultSet?: boolean | undefined;
            userIsContributor?: boolean | undefined;
            bannerImg?: string | undefined;
            allowedMediaInComments?: string[] | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            communityIcon?: string | undefined;
            showMedia?: boolean | undefined;
            iconColor?: string | undefined;
            userIsMuted?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            previousNames?: string[] | undefined;
            over18?: boolean | undefined;
            iconSize?: number[] | undefined;
            primaryColor?: string | undefined;
            iconImg?: string | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            headerSize?: number[] | undefined;
            restrictPosting?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            subscribers?: number | undefined;
            submitTextLabel?: string | undefined;
            isDefaultIcon?: boolean | undefined;
            linkFlairPosition?: string | undefined;
            displayNamePrefixed?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            isDefaultBanner?: boolean | undefined;
            url?: string | undefined;
            quarantine?: boolean | undefined;
            bannerSize?: number[] | undefined;
            userIsModerator?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            publicDescription?: string | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
        } & {
            defaultSet?: boolean | undefined;
            userIsContributor?: boolean | undefined;
            bannerImg?: string | undefined;
            allowedMediaInComments?: (string[] & string[] & { [K_1 in Exclude<keyof I["subreddit"]["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
            userIsBanned?: boolean | undefined;
            freeFormReports?: boolean | undefined;
            communityIcon?: string | undefined;
            showMedia?: boolean | undefined;
            iconColor?: string | undefined;
            userIsMuted?: boolean | undefined;
            displayName?: string | undefined;
            headerImg?: string | undefined;
            title?: string | undefined;
            previousNames?: (string[] & string[] & { [K_2 in Exclude<keyof I["subreddit"]["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
            over18?: boolean | undefined;
            iconSize?: (number[] & number[] & { [K_3 in Exclude<keyof I["subreddit"]["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
            primaryColor?: string | undefined;
            iconImg?: string | undefined;
            description?: string | undefined;
            submitLinkLabel?: string | undefined;
            headerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["subreddit"]["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            restrictPosting?: boolean | undefined;
            restrictCommenting?: boolean | undefined;
            subscribers?: number | undefined;
            submitTextLabel?: string | undefined;
            isDefaultIcon?: boolean | undefined;
            linkFlairPosition?: string | undefined;
            displayNamePrefixed?: string | undefined;
            keyColor?: string | undefined;
            name?: string | undefined;
            isDefaultBanner?: boolean | undefined;
            url?: string | undefined;
            quarantine?: boolean | undefined;
            bannerSize?: (number[] & number[] & { [K_5 in Exclude<keyof I["subreddit"]["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
            userIsModerator?: boolean | undefined;
            acceptFollowers?: boolean | undefined;
            publicDescription?: string | undefined;
            linkFlairEnabled?: boolean | undefined;
            disableContributorRequests?: boolean | undefined;
            subredditType?: string | undefined;
            userIsSubscriber?: boolean | undefined;
        } & { [K_6 in Exclude<keyof I["subreddit"], "$type" | keyof UserSearchResponse_AccountData_Subreddit>]: never; }) | undefined;
    } & { [K_7 in Exclude<keyof I, "$type" | keyof UserSearchResponse_AccountData>]: never; }>(object: I): UserSearchResponse_AccountData;
};
export declare const UserSearchResponse_AccountData_Subreddit: {
    $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse.AccountData.Subreddit";
    encode(message: UserSearchResponse_AccountData_Subreddit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse_AccountData_Subreddit;
    fromJSON(object: any): UserSearchResponse_AccountData_Subreddit;
    toJSON(message: UserSearchResponse_AccountData_Subreddit): unknown;
    fromPartial<I extends {
        defaultSet?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        bannerImg?: string | undefined;
        allowedMediaInComments?: string[] | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        communityIcon?: string | undefined;
        showMedia?: boolean | undefined;
        iconColor?: string | undefined;
        userIsMuted?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        previousNames?: string[] | undefined;
        over18?: boolean | undefined;
        iconSize?: number[] | undefined;
        primaryColor?: string | undefined;
        iconImg?: string | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        headerSize?: number[] | undefined;
        restrictPosting?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        subscribers?: number | undefined;
        submitTextLabel?: string | undefined;
        isDefaultIcon?: boolean | undefined;
        linkFlairPosition?: string | undefined;
        displayNamePrefixed?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        isDefaultBanner?: boolean | undefined;
        url?: string | undefined;
        quarantine?: boolean | undefined;
        bannerSize?: number[] | undefined;
        userIsModerator?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        publicDescription?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
    } & {
        defaultSet?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        bannerImg?: string | undefined;
        allowedMediaInComments?: (string[] & string[] & { [K in Exclude<keyof I["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
        userIsBanned?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        communityIcon?: string | undefined;
        showMedia?: boolean | undefined;
        iconColor?: string | undefined;
        userIsMuted?: boolean | undefined;
        displayName?: string | undefined;
        headerImg?: string | undefined;
        title?: string | undefined;
        previousNames?: (string[] & string[] & { [K_1 in Exclude<keyof I["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
        over18?: boolean | undefined;
        iconSize?: (number[] & number[] & { [K_2 in Exclude<keyof I["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
        primaryColor?: string | undefined;
        iconImg?: string | undefined;
        description?: string | undefined;
        submitLinkLabel?: string | undefined;
        headerSize?: (number[] & number[] & { [K_3 in Exclude<keyof I["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        restrictPosting?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        subscribers?: number | undefined;
        submitTextLabel?: string | undefined;
        isDefaultIcon?: boolean | undefined;
        linkFlairPosition?: string | undefined;
        displayNamePrefixed?: string | undefined;
        keyColor?: string | undefined;
        name?: string | undefined;
        isDefaultBanner?: boolean | undefined;
        url?: string | undefined;
        quarantine?: boolean | undefined;
        bannerSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        userIsModerator?: boolean | undefined;
        acceptFollowers?: boolean | undefined;
        publicDescription?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        disableContributorRequests?: boolean | undefined;
        subredditType?: string | undefined;
        userIsSubscriber?: boolean | undefined;
    } & { [K_5 in Exclude<keyof I, "$type" | keyof UserSearchResponse_AccountData_Subreddit>]: never; }>(object: I): UserSearchResponse_AccountData_Subreddit;
};
export declare const SubredditAddRemovalReasonRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAddRemovalReasonRequest";
    encode(message: SubredditAddRemovalReasonRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAddRemovalReasonRequest;
    fromJSON(object: any): SubredditAddRemovalReasonRequest;
    toJSON(message: SubredditAddRemovalReasonRequest): unknown;
    fromPartial<I extends {
        subreddit?: string | undefined;
        message?: string | undefined;
        title?: string | undefined;
    } & {
        subreddit?: string | undefined;
        message?: string | undefined;
        title?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditAddRemovalReasonRequest>]: never; }>(object: I): SubredditAddRemovalReasonRequest;
};
export declare const SubredditAddRemovalReasonResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditAddRemovalReasonResponse";
    encode(message: SubredditAddRemovalReasonResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAddRemovalReasonResponse;
    fromJSON(object: any): SubredditAddRemovalReasonResponse;
    toJSON(message: SubredditAddRemovalReasonResponse): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "id">]: never; }>(object: I): SubredditAddRemovalReasonResponse;
};
export declare const SubredditGetRemovalReasonsRequest: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsRequest";
    encode(message: SubredditGetRemovalReasonsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsRequest;
    fromJSON(object: any): SubredditGetRemovalReasonsRequest;
    toJSON(message: SubredditGetRemovalReasonsRequest): unknown;
    fromPartial<I extends {
        subreddit?: string | undefined;
    } & {
        subreddit?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "subreddit">]: never; }>(object: I): SubredditGetRemovalReasonsRequest;
};
export declare const SubredditGetRemovalReasonsResponse: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsResponse";
    encode(message: SubredditGetRemovalReasonsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsResponse;
    fromJSON(object: any): SubredditGetRemovalReasonsResponse;
    toJSON(message: SubredditGetRemovalReasonsResponse): unknown;
    fromPartial<I extends {
        data?: {
            [x: string]: {
                id?: string | undefined;
                message?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | undefined;
        order?: string[] | undefined;
    } & {
        data?: ({
            [x: string]: {
                id?: string | undefined;
                message?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } & {
            [x: string]: ({
                id?: string | undefined;
                message?: string | undefined;
                title?: string | undefined;
            } & {
                id?: string | undefined;
                message?: string | undefined;
                title?: string | undefined;
            } & { [K in Exclude<keyof I["data"][string], "$type" | keyof SubredditGetRemovalReasonsResponse_SubredditRemovalReason>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["data"], string | number>]: never; }) | undefined;
        order?: (string[] & string[] & { [K_2 in Exclude<keyof I["order"], "$type" | keyof string[]>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof SubredditGetRemovalReasonsResponse>]: never; }>(object: I): SubredditGetRemovalReasonsResponse;
};
export declare const SubredditGetRemovalReasonsResponse_SubredditRemovalReason: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsResponse.SubredditRemovalReason";
    encode(message: SubredditGetRemovalReasonsResponse_SubredditRemovalReason, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
    fromJSON(object: any): SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
    toJSON(message: SubredditGetRemovalReasonsResponse_SubredditRemovalReason): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        message?: string | undefined;
        title?: string | undefined;
    } & {
        id?: string | undefined;
        message?: string | undefined;
        title?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubredditGetRemovalReasonsResponse_SubredditRemovalReason>]: never; }>(object: I): SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
};
export declare const SubredditGetRemovalReasonsResponse_DataEntry: {
    $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsResponse.DataEntry";
    encode(message: SubredditGetRemovalReasonsResponse_DataEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsResponse_DataEntry;
    fromJSON(object: any): SubredditGetRemovalReasonsResponse_DataEntry;
    toJSON(message: SubredditGetRemovalReasonsResponse_DataEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: {
            id?: string | undefined;
            message?: string | undefined;
            title?: string | undefined;
        } | undefined;
    } & {
        key?: string | undefined;
        value?: ({
            id?: string | undefined;
            message?: string | undefined;
            title?: string | undefined;
        } & {
            id?: string | undefined;
            message?: string | undefined;
            title?: string | undefined;
        } & { [K in Exclude<keyof I["value"], "$type" | keyof SubredditGetRemovalReasonsResponse_SubredditRemovalReason>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof SubredditGetRemovalReasonsResponse_DataEntry>]: never; }>(object: I): SubredditGetRemovalReasonsResponse_DataEntry;
};
//# sourceMappingURL=subreddits_msg.d.ts.map