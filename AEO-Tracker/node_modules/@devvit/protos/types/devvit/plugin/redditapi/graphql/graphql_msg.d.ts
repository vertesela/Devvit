/**
 * #graphql_msg.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
export interface QueryRequest {
    /** gql query string */
    query: string;
    /** put the variables here */
    variables?: {
        [key: string]: any;
    };
}
export interface PersistedQueryRequest {
    /** id of a persisted operation */
    id: string;
    /** put the variables here */
    variables?: {
        [key: string]: any;
    };
    /** the name of the persisted operation */
    operationName: string;
}
export interface QueryResponse {
    data?: {
        [key: string]: any;
    };
}
export declare const QueryRequest: {
    $type: "devvit.plugin.redditapi.graphql.QueryRequest";
    encode(message: QueryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryRequest;
    fromJSON(object: any): QueryRequest;
    toJSON(message: QueryRequest): unknown;
    fromPartial<I extends {
        query?: string | undefined;
        variables?: {
            [x: string]: any;
        } | undefined;
    } & {
        query?: string | undefined;
        variables?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["variables"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof QueryRequest>]: never; }>(object: I): QueryRequest;
};
export declare const PersistedQueryRequest: {
    $type: "devvit.plugin.redditapi.graphql.PersistedQueryRequest";
    encode(message: PersistedQueryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PersistedQueryRequest;
    fromJSON(object: any): PersistedQueryRequest;
    toJSON(message: PersistedQueryRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        variables?: {
            [x: string]: any;
        } | undefined;
        operationName?: string | undefined;
    } & {
        id?: string | undefined;
        variables?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["variables"], string | number>]: never; }) | undefined;
        operationName?: string | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof PersistedQueryRequest>]: never; }>(object: I): PersistedQueryRequest;
};
export declare const QueryResponse: {
    $type: "devvit.plugin.redditapi.graphql.QueryResponse";
    encode(message: QueryResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryResponse;
    fromJSON(object: any): QueryResponse;
    toJSON(message: QueryResponse): unknown;
    fromPartial<I extends {
        data?: {
            [x: string]: any;
        } | undefined;
    } & {
        data?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["data"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | "data">]: never; }>(object: I): QueryResponse;
};
//# sourceMappingURL=graphql_msg.d.ts.map