/**
 * #bundle_service.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { Empty } from '../../google/protobuf/empty.js';
import { LinkedBundle } from '../runtime/bundle.js';
export class BundleServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "devvit.service.BundleService";
        this.rpc = rpc;
        this.Upload = this.Upload.bind(this);
    }
    Upload(request) {
        const data = LinkedBundle.encode(request).finish();
        const promise = this.rpc.request(this.service, "Upload", data);
        return promise.then((data) => Empty.decode(new _m0.Reader(data)));
    }
}
export const BundleServiceDefinition = {
    name: "BundleService",
    fullName: "devvit.service.BundleService",
    methods: {
        upload: {
            name: "Upload",
            requestType: LinkedBundle,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {},
        },
    },
};
