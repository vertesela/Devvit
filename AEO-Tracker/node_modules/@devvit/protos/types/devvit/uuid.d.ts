/**
 * #uuid.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
/** Many RPCs take just a UUID as a parameter; declare a common message here to make life simpler */
export interface UUID {
    id: string;
}
export declare const UUID: {
    $type: "devvit.UUID";
    encode(message: UUID, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UUID;
    fromJSON(object: any): UUID;
    toJSON(message: UUID): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "id">]: never; }>(object: I): UUID;
};
//# sourceMappingURL=uuid.d.ts.map