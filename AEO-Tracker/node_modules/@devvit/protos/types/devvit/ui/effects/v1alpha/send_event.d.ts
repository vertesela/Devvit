/**
 * #send_event.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { UIEvent } from '../../events/v1alpha/event.js';
/**
 * This is a low level effect that allows the client or server to send events
 * directly, typically to the other runtime.  It's not intended to be used by
 * app code directly, but rather by hooks that start to bring concurrency features
 * into the platform.
 *
 * An example might be a useFetchHook.  An app developer would use the hook to
 * fetch a remote api, making the request from the server runtime, but without
 * blocking the client runtime.  The lifecycle would be something like:
 *
 *    const {data, loading, error} = useFetch("https://api.example.com");
 *
 * The useFetch hook on the client runtime would emit a
 * SendEventEffect(AsyncRequest({id: "hook-id-xyz"})).  When this event hits the client
 * runtime, it would instantly circuit-break, causing the runtime to send the event to the
 * server runtime.  The server runtime would then look up the hook by id, actually make the
 * request, and then emit a SendEventEffect(AsyncResponse(id: "hook-id-xyz", data: "..."), Target.CLIENT)
 * which would get routed back into the client.
 *
 * This request lifecycle would be orthogonal to the normal event lifecycle, and therefore you
 * couldn't/wouldn't do any setStates inside of the hook.  But the benefit would be that
 * there would be no state conflicts, so the async request/response could be handled concurrently.
 */
export interface SendEventEffect {
    event?: UIEvent;
}
export declare const SendEventEffect: {
    $type: "devvit.ui.effects.v1alpha.SendEventEffect";
    encode(message: SendEventEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendEventEffect;
    fromJSON(object: any): SendEventEffect;
    toJSON(message: SendEventEffect): unknown;
    fromPartial<I extends {
        event?: {
            realtimeEvent?: {
                event?: {
                    channel?: string | undefined;
                    data?: any;
                } | undefined;
                status?: import("./realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
            } | undefined;
            formSubmitted?: {
                results?: {
                    [x: string]: {
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: any[] | undefined;
                        } | undefined;
                        selectionValue?: {
                            values?: string[] | undefined;
                        } | undefined;
                        groupValue?: {} | undefined;
                    } | undefined;
                } | undefined;
                formId?: string | undefined;
            } | undefined;
            toastAction?: {} | undefined;
            userAction?: {
                actionId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } | undefined;
            asyncRequest?: {
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } | undefined;
            asyncResponse?: {
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
                error?: {
                    message?: string | undefined;
                    details?: string | undefined;
                } | undefined;
            } | undefined;
            queue?: string | undefined;
        } | undefined;
    } & {
        event?: ({
            realtimeEvent?: {
                event?: {
                    channel?: string | undefined;
                    data?: any;
                } | undefined;
                status?: import("./realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
            } | undefined;
            formSubmitted?: {
                results?: {
                    [x: string]: {
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: any[] | undefined;
                        } | undefined;
                        selectionValue?: {
                            values?: string[] | undefined;
                        } | undefined;
                        groupValue?: {} | undefined;
                    } | undefined;
                } | undefined;
                formId?: string | undefined;
            } | undefined;
            toastAction?: {} | undefined;
            userAction?: {
                actionId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } | undefined;
            asyncRequest?: {
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } | undefined;
            asyncResponse?: {
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
                error?: {
                    message?: string | undefined;
                    details?: string | undefined;
                } | undefined;
            } | undefined;
            queue?: string | undefined;
        } & {
            realtimeEvent?: ({
                event?: {
                    channel?: string | undefined;
                    data?: any;
                } | undefined;
                status?: import("./realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
            } & {
                event?: ({
                    channel?: string | undefined;
                    data?: any;
                } & {
                    channel?: string | undefined;
                    data?: any;
                } & { [K in Exclude<keyof I["event"]["realtimeEvent"]["event"], "$type" | keyof import("../../../events/v1alpha/realtime.js").RealtimeEvent>]: never; }) | undefined;
                status?: import("./realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
            } & { [K_1 in Exclude<keyof I["event"]["realtimeEvent"], "$type" | keyof import("./realtime_subscriptions.js").RealtimeSubscriptionEvent>]: never; }) | undefined;
            formSubmitted?: ({
                results?: {
                    [x: string]: {
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: any[] | undefined;
                        } | undefined;
                        selectionValue?: {
                            values?: string[] | undefined;
                        } | undefined;
                        groupValue?: {} | undefined;
                    } | undefined;
                } | undefined;
                formId?: string | undefined;
            } & {
                results?: ({
                    [x: string]: {
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: any[] | undefined;
                        } | undefined;
                        selectionValue?: {
                            values?: string[] | undefined;
                        } | undefined;
                        groupValue?: {} | undefined;
                    } | undefined;
                } & {
                    [x: string]: ({
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: any[] | undefined;
                        } | undefined;
                        selectionValue?: {
                            values?: string[] | undefined;
                        } | undefined;
                        groupValue?: {} | undefined;
                    } & {
                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        isSecret?: boolean | undefined;
                        stringValue?: string | undefined;
                        numberValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        listValue?: ({
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: {
                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: any | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            }[] | undefined;
                        } & {
                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            items?: ({
                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            }[] & ({
                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } & {
                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: ({
                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    items?: {
                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: any | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[] | undefined;
                                } & {
                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    items?: ({
                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[] & ({
                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } & {
                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: ({
                                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            items?: {
                                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: any | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] | undefined;
                                        } & {
                                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            items?: ({
                                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] & ({
                                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } & {
                                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: ({
                                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    items?: {
                                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: any | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_2 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                                selectionValue?: ({
                                                    values?: string[] | undefined;
                                                } & any & { [K_3 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                                groupValue?: ({} & any & { [K_4 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                            } & { [K_5 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_6 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[]>]: never; }) | undefined;
                                        } & { [K_7 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                        selectionValue?: ({
                                            values?: string[] | undefined;
                                        } & {
                                            values?: (string[] & string[] & { [K_8 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                        } & { [K_9 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                        groupValue?: ({} & {} & { [K_10 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                    } & { [K_11 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_12 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                        fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[]>]: never; }) | undefined;
                                } & { [K_13 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                selectionValue?: ({
                                    values?: string[] | undefined;
                                } & {
                                    values?: (string[] & string[] & { [K_14 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                } & { [K_15 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                groupValue?: ({} & {} & { [K_16 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                            } & { [K_17 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_18 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"]["items"], "$type" | keyof {
                                fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            }[]>]: never; }) | undefined;
                        } & { [K_19 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                        selectionValue?: ({
                            values?: string[] | undefined;
                        } & {
                            values?: (string[] & string[] & { [K_20 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                        } & { [K_21 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                        groupValue?: ({} & {} & { [K_22 in Exclude<keyof I["event"]["formSubmitted"]["results"][string]["groupValue"], "$type">]: never; }) | undefined;
                    } & { [K_23 in Exclude<keyof I["event"]["formSubmitted"]["results"][string], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; }) | undefined;
                } & { [K_24 in Exclude<keyof I["event"]["formSubmitted"]["results"], string | number>]: never; }) | undefined;
                formId?: string | undefined;
            } & { [K_25 in Exclude<keyof I["event"]["formSubmitted"], "$type" | keyof import("./show_form.js").FormSubmittedEvent>]: never; }) | undefined;
            toastAction?: ({} & {} & { [K_26 in Exclude<keyof I["event"]["toastAction"], "$type">]: never; }) | undefined;
            userAction?: ({
                actionId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } & {
                actionId?: string | undefined;
                data?: ({
                    [x: string]: any;
                } & {
                    [x: string]: any;
                } & { [K_27 in Exclude<keyof I["event"]["userAction"]["data"], string | number>]: never; }) | undefined;
            } & { [K_28 in Exclude<keyof I["event"]["userAction"], "$type" | keyof import("../../events/v1alpha/event.js").UserAction>]: never; }) | undefined;
            asyncRequest?: ({
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
            } & {
                requestId?: string | undefined;
                data?: ({
                    [x: string]: any;
                } & {
                    [x: string]: any;
                } & { [K_29 in Exclude<keyof I["event"]["asyncRequest"]["data"], string | number>]: never; }) | undefined;
            } & { [K_30 in Exclude<keyof I["event"]["asyncRequest"], "$type" | keyof import("../../events/v1alpha/event.js").AsyncRequest>]: never; }) | undefined;
            asyncResponse?: ({
                requestId?: string | undefined;
                data?: {
                    [x: string]: any;
                } | undefined;
                error?: {
                    message?: string | undefined;
                    details?: string | undefined;
                } | undefined;
            } & {
                requestId?: string | undefined;
                data?: ({
                    [x: string]: any;
                } & {
                    [x: string]: any;
                } & { [K_31 in Exclude<keyof I["event"]["asyncResponse"]["data"], string | number>]: never; }) | undefined;
                error?: ({
                    message?: string | undefined;
                    details?: string | undefined;
                } & {
                    message?: string | undefined;
                    details?: string | undefined;
                } & { [K_32 in Exclude<keyof I["event"]["asyncResponse"]["error"], "$type" | keyof import("../../events/v1alpha/event.js").AsyncError>]: never; }) | undefined;
            } & { [K_33 in Exclude<keyof I["event"]["asyncResponse"], "$type" | keyof import("../../events/v1alpha/event.js").AsyncResponse>]: never; }) | undefined;
            queue?: string | undefined;
        } & { [K_34 in Exclude<keyof I["event"], "$type" | keyof UIEvent>]: never; }) | undefined;
    } & { [K_35 in Exclude<keyof I, "$type" | "event">]: never; }>(object: I): SendEventEffect;
};
//# sourceMappingURL=send_event.d.ts.map