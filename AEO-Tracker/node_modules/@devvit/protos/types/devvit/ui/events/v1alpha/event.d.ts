/**
 * #event.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { RealtimeSubscriptionEvent } from '../../effects/v1alpha/realtime_subscriptions.js';
import { FormSubmittedEvent } from '../../effects/v1alpha/show_form.js';
import { ToastActionEvent } from '../../effects/v1alpha/show_toast.js';
export interface UIEvent {
    realtimeEvent?: RealtimeSubscriptionEvent | undefined;
    formSubmitted?: FormSubmittedEvent | undefined;
    toastAction?: ToastActionEvent | undefined;
    userAction?: UserAction | undefined;
    asyncRequest?: AsyncRequest | undefined;
    asyncResponse?: AsyncResponse | undefined;
    /** The queue to which this event should be sent.  If not set, the default queue is used. */
    queue?: string;
}
export interface AsyncError {
    message: string;
    /** Typically a stack trace */
    details: string;
}
export interface AsyncRequest {
    requestId: string;
    data?: {
        [key: string]: any;
    };
}
export interface AsyncResponse {
    requestId: string;
    data?: {
        [key: string]: any;
    };
    error?: AsyncError;
}
export interface UserAction {
    actionId: string;
    data?: {
        [key: string]: any;
    };
}
export declare const UIEvent: {
    $type: "devvit.ui.events.v1alpha.UIEvent";
    encode(message: UIEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UIEvent;
    fromJSON(object: any): UIEvent;
    toJSON(message: UIEvent): unknown;
    fromPartial<I extends {
        realtimeEvent?: {
            event?: {
                channel?: string | undefined;
                data?: any;
            } | undefined;
            status?: import("../../effects/v1alpha/realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
        } | undefined;
        formSubmitted?: {
            results?: {
                [x: string]: {
                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                    isSecret?: boolean | undefined;
                    stringValue?: string | undefined;
                    numberValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    listValue?: {
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: any[] | undefined;
                    } | undefined;
                    selectionValue?: {
                        values?: string[] | undefined;
                    } | undefined;
                    groupValue?: {} | undefined;
                } | undefined;
            } | undefined;
            formId?: string | undefined;
        } | undefined;
        toastAction?: {} | undefined;
        userAction?: {
            actionId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } | undefined;
        asyncRequest?: {
            requestId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } | undefined;
        asyncResponse?: {
            requestId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
            error?: {
                message?: string | undefined;
                details?: string | undefined;
            } | undefined;
        } | undefined;
        queue?: string | undefined;
    } & {
        realtimeEvent?: ({
            event?: {
                channel?: string | undefined;
                data?: any;
            } | undefined;
            status?: import("../../effects/v1alpha/realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
        } & {
            event?: ({
                channel?: string | undefined;
                data?: any;
            } & {
                channel?: string | undefined;
                data?: any;
            } & { [K in Exclude<keyof I["realtimeEvent"]["event"], "$type" | keyof import("../../../events/v1alpha/realtime.js").RealtimeEvent>]: never; }) | undefined;
            status?: import("../../effects/v1alpha/realtime_subscriptions.js").RealtimeSubscriptionStatus | undefined;
        } & { [K_1 in Exclude<keyof I["realtimeEvent"], "$type" | keyof RealtimeSubscriptionEvent>]: never; }) | undefined;
        formSubmitted?: ({
            results?: {
                [x: string]: {
                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                    isSecret?: boolean | undefined;
                    stringValue?: string | undefined;
                    numberValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    listValue?: {
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: any[] | undefined;
                    } | undefined;
                    selectionValue?: {
                        values?: string[] | undefined;
                    } | undefined;
                    groupValue?: {} | undefined;
                } | undefined;
            } | undefined;
            formId?: string | undefined;
        } & {
            results?: ({
                [x: string]: {
                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                    isSecret?: boolean | undefined;
                    stringValue?: string | undefined;
                    numberValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    listValue?: {
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: any[] | undefined;
                    } | undefined;
                    selectionValue?: {
                        values?: string[] | undefined;
                    } | undefined;
                    groupValue?: {} | undefined;
                } | undefined;
            } & {
                [x: string]: ({
                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                    isSecret?: boolean | undefined;
                    stringValue?: string | undefined;
                    numberValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    listValue?: {
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: any[] | undefined;
                    } | undefined;
                    selectionValue?: {
                        values?: string[] | undefined;
                    } | undefined;
                    groupValue?: {} | undefined;
                } & {
                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                    isSecret?: boolean | undefined;
                    stringValue?: string | undefined;
                    numberValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    listValue?: ({
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: {
                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: any | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        }[] | undefined;
                    } & {
                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                        items?: ({
                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        }[] & ({
                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } & {
                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: ({
                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                items?: {
                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: any | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[] | undefined;
                            } & {
                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                items?: ({
                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[] & ({
                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                } & {
                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: ({
                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        items?: {
                                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: any | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[] | undefined;
                                    } & {
                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        items?: ({
                                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[] & ({
                                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        } & {
                                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: ({
                                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                items?: {
                                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: any | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[] | undefined;
                                            } & {
                                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                items?: ({
                                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[] & ({
                                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } & any & { [K_2 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_3 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[]>]: never; }) | undefined;
                                            } & { [K_4 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                            selectionValue?: ({
                                                values?: string[] | undefined;
                                            } & {
                                                values?: (string[] & string[] & { [K_5 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                            } & { [K_6 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                            groupValue?: ({} & {} & { [K_7 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                        } & { [K_8 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_9 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_10 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                    selectionValue?: ({
                                        values?: string[] | undefined;
                                    } & {
                                        values?: (string[] & string[] & { [K_11 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                    } & { [K_12 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                    groupValue?: ({} & {} & { [K_13 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                } & { [K_14 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_15 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                    fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[]>]: never; }) | undefined;
                            } & { [K_16 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                            selectionValue?: ({
                                values?: string[] | undefined;
                            } & {
                                values?: (string[] & string[] & { [K_17 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                            } & { [K_18 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                            groupValue?: ({} & {} & { [K_19 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                        } & { [K_20 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"][number], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; })[] & { [K_21 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"]["items"], "$type" | keyof {
                            fieldType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../form_builder/v1alpha/type.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        }[]>]: never; }) | undefined;
                    } & { [K_22 in Exclude<keyof I["formSubmitted"]["results"][string]["listValue"], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue_ListValue>]: never; }) | undefined;
                    selectionValue?: ({
                        values?: string[] | undefined;
                    } & {
                        values?: (string[] & string[] & { [K_23 in Exclude<keyof I["formSubmitted"]["results"][string]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                    } & { [K_24 in Exclude<keyof I["formSubmitted"]["results"][string]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                    groupValue?: ({} & {} & { [K_25 in Exclude<keyof I["formSubmitted"]["results"][string]["groupValue"], "$type">]: never; }) | undefined;
                } & { [K_26 in Exclude<keyof I["formSubmitted"]["results"][string], "$type" | keyof import("../../form_builder/v1alpha/value.js").FormFieldValue>]: never; }) | undefined;
            } & { [K_27 in Exclude<keyof I["formSubmitted"]["results"], string | number>]: never; }) | undefined;
            formId?: string | undefined;
        } & { [K_28 in Exclude<keyof I["formSubmitted"], "$type" | keyof FormSubmittedEvent>]: never; }) | undefined;
        toastAction?: ({} & {} & { [K_29 in Exclude<keyof I["toastAction"], "$type">]: never; }) | undefined;
        userAction?: ({
            actionId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } & {
            actionId?: string | undefined;
            data?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K_30 in Exclude<keyof I["userAction"]["data"], string | number>]: never; }) | undefined;
        } & { [K_31 in Exclude<keyof I["userAction"], "$type" | keyof UserAction>]: never; }) | undefined;
        asyncRequest?: ({
            requestId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } & {
            requestId?: string | undefined;
            data?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K_32 in Exclude<keyof I["asyncRequest"]["data"], string | number>]: never; }) | undefined;
        } & { [K_33 in Exclude<keyof I["asyncRequest"], "$type" | keyof AsyncRequest>]: never; }) | undefined;
        asyncResponse?: ({
            requestId?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
            error?: {
                message?: string | undefined;
                details?: string | undefined;
            } | undefined;
        } & {
            requestId?: string | undefined;
            data?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K_34 in Exclude<keyof I["asyncResponse"]["data"], string | number>]: never; }) | undefined;
            error?: ({
                message?: string | undefined;
                details?: string | undefined;
            } & {
                message?: string | undefined;
                details?: string | undefined;
            } & { [K_35 in Exclude<keyof I["asyncResponse"]["error"], "$type" | keyof AsyncError>]: never; }) | undefined;
        } & { [K_36 in Exclude<keyof I["asyncResponse"], "$type" | keyof AsyncResponse>]: never; }) | undefined;
        queue?: string | undefined;
    } & { [K_37 in Exclude<keyof I, "$type" | keyof UIEvent>]: never; }>(object: I): UIEvent;
};
export declare const AsyncError: {
    $type: "devvit.ui.events.v1alpha.AsyncError";
    encode(message: AsyncError, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AsyncError;
    fromJSON(object: any): AsyncError;
    toJSON(message: AsyncError): unknown;
    fromPartial<I extends {
        message?: string | undefined;
        details?: string | undefined;
    } & {
        message?: string | undefined;
        details?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof AsyncError>]: never; }>(object: I): AsyncError;
};
export declare const AsyncRequest: {
    $type: "devvit.ui.events.v1alpha.AsyncRequest";
    encode(message: AsyncRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AsyncRequest;
    fromJSON(object: any): AsyncRequest;
    toJSON(message: AsyncRequest): unknown;
    fromPartial<I extends {
        requestId?: string | undefined;
        data?: {
            [x: string]: any;
        } | undefined;
    } & {
        requestId?: string | undefined;
        data?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["data"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof AsyncRequest>]: never; }>(object: I): AsyncRequest;
};
export declare const AsyncResponse: {
    $type: "devvit.ui.events.v1alpha.AsyncResponse";
    encode(message: AsyncResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AsyncResponse;
    fromJSON(object: any): AsyncResponse;
    toJSON(message: AsyncResponse): unknown;
    fromPartial<I extends {
        requestId?: string | undefined;
        data?: {
            [x: string]: any;
        } | undefined;
        error?: {
            message?: string | undefined;
            details?: string | undefined;
        } | undefined;
    } & {
        requestId?: string | undefined;
        data?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["data"], string | number>]: never; }) | undefined;
        error?: ({
            message?: string | undefined;
            details?: string | undefined;
        } & {
            message?: string | undefined;
            details?: string | undefined;
        } & { [K_1 in Exclude<keyof I["error"], "$type" | keyof AsyncError>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof AsyncResponse>]: never; }>(object: I): AsyncResponse;
};
export declare const UserAction: {
    $type: "devvit.ui.events.v1alpha.UserAction";
    encode(message: UserAction, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserAction;
    fromJSON(object: any): UserAction;
    toJSON(message: UserAction): unknown;
    fromPartial<I extends {
        actionId?: string | undefined;
        data?: {
            [x: string]: any;
        } | undefined;
    } & {
        actionId?: string | undefined;
        data?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["data"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof UserAction>]: never; }>(object: I): UserAction;
};
//# sourceMappingURL=event.d.ts.map