/**
 * #events.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { CommentV2 } from '../../reddit/v2alpha/commentv2.js';
import { PostV2 } from '../../reddit/v2alpha/postv2.js';
import { SubredditV2 } from '../../reddit/v2alpha/subredditv2.js';
import { UserV2 } from '../../reddit/v2alpha/userv2.js';
export declare enum EventSource {
    UNKNOWN_EVENT_SOURCE = 0,
    USER = 1,
    ADMIN = 2,
    MODERATOR = 3,
    UNRECOGNIZED = -1
}
export declare function eventSourceFromJSON(object: any): EventSource;
export declare function eventSourceToJSON(object: EventSource): number;
export declare enum DeletionReason {
    UNSPECIFIED_DELETION_REASON = 0,
    SPAM = 1,
    LEGAL = 2,
    OTHER = 3,
    UNKNOWN = 4,
    UNRECOGNIZED = -1
}
export declare function deletionReasonFromJSON(object: any): DeletionReason;
export declare function deletionReasonToJSON(object: DeletionReason): number;
export interface PostSubmit {
    post?: PostV2;
    author?: UserV2;
    subreddit?: SubredditV2;
}
export interface PostCreate {
    post?: PostV2;
    author?: UserV2;
    subreddit?: SubredditV2;
}
export interface PostUpdate {
    post?: PostV2;
    author?: UserV2;
    previousBody: string;
    subreddit?: SubredditV2;
}
export interface PostReport {
    post?: PostV2;
    subreddit?: SubredditV2;
    reason: string;
}
export interface PostFlairUpdate {
    post?: PostV2;
    author?: UserV2;
    subreddit?: SubredditV2;
}
export interface PostDelete {
    postId: string;
    deletedAt?: Date;
    author?: UserV2;
    createdAt?: Date;
    source: EventSource;
    reason: DeletionReason;
    subreddit?: SubredditV2;
}
export interface PostApprove {
    post?: PostV2;
    approvedAt?: Date;
    author?: UserV2;
    source: EventSource;
    subreddit?: SubredditV2;
}
export interface CommentApprove {
    comment?: CommentV2;
    post?: PostV2;
    approvedAt?: Date;
    author?: UserV2;
    source: EventSource;
    subreddit?: SubredditV2;
}
export interface CommentSubmit {
    comment?: CommentV2;
    author?: UserV2;
    post?: PostV2;
    subreddit?: SubredditV2;
}
export interface CommentCreate {
    comment?: CommentV2;
    author?: UserV2;
    post?: PostV2;
    subreddit?: SubredditV2;
}
export interface CommentUpdate {
    comment?: CommentV2;
    author?: UserV2;
    post?: PostV2;
    previousBody: string;
    subreddit?: SubredditV2;
}
export interface CommentReport {
    comment?: CommentV2;
    subreddit?: SubredditV2;
    reason: string;
}
export interface CommentDelete {
    commentId: string;
    postId: string;
    parentId: string;
    deletedAt?: Date;
    author?: UserV2;
    createdAt?: Date;
    source: EventSource;
    reason: DeletionReason;
    subreddit?: SubredditV2;
}
export interface SubredditSubscribe {
    subreddit?: SubredditV2;
    subscriber?: UserV2;
}
export interface AppInstall {
    subreddit?: SubredditV2;
    installer?: UserV2;
}
export interface AppUpgrade {
    subreddit?: SubredditV2;
    installer?: UserV2;
}
export interface AccountDelete {
    userId: string;
    deletedAt?: Date;
    user?: UserV2;
}
export interface Vote {
    updatedAt?: Date;
    comment?: CommentV2;
    post?: PostV2;
    subreddit?: SubredditV2;
    upvoteRatio: number;
    score: number;
}
export declare const PostSubmit: {
    $type: "devvit.events.v1alpha.PostSubmit";
    encode(message: PostSubmit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostSubmit;
    fromJSON(object: any): PostSubmit;
    toJSON(message: PostSubmit): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_7 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_8 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_9 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof PostSubmit>]: never; }>(object: I): PostSubmit;
};
export declare const PostCreate: {
    $type: "devvit.events.v1alpha.PostCreate";
    encode(message: PostCreate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostCreate;
    fromJSON(object: any): PostCreate;
    toJSON(message: PostCreate): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_7 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_8 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_9 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof PostCreate>]: never; }>(object: I): PostCreate;
};
export declare const PostUpdate: {
    $type: "devvit.events.v1alpha.PostUpdate";
    encode(message: PostUpdate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostUpdate;
    fromJSON(object: any): PostUpdate;
    toJSON(message: PostUpdate): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        previousBody?: string | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_7 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        previousBody?: string | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_8 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_9 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof PostUpdate>]: never; }>(object: I): PostUpdate;
};
export declare const PostReport: {
    $type: "devvit.events.v1alpha.PostReport";
    encode(message: PostReport, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostReport;
    fromJSON(object: any): PostReport;
    toJSON(message: PostReport): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        reason?: string | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_6 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_7 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        reason?: string | undefined;
    } & { [K_8 in Exclude<keyof I, "$type" | keyof PostReport>]: never; }>(object: I): PostReport;
};
export declare const PostFlairUpdate: {
    $type: "devvit.events.v1alpha.PostFlairUpdate";
    encode(message: PostFlairUpdate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostFlairUpdate;
    fromJSON(object: any): PostFlairUpdate;
    toJSON(message: PostFlairUpdate): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_7 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_8 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_9 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof PostFlairUpdate>]: never; }>(object: I): PostFlairUpdate;
};
export declare const PostDelete: {
    $type: "devvit.events.v1alpha.PostDelete";
    encode(message: PostDelete, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostDelete;
    fromJSON(object: any): PostDelete;
    toJSON(message: PostDelete): unknown;
    fromPartial<I extends {
        postId?: string | undefined;
        deletedAt?: Date | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        createdAt?: Date | undefined;
        source?: EventSource | undefined;
        reason?: DeletionReason | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        postId?: string | undefined;
        deletedAt?: Date | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_1 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        createdAt?: Date | undefined;
        source?: EventSource | undefined;
        reason?: DeletionReason | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_2 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_3 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof PostDelete>]: never; }>(object: I): PostDelete;
};
export declare const PostApprove: {
    $type: "devvit.events.v1alpha.PostApprove";
    encode(message: PostApprove, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostApprove;
    fromJSON(object: any): PostApprove;
    toJSON(message: PostApprove): unknown;
    fromPartial<I extends {
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        approvedAt?: Date | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        source?: EventSource | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        approvedAt?: Date | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_6 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_7 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        source?: EventSource | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_8 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_9 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof PostApprove>]: never; }>(object: I): PostApprove;
};
export declare const CommentApprove: {
    $type: "devvit.events.v1alpha.CommentApprove";
    encode(message: CommentApprove, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentApprove;
    fromJSON(object: any): CommentApprove;
    toJSON(message: CommentApprove): unknown;
    fromPartial<I extends {
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        approvedAt?: Date | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        source?: EventSource | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_4 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_5 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_6 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        approvedAt?: Date | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_7 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_8 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        source?: EventSource | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_9 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_10 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof CommentApprove>]: never; }>(object: I): CommentApprove;
};
export declare const CommentSubmit: {
    $type: "devvit.events.v1alpha.CommentSubmit";
    encode(message: CommentSubmit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentSubmit;
    fromJSON(object: any): CommentSubmit;
    toJSON(message: CommentSubmit): unknown;
    fromPartial<I extends {
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_2 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K_3 in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_5 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_6 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_7 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_8 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_9 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_10 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof CommentSubmit>]: never; }>(object: I): CommentSubmit;
};
export declare const CommentCreate: {
    $type: "devvit.events.v1alpha.CommentCreate";
    encode(message: CommentCreate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentCreate;
    fromJSON(object: any): CommentCreate;
    toJSON(message: CommentCreate): unknown;
    fromPartial<I extends {
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_2 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K_3 in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_5 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_6 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_7 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_8 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_9 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_10 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof CommentCreate>]: never; }>(object: I): CommentCreate;
};
export declare const CommentUpdate: {
    $type: "devvit.events.v1alpha.CommentUpdate";
    encode(message: CommentUpdate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentUpdate;
    fromJSON(object: any): CommentUpdate;
    toJSON(message: CommentUpdate): unknown;
    fromPartial<I extends {
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        previousBody?: string | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_2 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K_3 in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_5 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_6 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_7 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_8 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        previousBody?: string | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_9 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_10 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof CommentUpdate>]: never; }>(object: I): CommentUpdate;
};
export declare const CommentReport: {
    $type: "devvit.events.v1alpha.CommentReport";
    encode(message: CommentReport, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentReport;
    fromJSON(object: any): CommentReport;
    toJSON(message: CommentReport): unknown;
    fromPartial<I extends {
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        reason?: string | undefined;
    } & {
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_1 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_2 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        reason?: string | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof CommentReport>]: never; }>(object: I): CommentReport;
};
export declare const CommentDelete: {
    $type: "devvit.events.v1alpha.CommentDelete";
    encode(message: CommentDelete, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentDelete;
    fromJSON(object: any): CommentDelete;
    toJSON(message: CommentDelete): unknown;
    fromPartial<I extends {
        commentId?: string | undefined;
        postId?: string | undefined;
        parentId?: string | undefined;
        deletedAt?: Date | undefined;
        author?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        createdAt?: Date | undefined;
        source?: EventSource | undefined;
        reason?: DeletionReason | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
    } & {
        commentId?: string | undefined;
        postId?: string | undefined;
        parentId?: string | undefined;
        deletedAt?: Date | undefined;
        author?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K in Exclude<keyof I["author"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_1 in Exclude<keyof I["author"], "$type" | keyof UserV2>]: never; }) | undefined;
        createdAt?: Date | undefined;
        source?: EventSource | undefined;
        reason?: DeletionReason | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_2 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_3 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof CommentDelete>]: never; }>(object: I): CommentDelete;
};
export declare const SubredditSubscribe: {
    $type: "devvit.events.v1alpha.SubredditSubscribe";
    encode(message: SubredditSubscribe, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditSubscribe;
    fromJSON(object: any): SubredditSubscribe;
    toJSON(message: SubredditSubscribe): unknown;
    fromPartial<I extends {
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        subscriber?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
    } & {
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_1 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        subscriber?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["subscriber"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_3 in Exclude<keyof I["subscriber"], "$type" | keyof UserV2>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof SubredditSubscribe>]: never; }>(object: I): SubredditSubscribe;
};
export declare const AppInstall: {
    $type: "devvit.events.v1alpha.AppInstall";
    encode(message: AppInstall, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppInstall;
    fromJSON(object: any): AppInstall;
    toJSON(message: AppInstall): unknown;
    fromPartial<I extends {
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        installer?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
    } & {
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_1 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        installer?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["installer"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_3 in Exclude<keyof I["installer"], "$type" | keyof UserV2>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof AppInstall>]: never; }>(object: I): AppInstall;
};
export declare const AppUpgrade: {
    $type: "devvit.events.v1alpha.AppUpgrade";
    encode(message: AppUpgrade, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppUpgrade;
    fromJSON(object: any): AppUpgrade;
    toJSON(message: AppUpgrade): unknown;
    fromPartial<I extends {
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        installer?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
    } & {
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_1 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        installer?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["installer"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_3 in Exclude<keyof I["installer"], "$type" | keyof UserV2>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof AppUpgrade>]: never; }>(object: I): AppUpgrade;
};
export declare const AccountDelete: {
    $type: "devvit.events.v1alpha.AccountDelete";
    encode(message: AccountDelete, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AccountDelete;
    fromJSON(object: any): AccountDelete;
    toJSON(message: AccountDelete): unknown;
    fromPartial<I extends {
        userId?: string | undefined;
        deletedAt?: Date | undefined;
        user?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
    } & {
        userId?: string | undefined;
        deletedAt?: Date | undefined;
        user?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K in Exclude<keyof I["user"]["flair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_1 in Exclude<keyof I["user"], "$type" | keyof UserV2>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof AccountDelete>]: never; }>(object: I): AccountDelete;
};
export declare const Vote: {
    $type: "devvit.events.v1alpha.Vote";
    encode(message: Vote, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Vote;
    fromJSON(object: any): Vote;
    toJSON(message: Vote): unknown;
    fromPartial<I extends {
        updatedAt?: Date | undefined;
        comment?: {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } | undefined;
        post?: {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } | undefined;
        subreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        upvoteRatio?: number | undefined;
        score?: number | undefined;
    } & {
        updatedAt?: Date | undefined;
        comment?: ({
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & {
            id?: string | undefined;
            parentId?: string | undefined;
            body?: string | undefined;
            author?: string | undefined;
            numReports?: number | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            createdAt?: number | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            languageCode?: string | undefined;
            lastModifiedAt?: number | undefined;
            gilded?: boolean | undefined;
            score?: number | undefined;
            permalink?: string | undefined;
            hasMedia?: boolean | undefined;
            postId?: string | undefined;
            subredditId?: string | undefined;
        } & { [K in Exclude<keyof I["comment"], "$type" | keyof CommentV2>]: never; }) | undefined;
        post?: ({
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } | undefined;
            authorFlair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: {
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & {
            id?: string | undefined;
            title?: string | undefined;
            selftext?: string | undefined;
            nsfw?: boolean | undefined;
            authorId?: string | undefined;
            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
            numReports?: number | undefined;
            isGallery?: boolean | undefined;
            isMeta?: boolean | undefined;
            createdAt?: number | undefined;
            isApproved?: boolean | undefined;
            isArchived?: boolean | undefined;
            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
            ignoreReports?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            isLocked?: boolean | undefined;
            isSpoiler?: boolean | undefined;
            subredditId?: string | undefined;
            upvotes?: number | undefined;
            downvotes?: number | undefined;
            url?: string | undefined;
            isSticky?: boolean | undefined;
            linkFlair?: ({
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & {
                text?: string | undefined;
                cssClass?: string | undefined;
                backgroundColor?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
            } & { [K_1 in Exclude<keyof I["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
            authorFlair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
            spam?: boolean | undefined;
            deleted?: boolean | undefined;
            languageCode?: string | undefined;
            updatedAt?: number | undefined;
            gildings?: number | undefined;
            score?: number | undefined;
            numComments?: number | undefined;
            thumbnail?: string | undefined;
            media?: ({
                type?: string | undefined;
                oembed?: {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } | undefined;
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } | undefined;
            } & {
                type?: string | undefined;
                oembed?: ({
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & {
                    type?: string | undefined;
                    version?: string | undefined;
                    title?: string | undefined;
                    description?: string | undefined;
                    authorName?: string | undefined;
                    authorUrl?: string | undefined;
                    providerName?: string | undefined;
                    providerUrl?: string | undefined;
                    thumbnailUrl?: string | undefined;
                    thumbnailWidth?: number | undefined;
                    thumbnailHeight?: number | undefined;
                    html?: string | undefined;
                    width?: number | undefined;
                    height?: number | undefined;
                } & { [K_3 in Exclude<keyof I["post"]["media"]["oembed"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").Oembed>]: never; }) | undefined;
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    width?: number | undefined;
                    scrubberMediaUrl?: string | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    transcodingStatus?: string | undefined;
                } & { [K_4 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").RedditVideo>]: never; }) | undefined;
            } & { [K_5 in Exclude<keyof I["post"]["media"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").MediaObject>]: never; }) | undefined;
            crosspostParentId?: string | undefined;
            permalink?: string | undefined;
            isPoll?: boolean | undefined;
            isPromoted?: boolean | undefined;
            isMultiMedia?: boolean | undefined;
        } & { [K_6 in Exclude<keyof I["post"], "$type" | keyof PostV2>]: never; }) | undefined;
        subreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_7 in Exclude<keyof I["subreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("../../reddit/v2alpha/subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_8 in Exclude<keyof I["subreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        upvoteRatio?: number | undefined;
        score?: number | undefined;
    } & { [K_9 in Exclude<keyof I, "$type" | keyof Vote>]: never; }>(object: I): Vote;
};
//# sourceMappingURL=events.d.ts.map