/**
 * #audit.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
export declare enum AuditLogEventType {
    DATA_SUBSCRIPTION_CREATE = 0,
    DATA_SUBSCRIPTION_UPDATE = 1,
    DATA_SUBSCRIPTION_DELETE = 2,
    DATA_TOKEN_CREATE = 3,
    DATA_TOKEN_REVOKE = 4,
    UNRECOGNIZED = -1
}
export declare function auditLogEventTypeFromJSON(object: any): AuditLogEventType;
export declare function auditLogEventTypeToJSON(object: AuditLogEventType): number;
export interface AuditLogEvent {
    /** unique identifier for the event */
    id: string;
    /** when the event was created */
    createdAt?: Date;
    /** t2_ id of the user who performed the action */
    userId: string;
    /** type of the event */
    type: AuditLogEventType;
    /** id of the organization the event is associated with */
    organizationId: string;
    dataTokenCreatePayload?: DataTokenCreateAuditLogEventPayload | undefined;
    dataTokenRevokePayload?: DataTokenRevokeAuditLogEventPayload | undefined;
    dataSubscriptionCreatePayload?: DataSubscriptionCreateAuditLogEventPayload | undefined;
    dataSubscriptionUpdatePayload?: DataSubscriptionUpdateAuditLogEventPayload | undefined;
    dataSubscriptionDeletePayload?: DataSubscriptionDeleteAuditLogEventPayload | undefined;
}
export interface DataTokenCreateAuditLogEventPayload {
    /** id of the data token that was created */
    tokenId: string;
    /** expiration date of the data token */
    expiration?: Date;
}
export interface DataTokenRevokeAuditLogEventPayload {
    /** id of the data token that was revoked */
    tokenId: string;
}
export interface DataSubscriptionCreateAuditLogEventPayload {
    subscriptionId: string;
}
export interface DataSubscriptionUpdateAuditLogEventPayload {
    subscriptionId: string;
}
export interface DataSubscriptionDeleteAuditLogEventPayload {
    subscriptionId: string;
}
export interface GetAuditLogEventsRequest {
    organizationName: string;
}
export interface GetAuditLogEventsResponse {
    events: AuditLogEvent[];
}
export declare const AuditLogEvent: {
    $type: "devvit.dev_portal.data_api.admin.audit.AuditLogEvent";
    encode(message: AuditLogEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AuditLogEvent;
    fromJSON(object: any): AuditLogEvent;
    toJSON(message: AuditLogEvent): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        createdAt?: Date | undefined;
        userId?: string | undefined;
        type?: AuditLogEventType | undefined;
        organizationId?: string | undefined;
        dataTokenCreatePayload?: {
            tokenId?: string | undefined;
            expiration?: Date | undefined;
        } | undefined;
        dataTokenRevokePayload?: {
            tokenId?: string | undefined;
        } | undefined;
        dataSubscriptionCreatePayload?: {
            subscriptionId?: string | undefined;
        } | undefined;
        dataSubscriptionUpdatePayload?: {
            subscriptionId?: string | undefined;
        } | undefined;
        dataSubscriptionDeletePayload?: {
            subscriptionId?: string | undefined;
        } | undefined;
    } & {
        id?: string | undefined;
        createdAt?: Date | undefined;
        userId?: string | undefined;
        type?: AuditLogEventType | undefined;
        organizationId?: string | undefined;
        dataTokenCreatePayload?: ({
            tokenId?: string | undefined;
            expiration?: Date | undefined;
        } & {
            tokenId?: string | undefined;
            expiration?: Date | undefined;
        } & { [K in Exclude<keyof I["dataTokenCreatePayload"], "$type" | keyof DataTokenCreateAuditLogEventPayload>]: never; }) | undefined;
        dataTokenRevokePayload?: ({
            tokenId?: string | undefined;
        } & {
            tokenId?: string | undefined;
        } & { [K_1 in Exclude<keyof I["dataTokenRevokePayload"], "$type" | "tokenId">]: never; }) | undefined;
        dataSubscriptionCreatePayload?: ({
            subscriptionId?: string | undefined;
        } & {
            subscriptionId?: string | undefined;
        } & { [K_2 in Exclude<keyof I["dataSubscriptionCreatePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
        dataSubscriptionUpdatePayload?: ({
            subscriptionId?: string | undefined;
        } & {
            subscriptionId?: string | undefined;
        } & { [K_3 in Exclude<keyof I["dataSubscriptionUpdatePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
        dataSubscriptionDeletePayload?: ({
            subscriptionId?: string | undefined;
        } & {
            subscriptionId?: string | undefined;
        } & { [K_4 in Exclude<keyof I["dataSubscriptionDeletePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I, "$type" | keyof AuditLogEvent>]: never; }>(object: I): AuditLogEvent;
};
export declare const DataTokenCreateAuditLogEventPayload: {
    $type: "devvit.dev_portal.data_api.admin.audit.DataTokenCreateAuditLogEventPayload";
    encode(message: DataTokenCreateAuditLogEventPayload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DataTokenCreateAuditLogEventPayload;
    fromJSON(object: any): DataTokenCreateAuditLogEventPayload;
    toJSON(message: DataTokenCreateAuditLogEventPayload): unknown;
    fromPartial<I extends {
        tokenId?: string | undefined;
        expiration?: Date | undefined;
    } & {
        tokenId?: string | undefined;
        expiration?: Date | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof DataTokenCreateAuditLogEventPayload>]: never; }>(object: I): DataTokenCreateAuditLogEventPayload;
};
export declare const DataTokenRevokeAuditLogEventPayload: {
    $type: "devvit.dev_portal.data_api.admin.audit.DataTokenRevokeAuditLogEventPayload";
    encode(message: DataTokenRevokeAuditLogEventPayload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DataTokenRevokeAuditLogEventPayload;
    fromJSON(object: any): DataTokenRevokeAuditLogEventPayload;
    toJSON(message: DataTokenRevokeAuditLogEventPayload): unknown;
    fromPartial<I extends {
        tokenId?: string | undefined;
    } & {
        tokenId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "tokenId">]: never; }>(object: I): DataTokenRevokeAuditLogEventPayload;
};
export declare const DataSubscriptionCreateAuditLogEventPayload: {
    $type: "devvit.dev_portal.data_api.admin.audit.DataSubscriptionCreateAuditLogEventPayload";
    encode(message: DataSubscriptionCreateAuditLogEventPayload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DataSubscriptionCreateAuditLogEventPayload;
    fromJSON(object: any): DataSubscriptionCreateAuditLogEventPayload;
    toJSON(message: DataSubscriptionCreateAuditLogEventPayload): unknown;
    fromPartial<I extends {
        subscriptionId?: string | undefined;
    } & {
        subscriptionId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "subscriptionId">]: never; }>(object: I): DataSubscriptionCreateAuditLogEventPayload;
};
export declare const DataSubscriptionUpdateAuditLogEventPayload: {
    $type: "devvit.dev_portal.data_api.admin.audit.DataSubscriptionUpdateAuditLogEventPayload";
    encode(message: DataSubscriptionUpdateAuditLogEventPayload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DataSubscriptionUpdateAuditLogEventPayload;
    fromJSON(object: any): DataSubscriptionUpdateAuditLogEventPayload;
    toJSON(message: DataSubscriptionUpdateAuditLogEventPayload): unknown;
    fromPartial<I extends {
        subscriptionId?: string | undefined;
    } & {
        subscriptionId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "subscriptionId">]: never; }>(object: I): DataSubscriptionUpdateAuditLogEventPayload;
};
export declare const DataSubscriptionDeleteAuditLogEventPayload: {
    $type: "devvit.dev_portal.data_api.admin.audit.DataSubscriptionDeleteAuditLogEventPayload";
    encode(message: DataSubscriptionDeleteAuditLogEventPayload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DataSubscriptionDeleteAuditLogEventPayload;
    fromJSON(object: any): DataSubscriptionDeleteAuditLogEventPayload;
    toJSON(message: DataSubscriptionDeleteAuditLogEventPayload): unknown;
    fromPartial<I extends {
        subscriptionId?: string | undefined;
    } & {
        subscriptionId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "subscriptionId">]: never; }>(object: I): DataSubscriptionDeleteAuditLogEventPayload;
};
export declare const GetAuditLogEventsRequest: {
    $type: "devvit.dev_portal.data_api.admin.audit.GetAuditLogEventsRequest";
    encode(message: GetAuditLogEventsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetAuditLogEventsRequest;
    fromJSON(object: any): GetAuditLogEventsRequest;
    toJSON(message: GetAuditLogEventsRequest): unknown;
    fromPartial<I extends {
        organizationName?: string | undefined;
    } & {
        organizationName?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "organizationName">]: never; }>(object: I): GetAuditLogEventsRequest;
};
export declare const GetAuditLogEventsResponse: {
    $type: "devvit.dev_portal.data_api.admin.audit.GetAuditLogEventsResponse";
    encode(message: GetAuditLogEventsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetAuditLogEventsResponse;
    fromJSON(object: any): GetAuditLogEventsResponse;
    toJSON(message: GetAuditLogEventsResponse): unknown;
    fromPartial<I extends {
        events?: {
            id?: string | undefined;
            createdAt?: Date | undefined;
            userId?: string | undefined;
            type?: AuditLogEventType | undefined;
            organizationId?: string | undefined;
            dataTokenCreatePayload?: {
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } | undefined;
            dataTokenRevokePayload?: {
                tokenId?: string | undefined;
            } | undefined;
            dataSubscriptionCreatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionUpdatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionDeletePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        events?: ({
            id?: string | undefined;
            createdAt?: Date | undefined;
            userId?: string | undefined;
            type?: AuditLogEventType | undefined;
            organizationId?: string | undefined;
            dataTokenCreatePayload?: {
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } | undefined;
            dataTokenRevokePayload?: {
                tokenId?: string | undefined;
            } | undefined;
            dataSubscriptionCreatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionUpdatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionDeletePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
        }[] & ({
            id?: string | undefined;
            createdAt?: Date | undefined;
            userId?: string | undefined;
            type?: AuditLogEventType | undefined;
            organizationId?: string | undefined;
            dataTokenCreatePayload?: {
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } | undefined;
            dataTokenRevokePayload?: {
                tokenId?: string | undefined;
            } | undefined;
            dataSubscriptionCreatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionUpdatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionDeletePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            createdAt?: Date | undefined;
            userId?: string | undefined;
            type?: AuditLogEventType | undefined;
            organizationId?: string | undefined;
            dataTokenCreatePayload?: ({
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } & {
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } & { [K in Exclude<keyof I["events"][number]["dataTokenCreatePayload"], "$type" | keyof DataTokenCreateAuditLogEventPayload>]: never; }) | undefined;
            dataTokenRevokePayload?: ({
                tokenId?: string | undefined;
            } & {
                tokenId?: string | undefined;
            } & { [K_1 in Exclude<keyof I["events"][number]["dataTokenRevokePayload"], "$type" | "tokenId">]: never; }) | undefined;
            dataSubscriptionCreatePayload?: ({
                subscriptionId?: string | undefined;
            } & {
                subscriptionId?: string | undefined;
            } & { [K_2 in Exclude<keyof I["events"][number]["dataSubscriptionCreatePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
            dataSubscriptionUpdatePayload?: ({
                subscriptionId?: string | undefined;
            } & {
                subscriptionId?: string | undefined;
            } & { [K_3 in Exclude<keyof I["events"][number]["dataSubscriptionUpdatePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
            dataSubscriptionDeletePayload?: ({
                subscriptionId?: string | undefined;
            } & {
                subscriptionId?: string | undefined;
            } & { [K_4 in Exclude<keyof I["events"][number]["dataSubscriptionDeletePayload"], "$type" | "subscriptionId">]: never; }) | undefined;
        } & { [K_5 in Exclude<keyof I["events"][number], "$type" | keyof AuditLogEvent>]: never; })[] & { [K_6 in Exclude<keyof I["events"], "$type" | keyof {
            id?: string | undefined;
            createdAt?: Date | undefined;
            userId?: string | undefined;
            type?: AuditLogEventType | undefined;
            organizationId?: string | undefined;
            dataTokenCreatePayload?: {
                tokenId?: string | undefined;
                expiration?: Date | undefined;
            } | undefined;
            dataTokenRevokePayload?: {
                tokenId?: string | undefined;
            } | undefined;
            dataSubscriptionCreatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionUpdatePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
            dataSubscriptionDeletePayload?: {
                subscriptionId?: string | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_7 in Exclude<keyof I, "$type" | "events">]: never; }>(object: I): GetAuditLogEventsResponse;
};
//# sourceMappingURL=audit.d.ts.map