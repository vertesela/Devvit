/**
 * #firehose_monitor.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { Duration } from '../../../../../../google/protobuf/duration.js';
export interface CreateFirehoseMonitorDataTokenRequest {
    expiresIn?: Duration;
}
export interface GetFirehoseMonitorSubscriptionByNameRequest {
    name: string;
}
export interface GetFirehoseMonitorSubscriptionByNameResponse {
    id: string;
}
export declare const CreateFirehoseMonitorDataTokenRequest: {
    $type: "devvit.dev_portal.internal.data_api.v1alpha.admin.CreateFirehoseMonitorDataTokenRequest";
    encode(message: CreateFirehoseMonitorDataTokenRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateFirehoseMonitorDataTokenRequest;
    fromJSON(object: any): CreateFirehoseMonitorDataTokenRequest;
    toJSON(message: CreateFirehoseMonitorDataTokenRequest): unknown;
    fromPartial<I extends {
        expiresIn?: {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } | undefined;
    } & {
        expiresIn?: ({
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & { [K in Exclude<keyof I["expiresIn"], "$type" | keyof Duration>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | "expiresIn">]: never; }>(object: I): CreateFirehoseMonitorDataTokenRequest;
};
export declare const GetFirehoseMonitorSubscriptionByNameRequest: {
    $type: "devvit.dev_portal.internal.data_api.v1alpha.admin.GetFirehoseMonitorSubscriptionByNameRequest";
    encode(message: GetFirehoseMonitorSubscriptionByNameRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetFirehoseMonitorSubscriptionByNameRequest;
    fromJSON(object: any): GetFirehoseMonitorSubscriptionByNameRequest;
    toJSON(message: GetFirehoseMonitorSubscriptionByNameRequest): unknown;
    fromPartial<I extends {
        name?: string | undefined;
    } & {
        name?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "name">]: never; }>(object: I): GetFirehoseMonitorSubscriptionByNameRequest;
};
export declare const GetFirehoseMonitorSubscriptionByNameResponse: {
    $type: "devvit.dev_portal.internal.data_api.v1alpha.admin.GetFirehoseMonitorSubscriptionByNameResponse";
    encode(message: GetFirehoseMonitorSubscriptionByNameResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetFirehoseMonitorSubscriptionByNameResponse;
    fromJSON(object: any): GetFirehoseMonitorSubscriptionByNameResponse;
    toJSON(message: GetFirehoseMonitorSubscriptionByNameResponse): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "id">]: never; }>(object: I): GetFirehoseMonitorSubscriptionByNameResponse;
};
//# sourceMappingURL=firehose_monitor.d.ts.map