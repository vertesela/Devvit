/**
 * #subreddit.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { CommentContributionSettings, UserFlairRichtext } from './common.js';
export interface Subreddit {
    acceptFollowers?: boolean;
    accountsActiveIsFuzzed?: boolean;
    accountsActive?: number;
    activeUserCount?: number;
    advertiserCategory?: string;
    allOriginalContent?: boolean;
    allowChatPostCreation?: boolean;
    allowDiscovery?: boolean;
    allowGalleries?: boolean;
    allowImages?: boolean;
    allowPolls?: boolean;
    allowPredictionContributors?: boolean;
    allowPredictionsTournament?: boolean;
    allowPredictions?: boolean;
    allowTalks?: boolean;
    allowVideogifs?: boolean;
    allowVideos?: boolean;
    allowedMediaInComments: string[];
    bannerBackgroundColor?: string;
    bannerBackgroundImage?: string;
    bannerImg?: string;
    bannerSize: number[];
    canAssignLinkFlair?: boolean;
    canAssignUserFlair?: boolean;
    coins?: number;
    collapseDeletedComments?: boolean;
    commentContributionSettings?: CommentContributionSettings;
    commentScoreHideMins?: number;
    communityIcon?: string;
    communityReviewed?: boolean;
    contentCategory?: string;
    createdUtc?: number;
    created?: number;
    defaultSet?: boolean;
    description?: string;
    descriptionHtml?: string;
    disableContributorRequests?: boolean;
    displayName?: string;
    displayNamePrefixed?: string;
    emojisCustomSize: number[];
    emojisEnabled?: boolean;
    freeFormReports?: boolean;
    hasMenuWidget?: boolean;
    headerImg?: string;
    headerSize: number[];
    headerTitle?: string;
    hideAds?: boolean;
    iconColor?: string;
    iconImg?: string;
    iconSize: number[];
    id?: string;
    isChatPostFeatureEnabled?: boolean;
    isCrosspostableSubreddit?: boolean;
    isDefaultBanner?: boolean;
    isDefaultIcon?: boolean;
    isEnrolledInNewModmail?: boolean;
    keyColor?: string;
    lang?: string;
    linkFlairEnabled?: boolean;
    linkFlairPosition?: string;
    mobileBannerImage?: string;
    name?: string;
    notificationLevel?: string;
    originalContentTagEnabled?: string;
    over18?: boolean;
    predictionLeaderboardEntryType?: string;
    previousNames: string[];
    primaryColor?: string;
    publicDescription?: string;
    publicDescriptionHtml?: string;
    publicTraffic?: boolean;
    quarantine?: boolean;
    restrictCommenting?: boolean;
    restrictPosting?: boolean;
    shouldArchivePosts?: boolean;
    shouldShowMediaInCommentsSetting?: boolean;
    showMedia?: boolean;
    showMediaPreview?: boolean;
    spoilersEnabled?: boolean;
    submissionType?: string;
    submitLinkLabel?: string;
    submitText?: string;
    submitTextHtml?: string;
    submitTextLabel?: string;
    subredditType?: string;
    subscribers?: number;
    suggestedCommentSort?: string;
    title?: string;
    url?: string;
    userCanFlairInSr?: boolean;
    userFlairBackgroundColor?: string;
    userFlairCssClass?: string;
    userFlairEnabledInSr?: boolean;
    userFlairPosition?: string;
    userFlairRichtext: UserFlairRichtext[];
    userFlairTemplateId?: string;
    userFlairText?: string;
    userFlairTextColor?: string;
    userFlairType?: string;
    userHasFavorited?: boolean;
    userIsBanned?: boolean;
    userIsContributor?: boolean;
    userIsModerator?: boolean;
    userIsSubscriber?: boolean;
    userSrFlairEnabled?: boolean;
    userSrThemeEnabled?: boolean;
    videostreamLinksCount?: number;
    whitelistStatus?: string;
    wikiEnabled?: boolean;
    wls?: number;
    /** PRIVATE - DO NOT SET FOR PUBLIC USE */
    markedSpam?: boolean;
    /** used for post guidance */
    postRequirements?: Subreddit_PostRequirements;
    /** If `true`, the current user may not send messages to moderators */
    userIsMuted: boolean;
}
export interface Subreddit_PostRequirements {
    bodyRestrictionPolicy?: string;
}
export declare const Subreddit: {
    $type: "devvit.reddit.Subreddit";
    encode(message: Subreddit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Subreddit;
    fromJSON(object: any): Subreddit;
    toJSON(message: Subreddit): unknown;
    fromPartial<I extends {
        acceptFollowers?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        accountsActive?: number | undefined;
        activeUserCount?: number | undefined;
        advertiserCategory?: string | undefined;
        allOriginalContent?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        allowImages?: boolean | undefined;
        allowPolls?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
        allowPredictions?: boolean | undefined;
        allowTalks?: boolean | undefined;
        allowVideogifs?: boolean | undefined;
        allowVideos?: boolean | undefined;
        allowedMediaInComments?: string[] | undefined;
        bannerBackgroundColor?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        bannerImg?: string | undefined;
        bannerSize?: number[] | undefined;
        canAssignLinkFlair?: boolean | undefined;
        canAssignUserFlair?: boolean | undefined;
        coins?: number | undefined;
        collapseDeletedComments?: boolean | undefined;
        commentContributionSettings?: {
            allowedMediaTypes?: string[] | undefined;
        } | undefined;
        commentScoreHideMins?: number | undefined;
        communityIcon?: string | undefined;
        communityReviewed?: boolean | undefined;
        contentCategory?: string | undefined;
        createdUtc?: number | undefined;
        created?: number | undefined;
        defaultSet?: boolean | undefined;
        description?: string | undefined;
        descriptionHtml?: string | undefined;
        disableContributorRequests?: boolean | undefined;
        displayName?: string | undefined;
        displayNamePrefixed?: string | undefined;
        emojisCustomSize?: number[] | undefined;
        emojisEnabled?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        headerImg?: string | undefined;
        headerSize?: number[] | undefined;
        headerTitle?: string | undefined;
        hideAds?: boolean | undefined;
        iconColor?: string | undefined;
        iconImg?: string | undefined;
        iconSize?: number[] | undefined;
        id?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        isDefaultBanner?: boolean | undefined;
        isDefaultIcon?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        lang?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        linkFlairPosition?: string | undefined;
        mobileBannerImage?: string | undefined;
        name?: string | undefined;
        notificationLevel?: string | undefined;
        originalContentTagEnabled?: string | undefined;
        over18?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        previousNames?: string[] | undefined;
        primaryColor?: string | undefined;
        publicDescription?: string | undefined;
        publicDescriptionHtml?: string | undefined;
        publicTraffic?: boolean | undefined;
        quarantine?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        restrictPosting?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        showMedia?: boolean | undefined;
        showMediaPreview?: boolean | undefined;
        spoilersEnabled?: boolean | undefined;
        submissionType?: string | undefined;
        submitLinkLabel?: string | undefined;
        submitText?: string | undefined;
        submitTextHtml?: string | undefined;
        submitTextLabel?: string | undefined;
        subredditType?: string | undefined;
        subscribers?: number | undefined;
        suggestedCommentSort?: string | undefined;
        title?: string | undefined;
        url?: string | undefined;
        userCanFlairInSr?: boolean | undefined;
        userFlairBackgroundColor?: string | undefined;
        userFlairCssClass?: string | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        userFlairPosition?: string | undefined;
        userFlairRichtext?: {
            e?: string | undefined;
            t?: string | undefined;
        }[] | undefined;
        userFlairTemplateId?: string | undefined;
        userFlairText?: string | undefined;
        userFlairTextColor?: string | undefined;
        userFlairType?: string | undefined;
        userHasFavorited?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        userIsModerator?: boolean | undefined;
        userIsSubscriber?: boolean | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        videostreamLinksCount?: number | undefined;
        whitelistStatus?: string | undefined;
        wikiEnabled?: boolean | undefined;
        wls?: number | undefined;
        markedSpam?: boolean | undefined;
        postRequirements?: {
            bodyRestrictionPolicy?: string | undefined;
        } | undefined;
        userIsMuted?: boolean | undefined;
    } & {
        acceptFollowers?: boolean | undefined;
        accountsActiveIsFuzzed?: boolean | undefined;
        accountsActive?: number | undefined;
        activeUserCount?: number | undefined;
        advertiserCategory?: string | undefined;
        allOriginalContent?: boolean | undefined;
        allowChatPostCreation?: boolean | undefined;
        allowDiscovery?: boolean | undefined;
        allowGalleries?: boolean | undefined;
        allowImages?: boolean | undefined;
        allowPolls?: boolean | undefined;
        allowPredictionContributors?: boolean | undefined;
        allowPredictionsTournament?: boolean | undefined;
        allowPredictions?: boolean | undefined;
        allowTalks?: boolean | undefined;
        allowVideogifs?: boolean | undefined;
        allowVideos?: boolean | undefined;
        allowedMediaInComments?: (string[] & string[] & { [K in Exclude<keyof I["allowedMediaInComments"], "$type" | keyof string[]>]: never; }) | undefined;
        bannerBackgroundColor?: string | undefined;
        bannerBackgroundImage?: string | undefined;
        bannerImg?: string | undefined;
        bannerSize?: (number[] & number[] & { [K_1 in Exclude<keyof I["bannerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        canAssignLinkFlair?: boolean | undefined;
        canAssignUserFlair?: boolean | undefined;
        coins?: number | undefined;
        collapseDeletedComments?: boolean | undefined;
        commentContributionSettings?: ({
            allowedMediaTypes?: string[] | undefined;
        } & {
            allowedMediaTypes?: (string[] & string[] & { [K_2 in Exclude<keyof I["commentContributionSettings"]["allowedMediaTypes"], "$type" | keyof string[]>]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["commentContributionSettings"], "$type" | "allowedMediaTypes">]: never; }) | undefined;
        commentScoreHideMins?: number | undefined;
        communityIcon?: string | undefined;
        communityReviewed?: boolean | undefined;
        contentCategory?: string | undefined;
        createdUtc?: number | undefined;
        created?: number | undefined;
        defaultSet?: boolean | undefined;
        description?: string | undefined;
        descriptionHtml?: string | undefined;
        disableContributorRequests?: boolean | undefined;
        displayName?: string | undefined;
        displayNamePrefixed?: string | undefined;
        emojisCustomSize?: (number[] & number[] & { [K_4 in Exclude<keyof I["emojisCustomSize"], "$type" | keyof number[]>]: never; }) | undefined;
        emojisEnabled?: boolean | undefined;
        freeFormReports?: boolean | undefined;
        hasMenuWidget?: boolean | undefined;
        headerImg?: string | undefined;
        headerSize?: (number[] & number[] & { [K_5 in Exclude<keyof I["headerSize"], "$type" | keyof number[]>]: never; }) | undefined;
        headerTitle?: string | undefined;
        hideAds?: boolean | undefined;
        iconColor?: string | undefined;
        iconImg?: string | undefined;
        iconSize?: (number[] & number[] & { [K_6 in Exclude<keyof I["iconSize"], "$type" | keyof number[]>]: never; }) | undefined;
        id?: string | undefined;
        isChatPostFeatureEnabled?: boolean | undefined;
        isCrosspostableSubreddit?: boolean | undefined;
        isDefaultBanner?: boolean | undefined;
        isDefaultIcon?: boolean | undefined;
        isEnrolledInNewModmail?: boolean | undefined;
        keyColor?: string | undefined;
        lang?: string | undefined;
        linkFlairEnabled?: boolean | undefined;
        linkFlairPosition?: string | undefined;
        mobileBannerImage?: string | undefined;
        name?: string | undefined;
        notificationLevel?: string | undefined;
        originalContentTagEnabled?: string | undefined;
        over18?: boolean | undefined;
        predictionLeaderboardEntryType?: string | undefined;
        previousNames?: (string[] & string[] & { [K_7 in Exclude<keyof I["previousNames"], "$type" | keyof string[]>]: never; }) | undefined;
        primaryColor?: string | undefined;
        publicDescription?: string | undefined;
        publicDescriptionHtml?: string | undefined;
        publicTraffic?: boolean | undefined;
        quarantine?: boolean | undefined;
        restrictCommenting?: boolean | undefined;
        restrictPosting?: boolean | undefined;
        shouldArchivePosts?: boolean | undefined;
        shouldShowMediaInCommentsSetting?: boolean | undefined;
        showMedia?: boolean | undefined;
        showMediaPreview?: boolean | undefined;
        spoilersEnabled?: boolean | undefined;
        submissionType?: string | undefined;
        submitLinkLabel?: string | undefined;
        submitText?: string | undefined;
        submitTextHtml?: string | undefined;
        submitTextLabel?: string | undefined;
        subredditType?: string | undefined;
        subscribers?: number | undefined;
        suggestedCommentSort?: string | undefined;
        title?: string | undefined;
        url?: string | undefined;
        userCanFlairInSr?: boolean | undefined;
        userFlairBackgroundColor?: string | undefined;
        userFlairCssClass?: string | undefined;
        userFlairEnabledInSr?: boolean | undefined;
        userFlairPosition?: string | undefined;
        userFlairRichtext?: ({
            e?: string | undefined;
            t?: string | undefined;
        }[] & ({
            e?: string | undefined;
            t?: string | undefined;
        } & {
            e?: string | undefined;
            t?: string | undefined;
        } & { [K_8 in Exclude<keyof I["userFlairRichtext"][number], "$type" | keyof UserFlairRichtext>]: never; })[] & { [K_9 in Exclude<keyof I["userFlairRichtext"], "$type" | keyof {
            e?: string | undefined;
            t?: string | undefined;
        }[]>]: never; }) | undefined;
        userFlairTemplateId?: string | undefined;
        userFlairText?: string | undefined;
        userFlairTextColor?: string | undefined;
        userFlairType?: string | undefined;
        userHasFavorited?: boolean | undefined;
        userIsBanned?: boolean | undefined;
        userIsContributor?: boolean | undefined;
        userIsModerator?: boolean | undefined;
        userIsSubscriber?: boolean | undefined;
        userSrFlairEnabled?: boolean | undefined;
        userSrThemeEnabled?: boolean | undefined;
        videostreamLinksCount?: number | undefined;
        whitelistStatus?: string | undefined;
        wikiEnabled?: boolean | undefined;
        wls?: number | undefined;
        markedSpam?: boolean | undefined;
        postRequirements?: ({
            bodyRestrictionPolicy?: string | undefined;
        } & {
            bodyRestrictionPolicy?: string | undefined;
        } & { [K_10 in Exclude<keyof I["postRequirements"], "$type" | "bodyRestrictionPolicy">]: never; }) | undefined;
        userIsMuted?: boolean | undefined;
    } & { [K_11 in Exclude<keyof I, "$type" | keyof Subreddit>]: never; }>(object: I): Subreddit;
};
export declare const Subreddit_PostRequirements: {
    $type: "devvit.reddit.Subreddit.PostRequirements";
    encode(message: Subreddit_PostRequirements, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Subreddit_PostRequirements;
    fromJSON(object: any): Subreddit_PostRequirements;
    toJSON(message: Subreddit_PostRequirements): unknown;
    fromPartial<I extends {
        bodyRestrictionPolicy?: string | undefined;
    } & {
        bodyRestrictionPolicy?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "bodyRestrictionPolicy">]: never; }>(object: I): Subreddit_PostRequirements;
};
//# sourceMappingURL=subreddit.d.ts.map