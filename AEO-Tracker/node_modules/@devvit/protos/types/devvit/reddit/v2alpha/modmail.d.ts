/**
 * #modmail.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { SubredditV2 } from './subredditv2.js';
import { UserV2 } from './userv2.js';
export interface ModMail {
    /** author of the message */
    messageAuthor?: UserV2;
    /** message creation timestamp */
    createdAt?: Date;
    /**
     * what type of user is the message author participating as:
     * moderator - as a mod of the owning subreddit
     * participant_user - as a non-mod user
     * participant_sr - as a mod of the participant subreddit (see conversation_type field)
     */
    messageAuthorType: string;
    /** state of the conversation: new, in-progress, archived */
    conversationState: string;
    /** type of conversation: internal (mod discussion), sr_user (between a subreddit and user), sr_sr (between two subreddits) */
    conversationType: string;
    /** is the conversation auto generated? (from automod, u/reddit etc) */
    isAutoGenerated: boolean;
    /** subreddit owning the modmail conversation */
    conversationSubreddit?: SubredditV2;
    /** the subreddit that the modmail is sent to or nil */
    destinationSubreddit?: SubredditV2;
    /** Conversation ID (base36 encoded string, does not have a thing-type prefix) */
    conversationId: string;
    /** Message ID (base36 encoded string, does not have a thing-type prefix) */
    messageId: string;
}
export declare const ModMail: {
    $type: "devvit.reddit.v2alpha.ModMail";
    encode(message: ModMail, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ModMail;
    fromJSON(object: any): ModMail;
    toJSON(message: ModMail): unknown;
    fromPartial<I extends {
        messageAuthor?: {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } | undefined;
        createdAt?: Date | undefined;
        messageAuthorType?: string | undefined;
        conversationState?: string | undefined;
        conversationType?: string | undefined;
        isAutoGenerated?: boolean | undefined;
        conversationSubreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        destinationSubreddit?: {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } | undefined;
        conversationId?: string | undefined;
        messageId?: string | undefined;
    } & {
        messageAuthor?: ({
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } | undefined;
            karma?: number | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            isGold?: boolean | undefined;
            snoovatarImage?: string | undefined;
            url?: string | undefined;
            spam?: boolean | undefined;
            banned?: boolean | undefined;
            flair?: ({
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & {
                userId?: string | undefined;
                subredditId?: string | undefined;
                text?: string | undefined;
                cssClass?: string | undefined;
                templateId?: string | undefined;
                textColor?: string | undefined;
                backgroundColor?: string | undefined;
                enabled?: boolean | undefined;
            } & { [K in Exclude<keyof I["messageAuthor"]["flair"], "$type" | keyof import("./flair.js").UserFlairV2>]: never; }) | undefined;
            karma?: number | undefined;
        } & { [K_1 in Exclude<keyof I["messageAuthor"], "$type" | keyof UserV2>]: never; }) | undefined;
        createdAt?: Date | undefined;
        messageAuthorType?: string | undefined;
        conversationState?: string | undefined;
        conversationType?: string | undefined;
        isAutoGenerated?: boolean | undefined;
        conversationSubreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_2 in Exclude<keyof I["conversationSubreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_3 in Exclude<keyof I["conversationSubreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        destinationSubreddit?: ({
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: string[] | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            nsfw?: boolean | undefined;
            type?: import("./subredditv2.js").SubredditType | undefined;
            spam?: boolean | undefined;
            quarantined?: boolean | undefined;
            topics?: (string[] & string[] & { [K_4 in Exclude<keyof I["destinationSubreddit"]["topics"], "$type" | keyof string[]>]: never; }) | undefined;
            rating?: import("./subredditv2.js").SubredditRating | undefined;
            subscribersCount?: number | undefined;
            permalink?: string | undefined;
        } & { [K_5 in Exclude<keyof I["destinationSubreddit"], "$type" | keyof SubredditV2>]: never; }) | undefined;
        conversationId?: string | undefined;
        messageId?: string | undefined;
    } & { [K_6 in Exclude<keyof I, "$type" | keyof ModMail>]: never; }>(object: I): ModMail;
};
//# sourceMappingURL=modmail.d.ts.map