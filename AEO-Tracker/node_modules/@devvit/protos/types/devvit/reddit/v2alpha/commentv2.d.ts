/**
 * #commentv2.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
export interface CommentV2 {
    id: string;
    parentId: string;
    body: string;
    author: string;
    numReports: number;
    collapsedBecauseCrowdControl: boolean;
    spam: boolean;
    deleted: boolean;
    createdAt: number;
    upvotes: number;
    downvotes: number;
    languageCode: string;
    lastModifiedAt: number;
    gilded: boolean;
    score: number;
    permalink: string;
    hasMedia: boolean;
    postId: string;
    subredditId: string;
}
export declare const CommentV2: {
    $type: "devvit.reddit.v2alpha.CommentV2";
    encode(message: CommentV2, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentV2;
    fromJSON(object: any): CommentV2;
    toJSON(message: CommentV2): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        parentId?: string | undefined;
        body?: string | undefined;
        author?: string | undefined;
        numReports?: number | undefined;
        collapsedBecauseCrowdControl?: boolean | undefined;
        spam?: boolean | undefined;
        deleted?: boolean | undefined;
        createdAt?: number | undefined;
        upvotes?: number | undefined;
        downvotes?: number | undefined;
        languageCode?: string | undefined;
        lastModifiedAt?: number | undefined;
        gilded?: boolean | undefined;
        score?: number | undefined;
        permalink?: string | undefined;
        hasMedia?: boolean | undefined;
        postId?: string | undefined;
        subredditId?: string | undefined;
    } & {
        id?: string | undefined;
        parentId?: string | undefined;
        body?: string | undefined;
        author?: string | undefined;
        numReports?: number | undefined;
        collapsedBecauseCrowdControl?: boolean | undefined;
        spam?: boolean | undefined;
        deleted?: boolean | undefined;
        createdAt?: number | undefined;
        upvotes?: number | undefined;
        downvotes?: number | undefined;
        languageCode?: string | undefined;
        lastModifiedAt?: number | undefined;
        gilded?: boolean | undefined;
        score?: number | undefined;
        permalink?: string | undefined;
        hasMedia?: boolean | undefined;
        postId?: string | undefined;
        subredditId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof CommentV2>]: never; }>(object: I): CommentV2;
};
//# sourceMappingURL=commentv2.d.ts.map