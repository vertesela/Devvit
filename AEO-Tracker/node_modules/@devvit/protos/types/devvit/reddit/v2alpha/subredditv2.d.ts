/**
 * #subredditv2.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
export declare enum SubredditType {
    ARCHIVED = 0,
    EMPLOYEES_ONLY = 1,
    GOLD_ONLY = 2,
    GOLD_RESTRICTED = 3,
    PRIVATE = 4,
    PUBLIC = 5,
    RESTRICTED = 6,
    USER = 7,
    UNRECOGNIZED = -1
}
export declare function subredditTypeFromJSON(object: any): SubredditType;
export declare function subredditTypeToJSON(object: SubredditType): number;
/** used with data-api */
export declare enum SubredditRating {
    UNKNOWN_SUBREDDIT_RATING = 0,
    /** E - everyone */
    E = 1,
    /** M1 - mature 1 */
    M1 = 2,
    /** M2 - mature 2 */
    M2 = 3,
    /** D - high-risk drug use */
    D = 4,
    /** V - violence & gore */
    V = 5,
    /** X - sexually explicit */
    X = 6,
    UNRECOGNIZED = -1
}
export declare function subredditRatingFromJSON(object: any): SubredditRating;
export declare function subredditRatingToJSON(object: SubredditRating): number;
export interface SubredditV2 {
    id: string;
    name: string;
    nsfw: boolean;
    type: SubredditType;
    spam: boolean;
    quarantined: boolean;
    topics: string[];
    rating: SubredditRating;
    subscribersCount: number;
    permalink: string;
}
export declare const SubredditV2: {
    $type: "devvit.reddit.v2alpha.SubredditV2";
    encode(message: SubredditV2, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubredditV2;
    fromJSON(object: any): SubredditV2;
    toJSON(message: SubredditV2): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        name?: string | undefined;
        nsfw?: boolean | undefined;
        type?: SubredditType | undefined;
        spam?: boolean | undefined;
        quarantined?: boolean | undefined;
        topics?: string[] | undefined;
        rating?: SubredditRating | undefined;
        subscribersCount?: number | undefined;
        permalink?: string | undefined;
    } & {
        id?: string | undefined;
        name?: string | undefined;
        nsfw?: boolean | undefined;
        type?: SubredditType | undefined;
        spam?: boolean | undefined;
        quarantined?: boolean | undefined;
        topics?: (string[] & string[] & { [K in Exclude<keyof I["topics"], "$type" | keyof string[]>]: never; }) | undefined;
        rating?: SubredditRating | undefined;
        subscribersCount?: number | undefined;
        permalink?: string | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof SubredditV2>]: never; }>(object: I): SubredditV2;
};
//# sourceMappingURL=subredditv2.d.ts.map