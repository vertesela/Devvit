/**
 * #custom_post.ts
 *
 * @packageDocumentation
 */
import { Metadata, MethodDefinition } from "@lib/Types.js";
import _m0 from 'protobufjs/minimal.js';
import { BlockRenderRequest, BlockRenderResponse } from '../../../ui/block_kit/v1beta/rendering.js';
import { UIRequest, UIResponse } from '../../../ui/block_kit/v1beta/ui.js';
import { Effect } from '../../../ui/effects/v1alpha/effect.js';
/**
 * **DO NOT EDIT**
 *
 * This message is deprecated and should be fixed in time to maintain backwards compatability.
 *
 * @deprecated
 */
export interface RenderPostRequest {
    /** Stateful data received from a previous response */
    state?: {
        [key: string]: any;
    };
    /** Render the post with Blocks */
    blocks?: BlockRenderRequest | undefined;
}
/**
 * **DO NOT EDIT**
 *
 * This message is deprecated and should be fixed in time to maintain backwards compatability.
 *
 * @deprecated
 */
export interface RenderPostResponse {
    /** Stateful data to send back to your app with events */
    state?: {
        [key: string]: any;
    };
    /** Optional list of Effects to execute on the client */
    effects: Effect[];
    /** Blocks UI rendering of the post */
    blocks?: BlockRenderResponse | undefined;
}
export declare const RenderPostRequest: {
    $type: "devvit.reddit.custom_post.v1alpha.RenderPostRequest";
    encode(message: RenderPostRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RenderPostRequest;
    fromJSON(object: any): RenderPostRequest;
    toJSON(message: RenderPostRequest): unknown;
    fromPartial<I extends {
        state?: {
            [x: string]: any;
        } | undefined;
        blocks?: {
            type?: import("../../../../../index.js").BlockRenderEventType | undefined;
            id?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } | undefined;
    } & {
        state?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["state"], string | number>]: never; }) | undefined;
        blocks?: ({
            type?: import("../../../../../index.js").BlockRenderEventType | undefined;
            id?: string | undefined;
            data?: {
                [x: string]: any;
            } | undefined;
        } & {
            type?: import("../../../../../index.js").BlockRenderEventType | undefined;
            id?: string | undefined;
            data?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K_1 in Exclude<keyof I["blocks"]["data"], string | number>]: never; }) | undefined;
        } & { [K_2 in Exclude<keyof I["blocks"], "$type" | keyof BlockRenderRequest>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof RenderPostRequest>]: never; }>(object: I): RenderPostRequest;
};
export declare const RenderPostResponse: {
    $type: "devvit.reddit.custom_post.v1alpha.RenderPostResponse";
    encode(message: RenderPostResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RenderPostResponse;
    fromJSON(object: any): RenderPostResponse;
    toJSON(message: RenderPostResponse): unknown;
    fromPartial<I extends {
        state?: {
            [x: string]: any;
        } | undefined;
        effects?: {
            realtimeSubscriptions?: {
                subscriptionIds?: string[] | undefined;
            } | undefined;
            rerenderUi?: {
                delaySeconds?: number | undefined;
            } | undefined;
            reloadPart?: {
                subreddit?: {
                    subredditId?: string | undefined;
                } | undefined;
                post?: {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } | undefined;
                comment?: {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } | undefined;
            } | undefined;
            showForm?: {
                form?: {
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } | undefined;
            } | undefined;
            showToast?: {
                toast?: {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            navigateToUrl?: {
                url?: string | undefined;
                target?: string | undefined;
            } | undefined;
            sendEvent?: {
                event?: {
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } | undefined;
            } | undefined;
            type?: import("../../../ui/effects/v1alpha/effect.js").EffectType | undefined;
        }[] | undefined;
        blocks?: {
            ui?: {
                type?: import("../../../../../index.js").BlockType | undefined;
                size?: {
                    grow?: boolean | undefined;
                    width?: number | undefined;
                    widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                    height?: number | undefined;
                    heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                } | undefined;
                sizes?: {
                    grow?: boolean | undefined;
                    width?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                    height?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                config?: {
                    rootConfig?: {
                        children?: any[] | undefined;
                        height?: number | undefined;
                    } | undefined;
                    stackConfig?: {
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: any[] | undefined;
                        reverse?: boolean | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    textConfig?: {
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } | undefined;
                    buttonConfig?: {
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    imageConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } | undefined;
                    spacerConfig?: {
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } | undefined;
                    iconConfig?: {
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    avatarConfig?: {
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } | undefined;
                    fullsnooConfig?: {
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } | undefined;
                    animationConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } | undefined;
                    webviewConfig?: {
                        url?: string | undefined;
                    } | undefined;
                } | undefined;
                actions?: {
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
    } & {
        state?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["state"], string | number>]: never; }) | undefined;
        effects?: ({
            realtimeSubscriptions?: {
                subscriptionIds?: string[] | undefined;
            } | undefined;
            rerenderUi?: {
                delaySeconds?: number | undefined;
            } | undefined;
            reloadPart?: {
                subreddit?: {
                    subredditId?: string | undefined;
                } | undefined;
                post?: {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } | undefined;
                comment?: {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } | undefined;
            } | undefined;
            showForm?: {
                form?: {
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } | undefined;
            } | undefined;
            showToast?: {
                toast?: {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            navigateToUrl?: {
                url?: string | undefined;
                target?: string | undefined;
            } | undefined;
            sendEvent?: {
                event?: {
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } | undefined;
            } | undefined;
            type?: import("../../../ui/effects/v1alpha/effect.js").EffectType | undefined;
        }[] & ({
            realtimeSubscriptions?: {
                subscriptionIds?: string[] | undefined;
            } | undefined;
            rerenderUi?: {
                delaySeconds?: number | undefined;
            } | undefined;
            reloadPart?: {
                subreddit?: {
                    subredditId?: string | undefined;
                } | undefined;
                post?: {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } | undefined;
                comment?: {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } | undefined;
            } | undefined;
            showForm?: {
                form?: {
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } | undefined;
            } | undefined;
            showToast?: {
                toast?: {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            navigateToUrl?: {
                url?: string | undefined;
                target?: string | undefined;
            } | undefined;
            sendEvent?: {
                event?: {
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } | undefined;
            } | undefined;
            type?: import("../../../ui/effects/v1alpha/effect.js").EffectType | undefined;
        } & {
            realtimeSubscriptions?: ({
                subscriptionIds?: string[] | undefined;
            } & {
                subscriptionIds?: (string[] & string[] & { [K_1 in Exclude<keyof I["effects"][number]["realtimeSubscriptions"]["subscriptionIds"], "$type" | keyof string[]>]: never; }) | undefined;
            } & { [K_2 in Exclude<keyof I["effects"][number]["realtimeSubscriptions"], "$type" | "subscriptionIds">]: never; }) | undefined;
            rerenderUi?: ({
                delaySeconds?: number | undefined;
            } & {
                delaySeconds?: number | undefined;
            } & { [K_3 in Exclude<keyof I["effects"][number]["rerenderUi"], "$type" | "delaySeconds">]: never; }) | undefined;
            reloadPart?: ({
                subreddit?: {
                    subredditId?: string | undefined;
                } | undefined;
                post?: {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } | undefined;
                comment?: {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } | undefined;
            } & {
                subreddit?: ({
                    subredditId?: string | undefined;
                } & {
                    subredditId?: string | undefined;
                } & { [K_4 in Exclude<keyof I["effects"][number]["reloadPart"]["subreddit"], "$type" | "subredditId">]: never; }) | undefined;
                post?: ({
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } & {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } & { [K_5 in Exclude<keyof I["effects"][number]["reloadPart"]["post"], "$type" | keyof import("../../../../../index.js").ReloadPartEffect_Post>]: never; }) | undefined;
                comment?: ({
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } & {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } & { [K_6 in Exclude<keyof I["effects"][number]["reloadPart"]["comment"], "$type" | keyof import("../../../../../index.js").ReloadPartEffect_Comment>]: never; }) | undefined;
            } & { [K_7 in Exclude<keyof I["effects"][number]["reloadPart"], "$type" | keyof import("../../../../../index.js").ReloadPartEffect>]: never; }) | undefined;
            showForm?: ({
                form?: {
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } | undefined;
            } & {
                form?: ({
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } & {
                    fields?: ({
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] & ({
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    } & {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: ({
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } & {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: ({
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: {
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: any | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[] | undefined;
                            } & {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: ({
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[] & ({
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                } & {
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: ({
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        items?: {
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: any | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[] | undefined;
                                    } & {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        items?: ({
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[] & ({
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        } & {
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: ({
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                items?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: any | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[] | undefined;
                                            } & {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                items?: ({
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[] & ({
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } & any & { [K_8 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_9 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                }[]>]: never; }) | undefined;
                                            } & { [K_10 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                            selectionValue?: ({
                                                values?: string[] | undefined;
                                            } & {
                                                values?: (string[] & string[] & { [K_11 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                            } & { [K_12 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                            groupValue?: ({} & {} & { [K_13 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                        } & { [K_14 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_15 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            isSecret?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            numberValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            listValue?: {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                items?: any[] | undefined;
                                            } | undefined;
                                            selectionValue?: {
                                                values?: string[] | undefined;
                                            } | undefined;
                                            groupValue?: {} | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_16 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                    selectionValue?: ({
                                        values?: string[] | undefined;
                                    } & {
                                        values?: (string[] & string[] & { [K_17 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                    } & { [K_18 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                    groupValue?: ({} & {} & { [K_19 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                } & { [K_20 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_21 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"]["items"], "$type" | keyof {
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    isSecret?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    numberValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    listValue?: {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        items?: any[] | undefined;
                                    } | undefined;
                                    selectionValue?: {
                                        values?: string[] | undefined;
                                    } | undefined;
                                    groupValue?: {} | undefined;
                                }[]>]: never; }) | undefined;
                            } & { [K_22 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                            selectionValue?: ({
                                values?: string[] | undefined;
                            } & {
                                values?: (string[] & string[] & { [K_23 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                            } & { [K_24 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                            groupValue?: ({} & {} & { [K_25 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"]["groupValue"], "$type">]: never; }) | undefined;
                        } & { [K_26 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["defaultValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; }) | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: ({
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: {
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: any | undefined;
                                    isSecret?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                        } & {
                            stringConfig?: ({
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } & {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } & { [K_27 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                            paragraphConfig?: ({
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } & {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } & { [K_28 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                            numberConfig?: ({
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } & { [K_29 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                            booleanConfig?: ({} & {} & { [K_30 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                            listConfig?: ({
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: {
                                    stringConfig?: {
                                        minLength?: number | undefined;
                                        maxLength?: number | undefined;
                                        placeholder?: string | undefined;
                                    } | undefined;
                                    paragraphConfig?: {
                                        maxCharacters?: number | undefined;
                                        lineHeight?: number | undefined;
                                        placeholder?: string | undefined;
                                    } | undefined;
                                    numberConfig?: {
                                        step?: number | undefined;
                                        min?: number | undefined;
                                        max?: number | undefined;
                                    } | undefined;
                                    booleanConfig?: {} | undefined;
                                    listConfig?: any | undefined;
                                    selectionConfig?: {
                                        choices?: {
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                        multiSelect?: boolean | undefined;
                                        minSelections?: number | undefined;
                                        maxSelections?: number | undefined;
                                        renderAsList?: boolean | undefined;
                                    } | undefined;
                                    groupConfig?: {
                                        fields?: {
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: any | undefined;
                                            isSecret?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                } | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } & {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: ({
                                    stringConfig?: {
                                        minLength?: number | undefined;
                                        maxLength?: number | undefined;
                                        placeholder?: string | undefined;
                                    } | undefined;
                                    paragraphConfig?: {
                                        maxCharacters?: number | undefined;
                                        lineHeight?: number | undefined;
                                        placeholder?: string | undefined;
                                    } | undefined;
                                    numberConfig?: {
                                        step?: number | undefined;
                                        min?: number | undefined;
                                        max?: number | undefined;
                                    } | undefined;
                                    booleanConfig?: {} | undefined;
                                    listConfig?: {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        itemConfig?: any | undefined;
                                        minEntries?: number | undefined;
                                        maxEntries?: number | undefined;
                                        entryLabel?: string | undefined;
                                    } | undefined;
                                    selectionConfig?: {
                                        choices?: {
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                        multiSelect?: boolean | undefined;
                                        minSelections?: number | undefined;
                                        maxSelections?: number | undefined;
                                        renderAsList?: boolean | undefined;
                                    } | undefined;
                                    groupConfig?: {
                                        fields?: {
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: any | undefined;
                                            isSecret?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                } & {
                                    stringConfig?: ({
                                        minLength?: number | undefined;
                                        maxLength?: number | undefined;
                                        placeholder?: string | undefined;
                                    } & {
                                        minLength?: number | undefined;
                                        maxLength?: number | undefined;
                                        placeholder?: string | undefined;
                                    } & { [K_31 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                                    paragraphConfig?: ({
                                        maxCharacters?: number | undefined;
                                        lineHeight?: number | undefined;
                                        placeholder?: string | undefined;
                                    } & {
                                        maxCharacters?: number | undefined;
                                        lineHeight?: number | undefined;
                                        placeholder?: string | undefined;
                                    } & { [K_32 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                                    numberConfig?: ({
                                        step?: number | undefined;
                                        min?: number | undefined;
                                        max?: number | undefined;
                                    } & {
                                        step?: number | undefined;
                                        min?: number | undefined;
                                        max?: number | undefined;
                                    } & { [K_33 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                                    booleanConfig?: ({} & {} & { [K_34 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                                    listConfig?: ({
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        itemConfig?: {
                                            stringConfig?: {
                                                minLength?: number | undefined;
                                                maxLength?: number | undefined;
                                                placeholder?: string | undefined;
                                            } | undefined;
                                            paragraphConfig?: {
                                                maxCharacters?: number | undefined;
                                                lineHeight?: number | undefined;
                                                placeholder?: string | undefined;
                                            } | undefined;
                                            numberConfig?: {
                                                step?: number | undefined;
                                                min?: number | undefined;
                                                max?: number | undefined;
                                            } | undefined;
                                            booleanConfig?: {} | undefined;
                                            listConfig?: any | undefined;
                                            selectionConfig?: {
                                                choices?: {
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                                multiSelect?: boolean | undefined;
                                                minSelections?: number | undefined;
                                                maxSelections?: number | undefined;
                                                renderAsList?: boolean | undefined;
                                            } | undefined;
                                            groupConfig?: {
                                                fields?: {
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: any | undefined;
                                                    isSecret?: boolean | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                        } | undefined;
                                        minEntries?: number | undefined;
                                        maxEntries?: number | undefined;
                                        entryLabel?: string | undefined;
                                    } & {
                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                        itemConfig?: ({
                                            stringConfig?: {
                                                minLength?: number | undefined;
                                                maxLength?: number | undefined;
                                                placeholder?: string | undefined;
                                            } | undefined;
                                            paragraphConfig?: {
                                                maxCharacters?: number | undefined;
                                                lineHeight?: number | undefined;
                                                placeholder?: string | undefined;
                                            } | undefined;
                                            numberConfig?: {
                                                step?: number | undefined;
                                                min?: number | undefined;
                                                max?: number | undefined;
                                            } | undefined;
                                            booleanConfig?: {} | undefined;
                                            listConfig?: {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                itemConfig?: any | undefined;
                                                minEntries?: number | undefined;
                                                maxEntries?: number | undefined;
                                                entryLabel?: string | undefined;
                                            } | undefined;
                                            selectionConfig?: {
                                                choices?: {
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                                multiSelect?: boolean | undefined;
                                                minSelections?: number | undefined;
                                                maxSelections?: number | undefined;
                                                renderAsList?: boolean | undefined;
                                            } | undefined;
                                            groupConfig?: {
                                                fields?: {
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: any | undefined;
                                                    isSecret?: boolean | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                        } & {
                                            stringConfig?: ({
                                                minLength?: number | undefined;
                                                maxLength?: number | undefined;
                                                placeholder?: string | undefined;
                                            } & {
                                                minLength?: number | undefined;
                                                maxLength?: number | undefined;
                                                placeholder?: string | undefined;
                                            } & { [K_35 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                                            paragraphConfig?: ({
                                                maxCharacters?: number | undefined;
                                                lineHeight?: number | undefined;
                                                placeholder?: string | undefined;
                                            } & {
                                                maxCharacters?: number | undefined;
                                                lineHeight?: number | undefined;
                                                placeholder?: string | undefined;
                                            } & { [K_36 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                                            numberConfig?: ({
                                                step?: number | undefined;
                                                min?: number | undefined;
                                                max?: number | undefined;
                                            } & {
                                                step?: number | undefined;
                                                min?: number | undefined;
                                                max?: number | undefined;
                                            } & { [K_37 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                                            booleanConfig?: ({} & {} & { [K_38 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                                            listConfig?: ({
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                itemConfig?: {
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: any | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: {
                                                            fieldId?: string | undefined;
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            label?: string | undefined;
                                                            helpText?: string | undefined;
                                                            defaultValue?: {
                                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                isSecret?: boolean | undefined;
                                                                stringValue?: string | undefined;
                                                                numberValue?: number | undefined;
                                                                boolValue?: boolean | undefined;
                                                                listValue?: {
                                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                    items?: any[] | undefined;
                                                                } | undefined;
                                                                selectionValue?: {
                                                                    values?: string[] | undefined;
                                                                } | undefined;
                                                                groupValue?: {} | undefined;
                                                            } | undefined;
                                                            required?: boolean | undefined;
                                                            disabled?: boolean | undefined;
                                                            fieldConfig?: any | undefined;
                                                            isSecret?: boolean | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                minEntries?: number | undefined;
                                                maxEntries?: number | undefined;
                                                entryLabel?: string | undefined;
                                            } & {
                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                itemConfig?: ({
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: {
                                                            fieldId?: string | undefined;
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            label?: string | undefined;
                                                            helpText?: string | undefined;
                                                            defaultValue?: {
                                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                isSecret?: boolean | undefined;
                                                                stringValue?: string | undefined;
                                                                numberValue?: number | undefined;
                                                                boolValue?: boolean | undefined;
                                                                listValue?: {
                                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                    items?: any[] | undefined;
                                                                } | undefined;
                                                                selectionValue?: {
                                                                    values?: string[] | undefined;
                                                                } | undefined;
                                                                groupValue?: {} | undefined;
                                                            } | undefined;
                                                            required?: boolean | undefined;
                                                            disabled?: boolean | undefined;
                                                            fieldConfig?: any | undefined;
                                                            isSecret?: boolean | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                } & any & { [K_39 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                                minEntries?: number | undefined;
                                                maxEntries?: number | undefined;
                                                entryLabel?: string | undefined;
                                            } & { [K_40 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                                            selectionConfig?: ({
                                                choices?: {
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                                multiSelect?: boolean | undefined;
                                                minSelections?: number | undefined;
                                                maxSelections?: number | undefined;
                                                renderAsList?: boolean | undefined;
                                            } & {
                                                choices?: ({
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                }[] & ({
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                } & any & { [K_41 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["selectionConfig"]["choices"][number], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection_Item>]: never; })[] & { [K_42 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["selectionConfig"]["choices"], "$type" | keyof {
                                                    label?: string | undefined;
                                                    value?: string | undefined;
                                                }[]>]: never; }) | undefined;
                                                multiSelect?: boolean | undefined;
                                                minSelections?: number | undefined;
                                                maxSelections?: number | undefined;
                                                renderAsList?: boolean | undefined;
                                            } & { [K_43 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                                            groupConfig?: ({
                                                fields?: {
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            itemConfig?: any | undefined;
                                                            minEntries?: number | undefined;
                                                            maxEntries?: number | undefined;
                                                            entryLabel?: string | undefined;
                                                        } | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: any | undefined;
                                                    } | undefined;
                                                    isSecret?: boolean | undefined;
                                                }[] | undefined;
                                            } & {
                                                fields?: ({
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            itemConfig?: any | undefined;
                                                            minEntries?: number | undefined;
                                                            maxEntries?: number | undefined;
                                                            entryLabel?: string | undefined;
                                                        } | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: {
                                                            fields?: any[] | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    isSecret?: boolean | undefined;
                                                }[] & ({
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            itemConfig?: any | undefined;
                                                            minEntries?: number | undefined;
                                                            maxEntries?: number | undefined;
                                                            entryLabel?: string | undefined;
                                                        } | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: {
                                                            fields?: any[] | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    isSecret?: boolean | undefined;
                                                } & any & { [K_44 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number], "$type" | keyof import("../../../../../index.js").FormField>]: never; })[] & { [K_45 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"], "$type" | keyof {
                                                    fieldId?: string | undefined;
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    label?: string | undefined;
                                                    helpText?: string | undefined;
                                                    defaultValue?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            items?: any[] | undefined;
                                                        } | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    } | undefined;
                                                    required?: boolean | undefined;
                                                    disabled?: boolean | undefined;
                                                    fieldConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: {
                                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            itemConfig?: any | undefined;
                                                            minEntries?: number | undefined;
                                                            maxEntries?: number | undefined;
                                                            entryLabel?: string | undefined;
                                                        } | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: {
                                                            fields?: any[] | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    isSecret?: boolean | undefined;
                                                }[]>]: never; }) | undefined;
                                            } & { [K_46 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                                        } & { [K_47 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"]["itemConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                        minEntries?: number | undefined;
                                        maxEntries?: number | undefined;
                                        entryLabel?: string | undefined;
                                    } & { [K_48 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                                    selectionConfig?: ({
                                        choices?: {
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                        multiSelect?: boolean | undefined;
                                        minSelections?: number | undefined;
                                        maxSelections?: number | undefined;
                                        renderAsList?: boolean | undefined;
                                    } & {
                                        choices?: ({
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        }[] & ({
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        } & {
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        } & { [K_49 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["selectionConfig"]["choices"][number], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection_Item>]: never; })[] & { [K_50 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["selectionConfig"]["choices"], "$type" | keyof {
                                            label?: string | undefined;
                                            value?: string | undefined;
                                        }[]>]: never; }) | undefined;
                                        multiSelect?: boolean | undefined;
                                        minSelections?: number | undefined;
                                        maxSelections?: number | undefined;
                                        renderAsList?: boolean | undefined;
                                    } & { [K_51 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                                    groupConfig?: ({
                                        fields?: {
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: {
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: any | undefined;
                                            } | undefined;
                                            isSecret?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        fields?: ({
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: {
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: any[] | undefined;
                                                } | undefined;
                                            } | undefined;
                                            isSecret?: boolean | undefined;
                                        }[] & ({
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: {
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: any[] | undefined;
                                                } | undefined;
                                            } | undefined;
                                            isSecret?: boolean | undefined;
                                        } & {
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: ({
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } & {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: ({
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: any | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_52 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                                selectionValue?: ({
                                                    values?: string[] | undefined;
                                                } & any & { [K_53 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["defaultValue"]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                                groupValue?: ({} & any & { [K_54 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["defaultValue"]["groupValue"], "$type">]: never; }) | undefined;
                                            } & { [K_55 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["defaultValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; }) | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: ({
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: {
                                                        fieldId?: string | undefined;
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        label?: string | undefined;
                                                        helpText?: string | undefined;
                                                        defaultValue?: {
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            isSecret?: boolean | undefined;
                                                            stringValue?: string | undefined;
                                                            numberValue?: number | undefined;
                                                            boolValue?: boolean | undefined;
                                                            listValue?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                items?: any[] | undefined;
                                                            } | undefined;
                                                            selectionValue?: {
                                                                values?: string[] | undefined;
                                                            } | undefined;
                                                            groupValue?: {} | undefined;
                                                        } | undefined;
                                                        required?: boolean | undefined;
                                                        disabled?: boolean | undefined;
                                                        fieldConfig?: any | undefined;
                                                        isSecret?: boolean | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                            } & {
                                                stringConfig?: ({
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } & any & { [K_56 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                                                paragraphConfig?: ({
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } & any & { [K_57 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                                                numberConfig?: ({
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } & any & { [K_58 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                                                booleanConfig?: ({} & any & { [K_59 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                                                listConfig?: ({
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: any | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: {
                                                            fields?: {
                                                                fieldId?: string | undefined;
                                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                label?: string | undefined;
                                                                helpText?: string | undefined;
                                                                defaultValue?: {
                                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                    isSecret?: boolean | undefined;
                                                                    stringValue?: string | undefined;
                                                                    numberValue?: number | undefined;
                                                                    boolValue?: boolean | undefined;
                                                                    listValue?: {
                                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                        items?: any[] | undefined;
                                                                    } | undefined;
                                                                    selectionValue?: {
                                                                        values?: string[] | undefined;
                                                                    } | undefined;
                                                                    groupValue?: {} | undefined;
                                                                } | undefined;
                                                                required?: boolean | undefined;
                                                                disabled?: boolean | undefined;
                                                                fieldConfig?: any | undefined;
                                                                isSecret?: boolean | undefined;
                                                            }[] | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } & any & { [K_60 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                                                selectionConfig?: ({
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } & any & { [K_61 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                                                groupConfig?: ({
                                                    fields?: {
                                                        fieldId?: string | undefined;
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        label?: string | undefined;
                                                        helpText?: string | undefined;
                                                        defaultValue?: {
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            isSecret?: boolean | undefined;
                                                            stringValue?: string | undefined;
                                                            numberValue?: number | undefined;
                                                            boolValue?: boolean | undefined;
                                                            listValue?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                items?: any[] | undefined;
                                                            } | undefined;
                                                            selectionValue?: {
                                                                values?: string[] | undefined;
                                                            } | undefined;
                                                            groupValue?: {} | undefined;
                                                        } | undefined;
                                                        required?: boolean | undefined;
                                                        disabled?: boolean | undefined;
                                                        fieldConfig?: {
                                                            stringConfig?: {
                                                                minLength?: number | undefined;
                                                                maxLength?: number | undefined;
                                                                placeholder?: string | undefined;
                                                            } | undefined;
                                                            paragraphConfig?: {
                                                                maxCharacters?: number | undefined;
                                                                lineHeight?: number | undefined;
                                                                placeholder?: string | undefined;
                                                            } | undefined;
                                                            numberConfig?: {
                                                                step?: number | undefined;
                                                                min?: number | undefined;
                                                                max?: number | undefined;
                                                            } | undefined;
                                                            booleanConfig?: {} | undefined;
                                                            listConfig?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                itemConfig?: any | undefined;
                                                                minEntries?: number | undefined;
                                                                maxEntries?: number | undefined;
                                                                entryLabel?: string | undefined;
                                                            } | undefined;
                                                            selectionConfig?: {
                                                                choices?: {
                                                                    label?: string | undefined;
                                                                    value?: string | undefined;
                                                                }[] | undefined;
                                                                multiSelect?: boolean | undefined;
                                                                minSelections?: number | undefined;
                                                                maxSelections?: number | undefined;
                                                                renderAsList?: boolean | undefined;
                                                            } | undefined;
                                                            groupConfig?: any | undefined;
                                                        } | undefined;
                                                        isSecret?: boolean | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_62 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                                            } & { [K_63 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number]["fieldConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                            isSecret?: boolean | undefined;
                                        } & { [K_64 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"][number], "$type" | keyof import("../../../../../index.js").FormField>]: never; })[] & { [K_65 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"]["fields"], "$type" | keyof {
                                            fieldId?: string | undefined;
                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                            label?: string | undefined;
                                            helpText?: string | undefined;
                                            defaultValue?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } | undefined;
                                            required?: boolean | undefined;
                                            disabled?: boolean | undefined;
                                            fieldConfig?: {
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: any[] | undefined;
                                                } | undefined;
                                            } | undefined;
                                            isSecret?: boolean | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_66 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                                } & { [K_67 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } & { [K_68 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                            selectionConfig?: ({
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } & {
                                choices?: ({
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] & ({
                                    label?: string | undefined;
                                    value?: string | undefined;
                                } & {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                } & { [K_69 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["selectionConfig"]["choices"][number], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection_Item>]: never; })[] & { [K_70 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["selectionConfig"]["choices"], "$type" | keyof {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[]>]: never; }) | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } & { [K_71 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                            groupConfig?: ({
                                fields?: {
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: {
                                        stringConfig?: {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        paragraphConfig?: {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        numberConfig?: {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } | undefined;
                                        booleanConfig?: {} | undefined;
                                        listConfig?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: any | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } | undefined;
                                        selectionConfig?: {
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } | undefined;
                                        groupConfig?: any | undefined;
                                    } | undefined;
                                    isSecret?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                fields?: ({
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: {
                                        stringConfig?: {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        paragraphConfig?: {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        numberConfig?: {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } | undefined;
                                        booleanConfig?: {} | undefined;
                                        listConfig?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: any | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } | undefined;
                                        selectionConfig?: {
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } | undefined;
                                        groupConfig?: {
                                            fields?: any[] | undefined;
                                        } | undefined;
                                    } | undefined;
                                    isSecret?: boolean | undefined;
                                }[] & ({
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: {
                                        stringConfig?: {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        paragraphConfig?: {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        numberConfig?: {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } | undefined;
                                        booleanConfig?: {} | undefined;
                                        listConfig?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: any | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } | undefined;
                                        selectionConfig?: {
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } | undefined;
                                        groupConfig?: {
                                            fields?: any[] | undefined;
                                        } | undefined;
                                    } | undefined;
                                    isSecret?: boolean | undefined;
                                } & {
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: ({
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } & {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: ({
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: any | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] | undefined;
                                        } & {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: ({
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] & ({
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } & {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: ({
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: any | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_72 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                                selectionValue?: ({
                                                    values?: string[] | undefined;
                                                } & any & { [K_73 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                                groupValue?: ({} & any & { [K_74 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                            } & { [K_75 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_76 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"]["items"], "$type" | keyof {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[]>]: never; }) | undefined;
                                        } & { [K_77 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                        selectionValue?: ({
                                            values?: string[] | undefined;
                                        } & {
                                            values?: (string[] & string[] & { [K_78 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                        } & { [K_79 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                        groupValue?: ({} & {} & { [K_80 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"]["groupValue"], "$type">]: never; }) | undefined;
                                    } & { [K_81 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; }) | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: ({
                                        stringConfig?: {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        paragraphConfig?: {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        numberConfig?: {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } | undefined;
                                        booleanConfig?: {} | undefined;
                                        listConfig?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: any | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } | undefined;
                                        selectionConfig?: {
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } | undefined;
                                        groupConfig?: {
                                            fields?: {
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: any | undefined;
                                                isSecret?: boolean | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                    } & {
                                        stringConfig?: ({
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } & {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } & { [K_82 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                                        paragraphConfig?: ({
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } & {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } & { [K_83 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                                        numberConfig?: ({
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } & {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } & { [K_84 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                                        booleanConfig?: ({} & {} & { [K_85 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                                        listConfig?: ({
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: {
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: any | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: {
                                                        fieldId?: string | undefined;
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        label?: string | undefined;
                                                        helpText?: string | undefined;
                                                        defaultValue?: {
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            isSecret?: boolean | undefined;
                                                            stringValue?: string | undefined;
                                                            numberValue?: number | undefined;
                                                            boolValue?: boolean | undefined;
                                                            listValue?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                items?: any[] | undefined;
                                                            } | undefined;
                                                            selectionValue?: {
                                                                values?: string[] | undefined;
                                                            } | undefined;
                                                            groupValue?: {} | undefined;
                                                        } | undefined;
                                                        required?: boolean | undefined;
                                                        disabled?: boolean | undefined;
                                                        fieldConfig?: any | undefined;
                                                        isSecret?: boolean | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                            } | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } & {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: ({
                                                stringConfig?: {
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                paragraphConfig?: {
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } | undefined;
                                                numberConfig?: {
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } | undefined;
                                                booleanConfig?: {} | undefined;
                                                listConfig?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: any | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } | undefined;
                                                selectionConfig?: {
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } | undefined;
                                                groupConfig?: {
                                                    fields?: {
                                                        fieldId?: string | undefined;
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        label?: string | undefined;
                                                        helpText?: string | undefined;
                                                        defaultValue?: {
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            isSecret?: boolean | undefined;
                                                            stringValue?: string | undefined;
                                                            numberValue?: number | undefined;
                                                            boolValue?: boolean | undefined;
                                                            listValue?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                items?: any[] | undefined;
                                                            } | undefined;
                                                            selectionValue?: {
                                                                values?: string[] | undefined;
                                                            } | undefined;
                                                            groupValue?: {} | undefined;
                                                        } | undefined;
                                                        required?: boolean | undefined;
                                                        disabled?: boolean | undefined;
                                                        fieldConfig?: any | undefined;
                                                        isSecret?: boolean | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                            } & {
                                                stringConfig?: ({
                                                    minLength?: number | undefined;
                                                    maxLength?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } & any & { [K_86 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["stringConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_String>]: never; }) | undefined;
                                                paragraphConfig?: ({
                                                    maxCharacters?: number | undefined;
                                                    lineHeight?: number | undefined;
                                                    placeholder?: string | undefined;
                                                } & any & { [K_87 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["paragraphConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Paragraph>]: never; }) | undefined;
                                                numberConfig?: ({
                                                    step?: number | undefined;
                                                    min?: number | undefined;
                                                    max?: number | undefined;
                                                } & any & { [K_88 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["numberConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Number>]: never; }) | undefined;
                                                booleanConfig?: ({} & any & { [K_89 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["booleanConfig"], "$type">]: never; }) | undefined;
                                                listConfig?: ({
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    itemConfig?: {
                                                        stringConfig?: {
                                                            minLength?: number | undefined;
                                                            maxLength?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        paragraphConfig?: {
                                                            maxCharacters?: number | undefined;
                                                            lineHeight?: number | undefined;
                                                            placeholder?: string | undefined;
                                                        } | undefined;
                                                        numberConfig?: {
                                                            step?: number | undefined;
                                                            min?: number | undefined;
                                                            max?: number | undefined;
                                                        } | undefined;
                                                        booleanConfig?: {} | undefined;
                                                        listConfig?: any | undefined;
                                                        selectionConfig?: {
                                                            choices?: {
                                                                label?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                            multiSelect?: boolean | undefined;
                                                            minSelections?: number | undefined;
                                                            maxSelections?: number | undefined;
                                                            renderAsList?: boolean | undefined;
                                                        } | undefined;
                                                        groupConfig?: {
                                                            fields?: {
                                                                fieldId?: string | undefined;
                                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                label?: string | undefined;
                                                                helpText?: string | undefined;
                                                                defaultValue?: {
                                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                    isSecret?: boolean | undefined;
                                                                    stringValue?: string | undefined;
                                                                    numberValue?: number | undefined;
                                                                    boolValue?: boolean | undefined;
                                                                    listValue?: {
                                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                        items?: any[] | undefined;
                                                                    } | undefined;
                                                                    selectionValue?: {
                                                                        values?: string[] | undefined;
                                                                    } | undefined;
                                                                    groupValue?: {} | undefined;
                                                                } | undefined;
                                                                required?: boolean | undefined;
                                                                disabled?: boolean | undefined;
                                                                fieldConfig?: any | undefined;
                                                                isSecret?: boolean | undefined;
                                                            }[] | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    minEntries?: number | undefined;
                                                    maxEntries?: number | undefined;
                                                    entryLabel?: string | undefined;
                                                } & any & { [K_90 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                                                selectionConfig?: ({
                                                    choices?: {
                                                        label?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                    multiSelect?: boolean | undefined;
                                                    minSelections?: number | undefined;
                                                    maxSelections?: number | undefined;
                                                    renderAsList?: boolean | undefined;
                                                } & any & { [K_91 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                                                groupConfig?: ({
                                                    fields?: {
                                                        fieldId?: string | undefined;
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        label?: string | undefined;
                                                        helpText?: string | undefined;
                                                        defaultValue?: {
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            isSecret?: boolean | undefined;
                                                            stringValue?: string | undefined;
                                                            numberValue?: number | undefined;
                                                            boolValue?: boolean | undefined;
                                                            listValue?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                items?: any[] | undefined;
                                                            } | undefined;
                                                            selectionValue?: {
                                                                values?: string[] | undefined;
                                                            } | undefined;
                                                            groupValue?: {} | undefined;
                                                        } | undefined;
                                                        required?: boolean | undefined;
                                                        disabled?: boolean | undefined;
                                                        fieldConfig?: {
                                                            stringConfig?: {
                                                                minLength?: number | undefined;
                                                                maxLength?: number | undefined;
                                                                placeholder?: string | undefined;
                                                            } | undefined;
                                                            paragraphConfig?: {
                                                                maxCharacters?: number | undefined;
                                                                lineHeight?: number | undefined;
                                                                placeholder?: string | undefined;
                                                            } | undefined;
                                                            numberConfig?: {
                                                                step?: number | undefined;
                                                                min?: number | undefined;
                                                                max?: number | undefined;
                                                            } | undefined;
                                                            booleanConfig?: {} | undefined;
                                                            listConfig?: {
                                                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                itemConfig?: any | undefined;
                                                                minEntries?: number | undefined;
                                                                maxEntries?: number | undefined;
                                                                entryLabel?: string | undefined;
                                                            } | undefined;
                                                            selectionConfig?: {
                                                                choices?: {
                                                                    label?: string | undefined;
                                                                    value?: string | undefined;
                                                                }[] | undefined;
                                                                multiSelect?: boolean | undefined;
                                                                minSelections?: number | undefined;
                                                                maxSelections?: number | undefined;
                                                                renderAsList?: boolean | undefined;
                                                            } | undefined;
                                                            groupConfig?: any | undefined;
                                                        } | undefined;
                                                        isSecret?: boolean | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_92 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                                            } & { [K_93 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"]["itemConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } & { [K_94 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["listConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_List>]: never; }) | undefined;
                                        selectionConfig?: ({
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } & {
                                            choices?: ({
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] & ({
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            } & {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            } & { [K_95 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["selectionConfig"]["choices"][number], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection_Item>]: never; })[] & { [K_96 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["selectionConfig"]["choices"], "$type" | keyof {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[]>]: never; }) | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } & { [K_97 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["selectionConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig_Selection>]: never; }) | undefined;
                                        groupConfig?: ({
                                            fields?: {
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: {
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: any | undefined;
                                                } | undefined;
                                                isSecret?: boolean | undefined;
                                            }[] | undefined;
                                        } & {
                                            fields?: ({
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: {
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: any[] | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                isSecret?: boolean | undefined;
                                            }[] & ({
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: {
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: any[] | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                isSecret?: boolean | undefined;
                                            } & {
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: ({
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } & any & { [K_98 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["defaultValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; }) | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: ({
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: {
                                                            fieldId?: string | undefined;
                                                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                            label?: string | undefined;
                                                            helpText?: string | undefined;
                                                            defaultValue?: {
                                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                isSecret?: boolean | undefined;
                                                                stringValue?: string | undefined;
                                                                numberValue?: number | undefined;
                                                                boolValue?: boolean | undefined;
                                                                listValue?: {
                                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                                    items?: any[] | undefined;
                                                                } | undefined;
                                                                selectionValue?: {
                                                                    values?: string[] | undefined;
                                                                } | undefined;
                                                                groupValue?: {} | undefined;
                                                            } | undefined;
                                                            required?: boolean | undefined;
                                                            disabled?: boolean | undefined;
                                                            fieldConfig?: any | undefined;
                                                            isSecret?: boolean | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                } & any & { [K_99 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                                isSecret?: boolean | undefined;
                                            } & { [K_100 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number], "$type" | keyof import("../../../../../index.js").FormField>]: never; })[] & { [K_101 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"], "$type" | keyof {
                                                fieldId?: string | undefined;
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                label?: string | undefined;
                                                helpText?: string | undefined;
                                                defaultValue?: {
                                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    isSecret?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    numberValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    listValue?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        items?: any[] | undefined;
                                                    } | undefined;
                                                    selectionValue?: {
                                                        values?: string[] | undefined;
                                                    } | undefined;
                                                    groupValue?: {} | undefined;
                                                } | undefined;
                                                required?: boolean | undefined;
                                                disabled?: boolean | undefined;
                                                fieldConfig?: {
                                                    stringConfig?: {
                                                        minLength?: number | undefined;
                                                        maxLength?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    paragraphConfig?: {
                                                        maxCharacters?: number | undefined;
                                                        lineHeight?: number | undefined;
                                                        placeholder?: string | undefined;
                                                    } | undefined;
                                                    numberConfig?: {
                                                        step?: number | undefined;
                                                        min?: number | undefined;
                                                        max?: number | undefined;
                                                    } | undefined;
                                                    booleanConfig?: {} | undefined;
                                                    listConfig?: {
                                                        itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        itemConfig?: any | undefined;
                                                        minEntries?: number | undefined;
                                                        maxEntries?: number | undefined;
                                                        entryLabel?: string | undefined;
                                                    } | undefined;
                                                    selectionConfig?: {
                                                        choices?: {
                                                            label?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                        multiSelect?: boolean | undefined;
                                                        minSelections?: number | undefined;
                                                        maxSelections?: number | undefined;
                                                        renderAsList?: boolean | undefined;
                                                    } | undefined;
                                                    groupConfig?: {
                                                        fields?: any[] | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                isSecret?: boolean | undefined;
                                            }[]>]: never; }) | undefined;
                                        } & { [K_102 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                                    } & { [K_103 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number]["fieldConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                                    isSecret?: boolean | undefined;
                                } & { [K_104 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"][number], "$type" | keyof import("../../../../../index.js").FormField>]: never; })[] & { [K_105 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"]["fields"], "$type" | keyof {
                                    fieldId?: string | undefined;
                                    fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                    label?: string | undefined;
                                    helpText?: string | undefined;
                                    defaultValue?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } | undefined;
                                    required?: boolean | undefined;
                                    disabled?: boolean | undefined;
                                    fieldConfig?: {
                                        stringConfig?: {
                                            minLength?: number | undefined;
                                            maxLength?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        paragraphConfig?: {
                                            maxCharacters?: number | undefined;
                                            lineHeight?: number | undefined;
                                            placeholder?: string | undefined;
                                        } | undefined;
                                        numberConfig?: {
                                            step?: number | undefined;
                                            min?: number | undefined;
                                            max?: number | undefined;
                                        } | undefined;
                                        booleanConfig?: {} | undefined;
                                        listConfig?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            itemConfig?: any | undefined;
                                            minEntries?: number | undefined;
                                            maxEntries?: number | undefined;
                                            entryLabel?: string | undefined;
                                        } | undefined;
                                        selectionConfig?: {
                                            choices?: {
                                                label?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                            multiSelect?: boolean | undefined;
                                            minSelections?: number | undefined;
                                            maxSelections?: number | undefined;
                                            renderAsList?: boolean | undefined;
                                        } | undefined;
                                        groupConfig?: {
                                            fields?: any[] | undefined;
                                        } | undefined;
                                    } | undefined;
                                    isSecret?: boolean | undefined;
                                }[]>]: never; }) | undefined;
                            } & { [K_106 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"]["groupConfig"], "fields" | "$type">]: never; }) | undefined;
                        } & { [K_107 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number]["fieldConfig"], "$type" | keyof import("../../../../../index.js").FieldConfig>]: never; }) | undefined;
                        isSecret?: boolean | undefined;
                    } & { [K_108 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"][number], "$type" | keyof import("../../../../../index.js").FormField>]: never; })[] & { [K_109 in Exclude<keyof I["effects"][number]["showForm"]["form"]["fields"], "$type" | keyof {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[]>]: never; }) | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } & { [K_110 in Exclude<keyof I["effects"][number]["showForm"]["form"], "$type" | keyof import("../../../../../index.js").Form>]: never; }) | undefined;
            } & { [K_111 in Exclude<keyof I["effects"][number]["showForm"], "$type" | "form">]: never; }) | undefined;
            showToast?: ({
                toast?: {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } | undefined;
            } & {
                toast?: ({
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } & {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: ({
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } & {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } & { [K_112 in Exclude<keyof I["effects"][number]["showToast"]["toast"]["leadingElement"], "$type" | keyof import("../../../ui/toast/toast.js").ToastLeadingElement>]: never; }) | undefined;
                    trailingElement?: ({
                        label?: string | undefined;
                        icon?: string | undefined;
                    } & {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } & { [K_113 in Exclude<keyof I["effects"][number]["showToast"]["toast"]["trailingElement"], "$type" | keyof import("../../../ui/toast/toast.js").ToastTrailingElement>]: never; }) | undefined;
                } & { [K_114 in Exclude<keyof I["effects"][number]["showToast"]["toast"], "$type" | keyof import("../../../ui/toast/toast.js").Toast>]: never; }) | undefined;
            } & { [K_115 in Exclude<keyof I["effects"][number]["showToast"], "$type" | "toast">]: never; }) | undefined;
            navigateToUrl?: ({
                url?: string | undefined;
                target?: string | undefined;
            } & {
                url?: string | undefined;
                target?: string | undefined;
            } & { [K_116 in Exclude<keyof I["effects"][number]["navigateToUrl"], "$type" | keyof import("../../../../../index.js").NavigateToUrlEffect>]: never; }) | undefined;
            sendEvent?: ({
                event?: {
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } | undefined;
            } & {
                event?: ({
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } & {
                    realtimeEvent?: ({
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } & {
                        event?: ({
                            channel?: string | undefined;
                            data?: any;
                        } & {
                            channel?: string | undefined;
                            data?: any;
                        } & { [K_117 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["realtimeEvent"]["event"], "$type" | keyof import("../../../events/v1alpha/realtime.js").RealtimeEvent>]: never; }) | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } & { [K_118 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["realtimeEvent"], "$type" | keyof import("../../../../../index.js").RealtimeSubscriptionEvent>]: never; }) | undefined;
                    formSubmitted?: ({
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } & {
                        results?: ({
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } & {
                            [x: string]: ({
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } & {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: ({
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: any | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[] | undefined;
                                } & {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: ({
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[] & ({
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    } & {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: ({
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: any | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] | undefined;
                                        } & {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: ({
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[] & ({
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            } & {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: ({
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: {
                                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                        isSecret?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        numberValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        listValue?: any | undefined;
                                                        selectionValue?: {
                                                            values?: string[] | undefined;
                                                        } | undefined;
                                                        groupValue?: {} | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_119 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                                selectionValue?: ({
                                                    values?: string[] | undefined;
                                                } & any & { [K_120 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                                groupValue?: ({} & any & { [K_121 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                            } & { [K_122 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_123 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"]["items"], "$type" | keyof {
                                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                                isSecret?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                numberValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                listValue?: {
                                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                                    items?: any[] | undefined;
                                                } | undefined;
                                                selectionValue?: {
                                                    values?: string[] | undefined;
                                                } | undefined;
                                                groupValue?: {} | undefined;
                                            }[]>]: never; }) | undefined;
                                        } & { [K_124 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                        selectionValue?: ({
                                            values?: string[] | undefined;
                                        } & {
                                            values?: (string[] & string[] & { [K_125 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                        } & { [K_126 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                        groupValue?: ({} & {} & { [K_127 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number]["groupValue"], "$type">]: never; }) | undefined;
                                    } & { [K_128 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"][number], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; })[] & { [K_129 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"]["items"], "$type" | keyof {
                                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                        isSecret?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        numberValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        listValue?: {
                                            itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                            items?: any[] | undefined;
                                        } | undefined;
                                        selectionValue?: {
                                            values?: string[] | undefined;
                                        } | undefined;
                                        groupValue?: {} | undefined;
                                    }[]>]: never; }) | undefined;
                                } & { [K_130 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["listValue"], "$type" | keyof import("../../../../../index.js").FormFieldValue_ListValue>]: never; }) | undefined;
                                selectionValue?: ({
                                    values?: string[] | undefined;
                                } & {
                                    values?: (string[] & string[] & { [K_131 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["selectionValue"]["values"], "$type" | keyof string[]>]: never; }) | undefined;
                                } & { [K_132 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["selectionValue"], "$type" | "values">]: never; }) | undefined;
                                groupValue?: ({} & {} & { [K_133 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string]["groupValue"], "$type">]: never; }) | undefined;
                            } & { [K_134 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"][string], "$type" | keyof import("../../../../../index.js").FormFieldValue>]: never; }) | undefined;
                        } & { [K_135 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"]["results"], string | number>]: never; }) | undefined;
                        formId?: string | undefined;
                    } & { [K_136 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["formSubmitted"], "$type" | keyof import("../../../../../index.js").FormSubmittedEvent>]: never; }) | undefined;
                    toastAction?: ({} & {} & { [K_137 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["toastAction"], "$type">]: never; }) | undefined;
                    userAction?: ({
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } & {
                        actionId?: string | undefined;
                        data?: ({
                            [x: string]: any;
                        } & {
                            [x: string]: any;
                        } & { [K_138 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["userAction"]["data"], string | number>]: never; }) | undefined;
                    } & { [K_139 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["userAction"], "$type" | keyof import("../../../../../index.js").UserAction>]: never; }) | undefined;
                    asyncRequest?: ({
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } & {
                        requestId?: string | undefined;
                        data?: ({
                            [x: string]: any;
                        } & {
                            [x: string]: any;
                        } & { [K_140 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["asyncRequest"]["data"], string | number>]: never; }) | undefined;
                    } & { [K_141 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["asyncRequest"], "$type" | keyof import("../../../../../index.js").AsyncRequest>]: never; }) | undefined;
                    asyncResponse?: ({
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } & {
                        requestId?: string | undefined;
                        data?: ({
                            [x: string]: any;
                        } & {
                            [x: string]: any;
                        } & { [K_142 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["asyncResponse"]["data"], string | number>]: never; }) | undefined;
                        error?: ({
                            message?: string | undefined;
                            details?: string | undefined;
                        } & {
                            message?: string | undefined;
                            details?: string | undefined;
                        } & { [K_143 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["asyncResponse"]["error"], "$type" | keyof import("../../../../../index.js").AsyncError>]: never; }) | undefined;
                    } & { [K_144 in Exclude<keyof I["effects"][number]["sendEvent"]["event"]["asyncResponse"], "$type" | keyof import("../../../../../index.js").AsyncResponse>]: never; }) | undefined;
                    queue?: string | undefined;
                } & { [K_145 in Exclude<keyof I["effects"][number]["sendEvent"]["event"], "$type" | keyof import("../../../../../index.js").UIEvent>]: never; }) | undefined;
            } & { [K_146 in Exclude<keyof I["effects"][number]["sendEvent"], "$type" | "event">]: never; }) | undefined;
            type?: import("../../../ui/effects/v1alpha/effect.js").EffectType | undefined;
        } & { [K_147 in Exclude<keyof I["effects"][number], "$type" | keyof Effect>]: never; })[] & { [K_148 in Exclude<keyof I["effects"], "$type" | keyof {
            realtimeSubscriptions?: {
                subscriptionIds?: string[] | undefined;
            } | undefined;
            rerenderUi?: {
                delaySeconds?: number | undefined;
            } | undefined;
            reloadPart?: {
                subreddit?: {
                    subredditId?: string | undefined;
                } | undefined;
                post?: {
                    postId?: string | undefined;
                    body?: boolean | undefined;
                    comments?: boolean | undefined;
                } | undefined;
                comment?: {
                    postId?: string | undefined;
                    commentId?: string | undefined;
                    replies?: boolean | undefined;
                } | undefined;
            } | undefined;
            showForm?: {
                form?: {
                    fields?: {
                        fieldId?: string | undefined;
                        fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                        label?: string | undefined;
                        helpText?: string | undefined;
                        defaultValue?: {
                            fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                            isSecret?: boolean | undefined;
                            stringValue?: string | undefined;
                            numberValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            listValue?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                items?: any[] | undefined;
                            } | undefined;
                            selectionValue?: {
                                values?: string[] | undefined;
                            } | undefined;
                            groupValue?: {} | undefined;
                        } | undefined;
                        required?: boolean | undefined;
                        disabled?: boolean | undefined;
                        fieldConfig?: {
                            stringConfig?: {
                                minLength?: number | undefined;
                                maxLength?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            paragraphConfig?: {
                                maxCharacters?: number | undefined;
                                lineHeight?: number | undefined;
                                placeholder?: string | undefined;
                            } | undefined;
                            numberConfig?: {
                                step?: number | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            booleanConfig?: {} | undefined;
                            listConfig?: {
                                itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                itemConfig?: any | undefined;
                                minEntries?: number | undefined;
                                maxEntries?: number | undefined;
                                entryLabel?: string | undefined;
                            } | undefined;
                            selectionConfig?: {
                                choices?: {
                                    label?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                                multiSelect?: boolean | undefined;
                                minSelections?: number | undefined;
                                maxSelections?: number | undefined;
                                renderAsList?: boolean | undefined;
                            } | undefined;
                            groupConfig?: {
                                fields?: any[] | undefined;
                            } | undefined;
                        } | undefined;
                        isSecret?: boolean | undefined;
                    }[] | undefined;
                    title?: string | undefined;
                    shortDescription?: string | undefined;
                    acceptLabel?: string | undefined;
                    cancelLabel?: string | undefined;
                    id?: string | undefined;
                } | undefined;
            } | undefined;
            showToast?: {
                toast?: {
                    text?: string | undefined;
                    appearance?: import("../../../ui/toast/toast.js").ToastAppearance | undefined;
                    leadingElement?: {
                        icon?: string | undefined;
                        emoji?: string | undefined;
                        avatar?: string | undefined;
                    } | undefined;
                    trailingElement?: {
                        label?: string | undefined;
                        icon?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            navigateToUrl?: {
                url?: string | undefined;
                target?: string | undefined;
            } | undefined;
            sendEvent?: {
                event?: {
                    realtimeEvent?: {
                        event?: {
                            channel?: string | undefined;
                            data?: any;
                        } | undefined;
                        status?: import("../../../../../index.js").RealtimeSubscriptionStatus | undefined;
                    } | undefined;
                    formSubmitted?: {
                        results?: {
                            [x: string]: {
                                fieldType?: import("../../../../../index.js").FormFieldType | undefined;
                                isSecret?: boolean | undefined;
                                stringValue?: string | undefined;
                                numberValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                listValue?: {
                                    itemType?: import("../../../../../index.js").FormFieldType | undefined;
                                    items?: any[] | undefined;
                                } | undefined;
                                selectionValue?: {
                                    values?: string[] | undefined;
                                } | undefined;
                                groupValue?: {} | undefined;
                            } | undefined;
                        } | undefined;
                        formId?: string | undefined;
                    } | undefined;
                    toastAction?: {} | undefined;
                    userAction?: {
                        actionId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncRequest?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                    } | undefined;
                    asyncResponse?: {
                        requestId?: string | undefined;
                        data?: {
                            [x: string]: any;
                        } | undefined;
                        error?: {
                            message?: string | undefined;
                            details?: string | undefined;
                        } | undefined;
                    } | undefined;
                    queue?: string | undefined;
                } | undefined;
            } | undefined;
            type?: import("../../../ui/effects/v1alpha/effect.js").EffectType | undefined;
        }[]>]: never; }) | undefined;
        blocks?: ({
            ui?: {
                type?: import("../../../../../index.js").BlockType | undefined;
                size?: {
                    grow?: boolean | undefined;
                    width?: number | undefined;
                    widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                    height?: number | undefined;
                    heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                } | undefined;
                sizes?: {
                    grow?: boolean | undefined;
                    width?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                    height?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                config?: {
                    rootConfig?: {
                        children?: any[] | undefined;
                        height?: number | undefined;
                    } | undefined;
                    stackConfig?: {
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: any[] | undefined;
                        reverse?: boolean | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    textConfig?: {
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } | undefined;
                    buttonConfig?: {
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    imageConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } | undefined;
                    spacerConfig?: {
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } | undefined;
                    iconConfig?: {
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    avatarConfig?: {
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } | undefined;
                    fullsnooConfig?: {
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } | undefined;
                    animationConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } | undefined;
                    webviewConfig?: {
                        url?: string | undefined;
                    } | undefined;
                } | undefined;
                actions?: {
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } & {
            ui?: ({
                type?: import("../../../../../index.js").BlockType | undefined;
                size?: {
                    grow?: boolean | undefined;
                    width?: number | undefined;
                    widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                    height?: number | undefined;
                    heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                } | undefined;
                sizes?: {
                    grow?: boolean | undefined;
                    width?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                    height?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                config?: {
                    rootConfig?: {
                        children?: any[] | undefined;
                        height?: number | undefined;
                    } | undefined;
                    stackConfig?: {
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: any[] | undefined;
                        reverse?: boolean | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    textConfig?: {
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } | undefined;
                    buttonConfig?: {
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    imageConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } | undefined;
                    spacerConfig?: {
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } | undefined;
                    iconConfig?: {
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    avatarConfig?: {
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } | undefined;
                    fullsnooConfig?: {
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } | undefined;
                    animationConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } | undefined;
                    webviewConfig?: {
                        url?: string | undefined;
                    } | undefined;
                } | undefined;
                actions?: {
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                }[] | undefined;
            } & {
                type?: import("../../../../../index.js").BlockType | undefined;
                size?: ({
                    grow?: boolean | undefined;
                    width?: number | undefined;
                    widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                    height?: number | undefined;
                    heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                } & {
                    grow?: boolean | undefined;
                    width?: number | undefined;
                    widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                    height?: number | undefined;
                    heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                } & { [K_149 in Exclude<keyof I["blocks"]["ui"]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                sizes?: ({
                    grow?: boolean | undefined;
                    width?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                    height?: {
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    grow?: boolean | undefined;
                    width?: ({
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } & {
                        value?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_150 in Exclude<keyof I["blocks"]["ui"]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                        min?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_151 in Exclude<keyof I["blocks"]["ui"]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                        max?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_152 in Exclude<keyof I["blocks"]["ui"]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                    } & { [K_153 in Exclude<keyof I["blocks"]["ui"]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                    height?: ({
                        value?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        min?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                        max?: {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } | undefined;
                    } & {
                        value?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_154 in Exclude<keyof I["blocks"]["ui"]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                        min?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_155 in Exclude<keyof I["blocks"]["ui"]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                        max?: ({
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & {
                            value?: number | undefined;
                            unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                        } & { [K_156 in Exclude<keyof I["blocks"]["ui"]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                    } & { [K_157 in Exclude<keyof I["blocks"]["ui"]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                } & { [K_158 in Exclude<keyof I["blocks"]["ui"]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                config?: ({
                    rootConfig?: {
                        children?: {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: any | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        height?: number | undefined;
                    } | undefined;
                    stackConfig?: {
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: any | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        reverse?: boolean | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    textConfig?: {
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } | undefined;
                    buttonConfig?: {
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    imageConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } | undefined;
                    spacerConfig?: {
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } | undefined;
                    iconConfig?: {
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } | undefined;
                    avatarConfig?: {
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } | undefined;
                    fullsnooConfig?: {
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } | undefined;
                    animationConfig?: {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } | undefined;
                    webviewConfig?: {
                        url?: string | undefined;
                    } | undefined;
                } & {
                    rootConfig?: ({
                        children?: {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: any | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        height?: number | undefined;
                    } & {
                        children?: ({
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] & ({
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        } & {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: ({
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } & {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } & { [K_159 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                            sizes?: ({
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                grow?: boolean | undefined;
                                width?: ({
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } & {
                                    value?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_160 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    min?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_161 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    max?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_162 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                } & { [K_163 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                height?: ({
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } & {
                                    value?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_164 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    min?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_165 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    max?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_166 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                } & { [K_167 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                            } & { [K_168 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                            config?: ({
                                rootConfig?: {
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: any | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: any | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } & {
                                rootConfig?: ({
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: any | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    height?: number | undefined;
                                } & {
                                    children?: ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] & ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    } & {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: ({
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & { [K_169 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                                        sizes?: ({
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_170 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_171 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_172 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_173 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                            height?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_174 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_175 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_176 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_177 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                        } & { [K_178 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                                        config?: ({
                                            rootConfig?: {
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } & {
                                            rootConfig?: ({
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: any | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } & {
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_179 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_180 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                height?: number | undefined;
                                            } & { [K_181 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                            stackConfig?: ({
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: any | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_182 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_183 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_184 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: ({
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } & any & { [K_185 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_186 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_187 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                            textConfig?: ({
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_188 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_189 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & { [K_190 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                            buttonConfig?: ({
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_191 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_192 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_193 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                            imageConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & { [K_194 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                            spacerConfig?: ({
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & { [K_195 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                            iconConfig?: ({
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_196 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_197 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                            avatarConfig?: ({
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & { [K_198 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                            fullsnooConfig?: ({
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & { [K_199 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                            animationConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & { [K_200 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                            webviewConfig?: ({
                                                url?: string | undefined;
                                            } & {
                                                url?: string | undefined;
                                            } & { [K_201 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                                        } & { [K_202 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                                        actions?: ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] & ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        } & {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: ({
                                                [x: string]: any;
                                            } & {
                                                [x: string]: any;
                                            } & { [K_203 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                                        } & { [K_204 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_205 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"], "$type" | keyof {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_206 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_207 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[]>]: never; }) | undefined;
                                    height?: number | undefined;
                                } & { [K_208 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                stackConfig?: ({
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: any | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] & ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    } & {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: ({
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & { [K_209 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                                        sizes?: ({
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_210 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_211 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_212 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_213 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                            height?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_214 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_215 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_216 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_217 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                        } & { [K_218 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                                        config?: ({
                                            rootConfig?: {
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } & {
                                            rootConfig?: ({
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: any | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } & {
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_219 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_220 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                height?: number | undefined;
                                            } & { [K_221 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                            stackConfig?: ({
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: any | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_222 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_223 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_224 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: ({
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } & any & { [K_225 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_226 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_227 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                            textConfig?: ({
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_228 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_229 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & { [K_230 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                            buttonConfig?: ({
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_231 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_232 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_233 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                            imageConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & { [K_234 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                            spacerConfig?: ({
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & { [K_235 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                            iconConfig?: ({
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_236 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_237 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                            avatarConfig?: ({
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & { [K_238 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                            fullsnooConfig?: ({
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & { [K_239 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                            animationConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & { [K_240 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                            webviewConfig?: ({
                                                url?: string | undefined;
                                            } & {
                                                url?: string | undefined;
                                            } & { [K_241 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                                        } & { [K_242 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                                        actions?: ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] & ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        } & {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: ({
                                                [x: string]: any;
                                            } & {
                                                [x: string]: any;
                                            } & { [K_243 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                                        } & { [K_244 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_245 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"], "$type" | keyof {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_246 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_247 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[]>]: never; }) | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: ({
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & { [K_248 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: ({
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } & {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: ({
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } & {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } & { [K_249 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["border"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    } & { [K_250 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_251 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_252 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                textConfig?: ({
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } & {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: ({
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & { [K_253 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_254 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } & { [K_255 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                buttonConfig?: ({
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_256 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    backgroundColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_257 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_258 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                imageConfig?: ({
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } & {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } & { [K_259 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                spacerConfig?: ({
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } & {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } & { [K_260 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                iconConfig?: ({
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_261 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_262 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                avatarConfig?: ({
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } & {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } & { [K_263 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                fullsnooConfig?: ({
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } & {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } & { [K_264 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                animationConfig?: ({
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } & {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } & { [K_265 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                webviewConfig?: ({
                                    url?: string | undefined;
                                } & {
                                    url?: string | undefined;
                                } & { [K_266 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                            } & { [K_267 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                            actions?: ({
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] & ({
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            } & {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: ({
                                    [x: string]: any;
                                } & {
                                    [x: string]: any;
                                } & { [K_268 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                            } & { [K_269 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_270 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number]["actions"], "$type" | keyof {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[]>]: never; }) | undefined;
                        } & { [K_271 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_272 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"]["children"], "$type" | keyof {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[]>]: never; }) | undefined;
                        height?: number | undefined;
                    } & { [K_273 in Exclude<keyof I["blocks"]["ui"]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                    stackConfig?: ({
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: any | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        reverse?: boolean | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } & {
                        direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                        children?: ({
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[] & ({
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        } & {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: ({
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } & {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } & { [K_274 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                            sizes?: ({
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                grow?: boolean | undefined;
                                width?: ({
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } & {
                                    value?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_275 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    min?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_276 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    max?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_277 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                } & { [K_278 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                height?: ({
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } & {
                                    value?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_279 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    min?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_280 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                    max?: ({
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } & { [K_281 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                } & { [K_282 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                            } & { [K_283 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                            config?: ({
                                rootConfig?: {
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: any | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: any | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } & {
                                rootConfig?: ({
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: any | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    height?: number | undefined;
                                } & {
                                    children?: ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] & ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    } & {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: ({
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & { [K_284 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                                        sizes?: ({
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_285 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_286 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_287 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_288 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                            height?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_289 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_290 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_291 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_292 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                        } & { [K_293 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                                        config?: ({
                                            rootConfig?: {
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } & {
                                            rootConfig?: ({
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: any | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } & {
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_294 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_295 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                height?: number | undefined;
                                            } & { [K_296 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                            stackConfig?: ({
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: any | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_297 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_298 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_299 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: ({
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } & any & { [K_300 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_301 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_302 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                            textConfig?: ({
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_303 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_304 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & { [K_305 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                            buttonConfig?: ({
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_306 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_307 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_308 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                            imageConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & { [K_309 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                            spacerConfig?: ({
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & { [K_310 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                            iconConfig?: ({
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_311 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_312 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                            avatarConfig?: ({
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & { [K_313 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                            fullsnooConfig?: ({
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & { [K_314 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                            animationConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & { [K_315 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                            webviewConfig?: ({
                                                url?: string | undefined;
                                            } & {
                                                url?: string | undefined;
                                            } & { [K_316 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                                        } & { [K_317 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                                        actions?: ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] & ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        } & {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: ({
                                                [x: string]: any;
                                            } & {
                                                [x: string]: any;
                                            } & { [K_318 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                                        } & { [K_319 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_320 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number]["actions"], "$type" | keyof {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_321 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_322 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[]>]: never; }) | undefined;
                                    height?: number | undefined;
                                } & { [K_323 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                stackConfig?: ({
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: any | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[] & ({
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    } & {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: ({
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } & { [K_324 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["size"], "$type" | keyof import("../../../../../index.js").BlockSize>]: never; }) | undefined;
                                        sizes?: ({
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } & {
                                            grow?: boolean | undefined;
                                            width?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_325 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_326 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_327 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_328 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["width"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                            height?: ({
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } & {
                                                value?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_329 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["value"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                min?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_330 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["min"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                                max?: ({
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } & any & { [K_331 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"]["max"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension_Value>]: never; }) | undefined;
                                            } & { [K_332 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"]["height"], "$type" | keyof import("../../../../../index.js").BlockSizes_Dimension>]: never; }) | undefined;
                                        } & { [K_333 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["sizes"], "$type" | keyof import("../../../../../index.js").BlockSizes>]: never; }) | undefined;
                                        config?: ({
                                            rootConfig?: {
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: any | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } & {
                                            rootConfig?: ({
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: any | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                height?: number | undefined;
                                            } & {
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_334 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_335 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                height?: number | undefined;
                                            } & { [K_336 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["rootConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Root>]: never; }) | undefined;
                                            stackConfig?: ({
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: any | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[] & ({
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                } & any & { [K_337 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_338 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                                    type?: import("../../../../../index.js").BlockType | undefined;
                                                    size?: {
                                                        grow?: boolean | undefined;
                                                        width?: number | undefined;
                                                        widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                        height?: number | undefined;
                                                        heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                    } | undefined;
                                                    sizes?: {
                                                        grow?: boolean | undefined;
                                                        width?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        height?: {
                                                            value?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            min?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                            max?: {
                                                                value?: number | undefined;
                                                                unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    config?: {
                                                        rootConfig?: {
                                                            children?: any[] | undefined;
                                                            height?: number | undefined;
                                                        } | undefined;
                                                        stackConfig?: {
                                                            direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                            children?: any[] | undefined;
                                                            reverse?: boolean | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                            gap?: import("../../../../../index.js").BlockGap | undefined;
                                                            border?: {
                                                                color?: string | undefined;
                                                                width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                                colors?: {
                                                                    light?: string | undefined;
                                                                    dark?: string | undefined;
                                                                } | undefined;
                                                            } | undefined;
                                                            cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                            backgroundColor?: string | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        textConfig?: {
                                                            text?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                            weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                            color?: string | undefined;
                                                            alignment?: {
                                                                vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                                horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                            } | undefined;
                                                            outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                            style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                            selectable?: boolean | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            wrap?: boolean | undefined;
                                                            overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                                        } | undefined;
                                                        buttonConfig?: {
                                                            text?: string | undefined;
                                                            icon?: string | undefined;
                                                            buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                            buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                            textColor?: string | undefined;
                                                            backgroundColor?: string | undefined;
                                                            disabled?: boolean | undefined;
                                                            textColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                            backgroundColors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        imageConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            description?: string | undefined;
                                                            resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                                        } | undefined;
                                                        spacerConfig?: {
                                                            size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                            shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                                        } | undefined;
                                                        iconConfig?: {
                                                            icon?: string | undefined;
                                                            color?: string | undefined;
                                                            size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                            colors?: {
                                                                light?: string | undefined;
                                                                dark?: string | undefined;
                                                            } | undefined;
                                                        } | undefined;
                                                        avatarConfig?: {
                                                            thingId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                            background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                                        } | undefined;
                                                        fullsnooConfig?: {
                                                            userId?: string | undefined;
                                                            facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                            size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                                        } | undefined;
                                                        animationConfig?: {
                                                            url?: string | undefined;
                                                            width?: number | undefined;
                                                            height?: number | undefined;
                                                            type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                            loop?: boolean | undefined;
                                                            loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                            autoplay?: boolean | undefined;
                                                            speed?: number | undefined;
                                                            direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                                        } | undefined;
                                                        webviewConfig?: {
                                                            url?: string | undefined;
                                                        } | undefined;
                                                    } | undefined;
                                                    actions?: {
                                                        type?: import("../../../../../index.js").BlockActionType | undefined;
                                                        id?: string | undefined;
                                                        data?: {
                                                            [x: string]: any;
                                                        } | undefined;
                                                    }[] | undefined;
                                                }[]>]: never; }) | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_339 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: ({
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } & any & { [K_340 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_341 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_342 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                            textConfig?: ({
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: ({
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } & any & { [K_343 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_344 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } & { [K_345 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                            buttonConfig?: ({
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_346 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                                backgroundColors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_347 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_348 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                            imageConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } & { [K_349 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                            spacerConfig?: ({
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } & { [K_350 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                            iconConfig?: ({
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } & {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: ({
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } & any & { [K_351 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                            } & { [K_352 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                            avatarConfig?: ({
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } & { [K_353 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                            fullsnooConfig?: ({
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } & { [K_354 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                            animationConfig?: ({
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } & { [K_355 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                            webviewConfig?: ({
                                                url?: string | undefined;
                                            } & {
                                                url?: string | undefined;
                                            } & { [K_356 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                                        } & { [K_357 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                                        actions?: ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] & ({
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        } & {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: ({
                                                [x: string]: any;
                                            } & {
                                                [x: string]: any;
                                            } & { [K_358 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                                        } & { [K_359 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_360 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number]["actions"], "$type" | keyof {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[]>]: never; }) | undefined;
                                    } & { [K_361 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_362 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["children"], "$type" | keyof {
                                        type?: import("../../../../../index.js").BlockType | undefined;
                                        size?: {
                                            grow?: boolean | undefined;
                                            width?: number | undefined;
                                            widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                            height?: number | undefined;
                                            heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                        } | undefined;
                                        sizes?: {
                                            grow?: boolean | undefined;
                                            width?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                            height?: {
                                                value?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                min?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                                max?: {
                                                    value?: number | undefined;
                                                    unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                                } | undefined;
                                            } | undefined;
                                        } | undefined;
                                        config?: {
                                            rootConfig?: {
                                                children?: any[] | undefined;
                                                height?: number | undefined;
                                            } | undefined;
                                            stackConfig?: {
                                                direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                                children?: any[] | undefined;
                                                reverse?: boolean | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                padding?: import("../../../../../index.js").BlockPadding | undefined;
                                                gap?: import("../../../../../index.js").BlockGap | undefined;
                                                border?: {
                                                    color?: string | undefined;
                                                    width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                                    colors?: {
                                                        light?: string | undefined;
                                                        dark?: string | undefined;
                                                    } | undefined;
                                                } | undefined;
                                                cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                                backgroundColor?: string | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            textConfig?: {
                                                text?: string | undefined;
                                                size?: import("../../../../../index.js").BlockTextSize | undefined;
                                                weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                                color?: string | undefined;
                                                alignment?: {
                                                    vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                                    horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                                } | undefined;
                                                outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                                style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                                selectable?: boolean | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                wrap?: boolean | undefined;
                                                overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                            } | undefined;
                                            buttonConfig?: {
                                                text?: string | undefined;
                                                icon?: string | undefined;
                                                buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                                buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                                textColor?: string | undefined;
                                                backgroundColor?: string | undefined;
                                                disabled?: boolean | undefined;
                                                textColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                                backgroundColors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            imageConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                description?: string | undefined;
                                                resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                            } | undefined;
                                            spacerConfig?: {
                                                size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                                shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                            } | undefined;
                                            iconConfig?: {
                                                icon?: string | undefined;
                                                color?: string | undefined;
                                                size?: import("../../../../../index.js").BlockIconSize | undefined;
                                                colors?: {
                                                    light?: string | undefined;
                                                    dark?: string | undefined;
                                                } | undefined;
                                            } | undefined;
                                            avatarConfig?: {
                                                thingId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                                background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                            } | undefined;
                                            fullsnooConfig?: {
                                                userId?: string | undefined;
                                                facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                                size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                            } | undefined;
                                            animationConfig?: {
                                                url?: string | undefined;
                                                width?: number | undefined;
                                                height?: number | undefined;
                                                type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                                loop?: boolean | undefined;
                                                loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                                autoplay?: boolean | undefined;
                                                speed?: number | undefined;
                                                direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                            } | undefined;
                                            webviewConfig?: {
                                                url?: string | undefined;
                                            } | undefined;
                                        } | undefined;
                                        actions?: {
                                            type?: import("../../../../../index.js").BlockActionType | undefined;
                                            id?: string | undefined;
                                            data?: {
                                                [x: string]: any;
                                            } | undefined;
                                        }[] | undefined;
                                    }[]>]: never; }) | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: ({
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & { [K_363 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: ({
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } & {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: ({
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } & {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } & { [K_364 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["border"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    } & { [K_365 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_366 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_367 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                                textConfig?: ({
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } & {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: ({
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } & { [K_368 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_369 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } & { [K_370 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                                buttonConfig?: ({
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_371 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                    backgroundColors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_372 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_373 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                                imageConfig?: ({
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } & {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } & { [K_374 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                                spacerConfig?: ({
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } & {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } & { [K_375 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                                iconConfig?: ({
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } & {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: ({
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } & { [K_376 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                                } & { [K_377 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                                avatarConfig?: ({
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } & {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } & { [K_378 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                                fullsnooConfig?: ({
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } & {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } & { [K_379 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                                animationConfig?: ({
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } & {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } & { [K_380 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                                webviewConfig?: ({
                                    url?: string | undefined;
                                } & {
                                    url?: string | undefined;
                                } & { [K_381 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                            } & { [K_382 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                            actions?: ({
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] & ({
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            } & {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: ({
                                    [x: string]: any;
                                } & {
                                    [x: string]: any;
                                } & { [K_383 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["actions"][number]["data"], string | number>]: never; }) | undefined;
                            } & { [K_384 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_385 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number]["actions"], "$type" | keyof {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[]>]: never; }) | undefined;
                        } & { [K_386 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"][number], "$type" | keyof import("../../../../../index.js").Block>]: never; })[] & { [K_387 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["children"], "$type" | keyof {
                            type?: import("../../../../../index.js").BlockType | undefined;
                            size?: {
                                grow?: boolean | undefined;
                                width?: number | undefined;
                                widthUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                height?: number | undefined;
                                heightUnit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                            } | undefined;
                            sizes?: {
                                grow?: boolean | undefined;
                                width?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                                height?: {
                                    value?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    min?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                    max?: {
                                        value?: number | undefined;
                                        unit?: import("../../../../../index.js").BlockSizeUnit | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            config?: {
                                rootConfig?: {
                                    children?: any[] | undefined;
                                    height?: number | undefined;
                                } | undefined;
                                stackConfig?: {
                                    direction?: import("../../../../../index.js").BlockStackDirection | undefined;
                                    children?: any[] | undefined;
                                    reverse?: boolean | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    padding?: import("../../../../../index.js").BlockPadding | undefined;
                                    gap?: import("../../../../../index.js").BlockGap | undefined;
                                    border?: {
                                        color?: string | undefined;
                                        width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                                        colors?: {
                                            light?: string | undefined;
                                            dark?: string | undefined;
                                        } | undefined;
                                    } | undefined;
                                    cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                                    backgroundColor?: string | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                textConfig?: {
                                    text?: string | undefined;
                                    size?: import("../../../../../index.js").BlockTextSize | undefined;
                                    weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                                    color?: string | undefined;
                                    alignment?: {
                                        vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                                        horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                                    } | undefined;
                                    outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                                    style?: import("../../../../../index.js").BlockTextStyle | undefined;
                                    selectable?: boolean | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    wrap?: boolean | undefined;
                                    overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                                } | undefined;
                                buttonConfig?: {
                                    text?: string | undefined;
                                    icon?: string | undefined;
                                    buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                                    buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                                    textColor?: string | undefined;
                                    backgroundColor?: string | undefined;
                                    disabled?: boolean | undefined;
                                    textColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                    backgroundColors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                imageConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    description?: string | undefined;
                                    resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                                } | undefined;
                                spacerConfig?: {
                                    size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                                    shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                                } | undefined;
                                iconConfig?: {
                                    icon?: string | undefined;
                                    color?: string | undefined;
                                    size?: import("../../../../../index.js").BlockIconSize | undefined;
                                    colors?: {
                                        light?: string | undefined;
                                        dark?: string | undefined;
                                    } | undefined;
                                } | undefined;
                                avatarConfig?: {
                                    thingId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                                    background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                                } | undefined;
                                fullsnooConfig?: {
                                    userId?: string | undefined;
                                    facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                                    size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                                } | undefined;
                                animationConfig?: {
                                    url?: string | undefined;
                                    width?: number | undefined;
                                    height?: number | undefined;
                                    type?: import("../../../../../index.js").BlockAnimationType | undefined;
                                    loop?: boolean | undefined;
                                    loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                                    autoplay?: boolean | undefined;
                                    speed?: number | undefined;
                                    direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                                } | undefined;
                                webviewConfig?: {
                                    url?: string | undefined;
                                } | undefined;
                            } | undefined;
                            actions?: {
                                type?: import("../../../../../index.js").BlockActionType | undefined;
                                id?: string | undefined;
                                data?: {
                                    [x: string]: any;
                                } | undefined;
                            }[] | undefined;
                        }[]>]: never; }) | undefined;
                        reverse?: boolean | undefined;
                        alignment?: ({
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } & {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } & { [K_388 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                        padding?: import("../../../../../index.js").BlockPadding | undefined;
                        gap?: import("../../../../../index.js").BlockGap | undefined;
                        border?: ({
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } | undefined;
                        } & {
                            color?: string | undefined;
                            width?: import("../../../../../index.js").BlockBorderWidth | undefined;
                            colors?: ({
                                light?: string | undefined;
                                dark?: string | undefined;
                            } & {
                                light?: string | undefined;
                                dark?: string | undefined;
                            } & { [K_389 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["border"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                        } & { [K_390 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["border"], "$type" | keyof import("../../../../../index.js").BlockBorder>]: never; }) | undefined;
                        cornerRadius?: import("../../../../../index.js").BlockRadius | undefined;
                        backgroundColor?: string | undefined;
                        backgroundColors?: ({
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & { [K_391 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                    } & { [K_392 in Exclude<keyof I["blocks"]["ui"]["config"]["stackConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Stack>]: never; }) | undefined;
                    textConfig?: ({
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } & {
                        text?: string | undefined;
                        size?: import("../../../../../index.js").BlockTextSize | undefined;
                        weight?: import("../../../../../index.js").BlockTextWeight | undefined;
                        color?: string | undefined;
                        alignment?: ({
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } & {
                            vertical?: import("../../../../../index.js").BlockVerticalAlignment | undefined;
                            horizontal?: import("../../../../../index.js").BlockHorizontalAlignment | undefined;
                        } & { [K_393 in Exclude<keyof I["blocks"]["ui"]["config"]["textConfig"]["alignment"], "$type" | keyof import("../../../../../index.js").BlockAlignment>]: never; }) | undefined;
                        outline?: import("../../../../../index.js").BlockTextOutline | undefined;
                        style?: import("../../../../../index.js").BlockTextStyle | undefined;
                        selectable?: boolean | undefined;
                        colors?: ({
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & { [K_394 in Exclude<keyof I["blocks"]["ui"]["config"]["textConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                        wrap?: boolean | undefined;
                        overflow?: import("../../../../../index.js").BlockTextOverflow | undefined;
                    } & { [K_395 in Exclude<keyof I["blocks"]["ui"]["config"]["textConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Text>]: never; }) | undefined;
                    buttonConfig?: ({
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                        backgroundColors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } & {
                        text?: string | undefined;
                        icon?: string | undefined;
                        buttonSize?: import("../../../../../index.js").BlockButtonSize | undefined;
                        buttonAppearance?: import("../../../../../index.js").BlockButtonAppearance | undefined;
                        textColor?: string | undefined;
                        backgroundColor?: string | undefined;
                        disabled?: boolean | undefined;
                        textColors?: ({
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & { [K_396 in Exclude<keyof I["blocks"]["ui"]["config"]["buttonConfig"]["textColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                        backgroundColors?: ({
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & { [K_397 in Exclude<keyof I["blocks"]["ui"]["config"]["buttonConfig"]["backgroundColors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                    } & { [K_398 in Exclude<keyof I["blocks"]["ui"]["config"]["buttonConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Button>]: never; }) | undefined;
                    imageConfig?: ({
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } & {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        description?: string | undefined;
                        resizeMode?: import("../../../../../index.js").BlockImageResizeMode | undefined;
                    } & { [K_399 in Exclude<keyof I["blocks"]["ui"]["config"]["imageConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Image>]: never; }) | undefined;
                    spacerConfig?: ({
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } & {
                        size?: import("../../../../../index.js").BlockSpacerSize | undefined;
                        shape?: import("../../../../../index.js").BlockSpacerShape | undefined;
                    } & { [K_400 in Exclude<keyof I["blocks"]["ui"]["config"]["spacerConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Spacer>]: never; }) | undefined;
                    iconConfig?: ({
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } | undefined;
                    } & {
                        icon?: string | undefined;
                        color?: string | undefined;
                        size?: import("../../../../../index.js").BlockIconSize | undefined;
                        colors?: ({
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & {
                            light?: string | undefined;
                            dark?: string | undefined;
                        } & { [K_401 in Exclude<keyof I["blocks"]["ui"]["config"]["iconConfig"]["colors"], "$type" | keyof import("../../../../../index.js").BlockColor>]: never; }) | undefined;
                    } & { [K_402 in Exclude<keyof I["blocks"]["ui"]["config"]["iconConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Icon>]: never; }) | undefined;
                    avatarConfig?: ({
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } & {
                        thingId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockAvatarSize | undefined;
                        background?: import("../../../../../index.js").BlockAvatarBackground | undefined;
                    } & { [K_403 in Exclude<keyof I["blocks"]["ui"]["config"]["avatarConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Avatar>]: never; }) | undefined;
                    fullsnooConfig?: ({
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } & {
                        userId?: string | undefined;
                        facing?: import("../../../../../index.js").BlockAvatarFacing | undefined;
                        size?: import("../../../../../index.js").BlockFullSnooSize | undefined;
                    } & { [K_404 in Exclude<keyof I["blocks"]["ui"]["config"]["fullsnooConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_FullSnoo>]: never; }) | undefined;
                    animationConfig?: ({
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } & {
                        url?: string | undefined;
                        width?: number | undefined;
                        height?: number | undefined;
                        type?: import("../../../../../index.js").BlockAnimationType | undefined;
                        loop?: boolean | undefined;
                        loopMode?: import("../../../../../index.js").BlockAnimationLoopMode | undefined;
                        autoplay?: boolean | undefined;
                        speed?: number | undefined;
                        direction?: import("../../../../../index.js").BlockAnimationDirection | undefined;
                    } & { [K_405 in Exclude<keyof I["blocks"]["ui"]["config"]["animationConfig"], "$type" | keyof import("../../../../../index.js").BlockConfig_Animation>]: never; }) | undefined;
                    webviewConfig?: ({
                        url?: string | undefined;
                    } & {
                        url?: string | undefined;
                    } & { [K_406 in Exclude<keyof I["blocks"]["ui"]["config"]["webviewConfig"], "$type" | "url">]: never; }) | undefined;
                } & { [K_407 in Exclude<keyof I["blocks"]["ui"]["config"], "$type" | keyof import("../../../../../index.js").BlockConfig>]: never; }) | undefined;
                actions?: ({
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                }[] & ({
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                } & {
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: ({
                        [x: string]: any;
                    } & {
                        [x: string]: any;
                    } & { [K_408 in Exclude<keyof I["blocks"]["ui"]["actions"][number]["data"], string | number>]: never; }) | undefined;
                } & { [K_409 in Exclude<keyof I["blocks"]["ui"]["actions"][number], "$type" | keyof import("../../../../../index.js").BlockAction>]: never; })[] & { [K_410 in Exclude<keyof I["blocks"]["ui"]["actions"], "$type" | keyof {
                    type?: import("../../../../../index.js").BlockActionType | undefined;
                    id?: string | undefined;
                    data?: {
                        [x: string]: any;
                    } | undefined;
                }[]>]: never; }) | undefined;
            } & { [K_411 in Exclude<keyof I["blocks"]["ui"], "$type" | keyof import("../../../../../index.js").Block>]: never; }) | undefined;
        } & { [K_412 in Exclude<keyof I["blocks"], "$type" | "ui">]: never; }) | undefined;
    } & { [K_413 in Exclude<keyof I, "$type" | keyof RenderPostResponse>]: never; }>(object: I): RenderPostResponse;
};
/**
 * Custom post type.  Most custom post types will also implement InstanceSettings,
 * which will allow them to be customized by the user in the post creation flow.
 *
 * Custom post types should also look up their instance and installation settings.
 */
export interface CustomPost {
    /**
     * This is deprecated and should be fixed in time to maintain backwards compatability.
     * Please call RenderPostBody instead.
     *
     * @deprecated
     */
    RenderPost(request: RenderPostRequest, metadata?: Metadata): Promise<RenderPostResponse>;
    RenderPostContent(request: UIRequest, metadata?: Metadata): Promise<UIResponse>;
    RenderPostComposer(request: UIRequest, metadata?: Metadata): Promise<UIResponse>;
}
export declare class CustomPostClientImpl implements CustomPost {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    RenderPost(request: RenderPostRequest): Promise<RenderPostResponse>;
    RenderPostContent(request: UIRequest): Promise<UIResponse>;
    RenderPostComposer(request: UIRequest): Promise<UIResponse>;
}
/**
 * Custom post type.  Most custom post types will also implement InstanceSettings,
 * which will allow them to be customized by the user in the post creation flow.
 *
 * Custom post types should also look up their instance and installation settings.
 */
export type CustomPostDefinition = typeof CustomPostDefinition;
export declare const CustomPostDefinition: {
    name: 'CustomPost';
    fullName: string;
    methods: {
        [methodName: string]: MethodDefinition & {
            options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=custom_post.d.ts.map