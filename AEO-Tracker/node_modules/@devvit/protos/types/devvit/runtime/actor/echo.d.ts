/**
 * #echo.ts
 *
 * @packageDocumentation
 */
import { Metadata, MethodDefinition } from "@lib/Types.js";
import { Str } from '../runtime_common.js';
export interface Echo {
    Echo(request: Str, metadata?: Metadata): Promise<Str>;
}
export declare class EchoClientImpl implements Echo {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    Echo(request: Str): Promise<Str>;
}
export type EchoDefinition = typeof EchoDefinition;
export declare const EchoDefinition: {
    name: 'Echo';
    fullName: string;
    methods: {
        [methodName: string]: MethodDefinition & {
            options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=echo.d.ts.map