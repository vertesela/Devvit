import * as protos from '@devvit/protos';
import type { LinkedBundle } from '@devvit/protos';
import type { CallResponse, CallState, RuntimeLite } from './RuntimeLite.js';
export declare class UnsandboxedRuntimeLite implements RuntimeLite {
    #private;
    /**
     * @arg modules Environment dependencies available via `require(id)` to
     *              bundles loaded. @devvit/protos is provided by default.
     */
    constructor(modules?: {
        [id: string]: unknown;
    });
    enableAppLogging(): void;
    getCallState(): CallState;
    init(): Promise<void>;
    setPluginList(plugins: string[]): void;
    loadBundle(bundle: LinkedBundle): void;
    /** @arg args A Protobuf message or encoded message. */
    call(method: string, args: unknown | Uint8Array, meta: protos.Metadata | string, binary?: boolean): Promise<CallResponse>;
    onPluginResponse(id: number, result: CallResponse): void;
    quit(): void;
}
//# sourceMappingURL=UnsandboxedRuntimeLite.d.ts.map