// TODO: Per Stephen the `shared-types` name is a misnomer, since we already have
//  functional code like `NonNull` in it. This needs to live somewhere where the
//  runtime and client code can read it without creating circular dependencies,
//  so this is the most natural place for it at the moment.
export const isProd = false;
const prod = {
    flushNodeLogs: false,
    logAllEnvelopes: false,
    addDebugUtilsToEnv: false,
    assertEnvelopesPostable: false,
};
export const debug = {
    flushNodeLogs: true,
    // This environment may only be applied at compilation or only at runtime. For
    // build-only packaging, you must build the code for the environment you want.
    // Be mindful of build caching too. shared-types is a leaf dependency that may
    // not be rebuilt automatically when building another package.
    logAllEnvelopes: typeof process !== 'undefined' && process.env.TRACE_ENVELOPES === '1',
    // to-do: add logFilteredEnvelopes.
    addDebugUtilsToEnv: true,
    assertEnvelopesPostable: true,
};
export const DEBUG_CONFIG = isProd ? prod : debug;
