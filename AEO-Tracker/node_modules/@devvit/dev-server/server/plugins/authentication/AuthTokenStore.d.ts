import type { Disposable } from '@devvit/shared-types/Disposable.js';
import type { Observable } from 'rxjs';
import { StoredToken } from './StoredToken.js';
export declare const WATCHER_INTERVAL = 1000;
export type TokenInfo = {
    token: StoredToken;
    copyPaste?: boolean;
};
export declare class AuthTokenStore implements Disposable {
    #private;
    dispose(): Promise<void>;
    get updates(): Observable<TokenInfo>;
    get fileWatcherInitd(): boolean;
    constructor(dotDevvitDir?: string);
    readFSToken(): Promise<TokenInfo | undefined>;
    writeFSToken(token: StoredToken, copyPaste?: boolean): Promise<void>;
    clearToken(): Promise<void>;
}
//# sourceMappingURL=AuthTokenStore.d.ts.map