import type { AppVersionInfo, Bundle } from '@devvit/protos';
import { FullAppInfo, VersionVisibility } from '@devvit/protos';
import { DevvitVersion, VersionBumpType } from '@devvit/shared-types/Version.js';
import type { DevvitConfig } from '../util/devvitConfig.js';
import { ProjectCommand } from '../util/commands/ProjectCommand.js';
import type { FlagInput } from '@oclif/core/lib/interfaces/parser.js';
export default class Upload extends ProjectCommand {
    #private;
    static description: string;
    static flags: FlagInput;
    readonly appClient: import("@devvit/protos").AppClient;
    readonly appVersionClient: import("@devvit/protos").AppVersionClient;
    run(): Promise<void>;
    createNewApp(projectConfig: DevvitConfig, copyPaste: boolean, justDoIt: boolean): Promise<FullAppInfo>;
    /**
     * returns undefined if the app is not found, or if the user doesn't have permission to view the app
     */
    getAppBySlug(slug: string): Promise<FullAppInfo | undefined>;
    getNextVersion(appInfo: FullAppInfo, bump: VersionBumpType | undefined, prompt: boolean): Promise<DevvitVersion>;
    createVersion(appInfo: FullAppInfo, appVersion: DevvitVersion, bundles: Bundle[], visibility: VersionVisibility): Promise<AppVersionInfo>;
    bundleActors(username: string, version: string, typecheck?: boolean): Promise<Bundle[]>;
    getLatestPublishedVersion(versions: AppVersionInfo[]): DevvitVersion;
}
//# sourceMappingURL=upload.d.ts.map