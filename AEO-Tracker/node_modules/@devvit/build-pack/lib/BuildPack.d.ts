import type * as protos from '@devvit/protos';
import type { Observable } from 'rxjs';
import type { Disposable } from '@devvit/shared-types/Disposable.js';
import type { CompileLog, Metadata } from '@devvit/protos';
import type { CompileParams, CompileResponse } from '@devvit/protos';
export declare abstract class BuildPack implements protos.BuildPack, Disposable {
    static DevvitModuleEntryPoint: string;
    abstract Compile(request: CompileParams, _metadata: Metadata | undefined): Promise<CompileResponse>;
    abstract Watch(request: CompileParams, _metadata: Metadata | undefined): Observable<CompileResponse>;
    abstract dispose(): Promise<void>;
}
export declare function formatLogs(logs: readonly Readonly<CompileLog>[]): string;
export declare function formatLog(log: Readonly<CompileLog>): string;
export declare function getModuleEntrypoint(filename: string): string;
//# sourceMappingURL=BuildPack.d.ts.map