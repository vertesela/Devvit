import { SchedulerHandlerDefinition } from '@devvit/protos';
import { makeAPIClients } from '../../apis/makeAPIClients.js';
import { Devvit } from '../Devvit.js';
import { getContextFromMetadata } from './context.js';
import { extendDevvitPrototype } from './helpers/extendDevvitPrototype.js';
async function handleScheduledAction(args, metadata) {
    const jobName = args.type;
    const scheduledJobHandler = Devvit.scheduledJobHandlers.get(jobName);
    if (!scheduledJobHandler) {
        throw new Error(`Job ${jobName} not found`);
    }
    const event = {
        name: jobName,
        data: args.data,
    };
    const context = Object.assign(makeAPIClients({
        metadata,
    }), getContextFromMetadata(metadata));
    await scheduledJobHandler(event, context);
}
export function registerScheduler(config) {
    config.provides(SchedulerHandlerDefinition);
    extendDevvitPrototype('HandleScheduledAction', handleScheduledAction);
}
