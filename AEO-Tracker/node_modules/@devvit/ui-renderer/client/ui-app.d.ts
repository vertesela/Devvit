import type { CustomPost, HandleUIEventRequest, HandleUIEventResponse, Metadata, RenderPostRequest, RenderPostResponse, UIEventHandler, UIRequest, UIResponse } from '@devvit/protos';
import type { ActorRef } from '@devvit/runtimes/common/runtime/ActorRef.js';
/** An app that can render a custom post and respond to events. */
export type UIApp = CustomPost & UIEventHandler;
/**
 * Adapts an ActorRef (usually provided by the deprecated BrowserRuntime) to the
 * APIs implemented by a UIApp.
 * @deprecated
 */
export declare class RemoteApp implements UIApp {
    #private;
    constructor(ref: ActorRef);
    HandleUIEvent(req: HandleUIEventRequest, meta: Metadata | undefined): Promise<HandleUIEventResponse>;
    RenderPost(req: RenderPostRequest, meta: Metadata | undefined): Promise<RenderPostResponse>;
    RenderPostContent(req: UIRequest, meta: Metadata | undefined): Promise<UIResponse>;
    RenderPostComposer(req: UIRequest, meta: Metadata | undefined): Promise<UIResponse>;
}
//# sourceMappingURL=ui-app.d.ts.map