import type { TemplateResult } from 'lit';
import { LitElement } from 'lit';
import { FaceplateDialog } from '@reddit/faceplate-ui/components/faceplate-dialog.js';
import '@reddit/faceplate-ui/templateRenderingStrategy/clientStrategy.js';
import { FaceplateForm } from '@reddit/faceplate/components/faceplate-form.js';
import type { FaceplateEvent } from '@reddit/faceplate/event-types.js';
import type { Form } from '@devvit/protos';
import { UIEvent } from '@devvit/protos';
import '@reddit/faceplate-ui/components/faceplate-dialog';
import '@reddit/faceplate/components/faceplate-form.js';
export type DevvitFormDialogEvent = FaceplateEvent<'devvit-form-dialog-event'> & {
    detail: {
        open?: boolean;
    };
};
export declare class DevvitFormDialog extends LitElement {
    #private;
    form: Form | undefined;
    $dialog?: FaceplateDialog;
    $form?: FaceplateForm;
    static get styles(): import("lit").CSSResult[];
    showForm(form: Form, onEvent: (event: UIEvent) => void): void;
    render(): TemplateResult<1>;
}
//# sourceMappingURL=devvit-form-dialog.d.ts.map