import type { RealtimeSubscriptionsEffect, UIEvent } from '@devvit/protos';
import type { ReactiveElement } from 'lit';
import { DevvitEffectHandler } from './devvit-effect-handler.js';
export declare abstract class RealtimeEffectHandler extends DevvitEffectHandler {
    #private;
    protected constructor(host: ReactiveElement);
    abstract subscribe(channels: string[]): void;
    abstract send(channel: string, data: {
        [keys: string]: unknown;
    }): Promise<void>;
    hostConnected(): void;
    protected get onEvent(): ((event: UIEvent) => void) | undefined;
    protected onSubscribe(channel: string): void;
    protected onUnsubscribe(channel: string): void;
    onRealtimeSubscriptions(subscriptions: RealtimeSubscriptionsEffect, onEvent: (event: UIEvent) => void): void;
}
//# sourceMappingURL=realtime-effect-handler.d.ts.map