import type { StyleInfo } from 'lit/directives/style-map.js';
import { ref } from './util.js';
/**
 * Attach a ref callback to an element that ensures the assigned color is set and
 * attempts to use CSS variables for colors as a fallback
 *
 * @param style The sanitized StyleInfo
 * @param attr The attribute name to validate
 */
export declare function resolveStyleColor(style: StyleInfo, attr: string): ReturnType<typeof ref>;
/**
 * Borrowed from: https://gist.github.com/w3core/e3d9b5b6d69a3ba8671cc84714cca8a4?permalink_comment_id=3125287#gistcomment-3125287
 * Calculate brightness value by RGB or HEX color.
 * @param color (String) The color value in RGB or HEX (for example: #000000 || #000 || rgb(0,0,0) || rgba(0,0,0,0))
 * @returns (Number) The brightness value (dark) 0 ... 255 (light)
 */
export declare function brightnessByColor(color: string): number;
//# sourceMappingURL=color.d.ts.map