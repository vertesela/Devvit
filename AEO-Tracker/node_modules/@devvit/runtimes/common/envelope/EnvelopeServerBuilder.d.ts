import type { Definition } from '@devvit/protos';
import type { SystemLogger } from '../../lib/loggers/SystemLogger.js';
import type { EnvelopeRecipient } from './EnvelopeRecipient.js';
import type { IDFactory } from './IDFactory.js';
/**
 * An EnvelopeServer is a wrapper around an Actor that allows it to receive Envelopes sent
 * via a Dispatcher.
 */
export declare class EnvelopeServerBuilder {
    static build<T>(name: string, provides: Definition[], actor: T, logger?: SystemLogger, idFactory?: IDFactory): EnvelopeRecipient;
}
//# sourceMappingURL=EnvelopeServerBuilder.d.ts.map