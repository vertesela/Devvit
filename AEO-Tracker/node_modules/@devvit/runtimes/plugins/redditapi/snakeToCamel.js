import { isObject } from '@devvit/shared-types/isObject.js';
const snakeToCamel = (str) => str.replace(/([a-z])_([a-z0-9])/g, (_, p1, p2) => p1 + p2.toUpperCase());
export function deepSnakeToCamel(obj, ignoreKeys = []) {
    if (Array.isArray(obj)) {
        return obj.map((e) => (isObject(e) ? deepSnakeToCamel(e, ignoreKeys) : e));
    }
    else if (isObject(obj)) {
        const result = {};
        for (const [key, val] of Object.entries(obj)) {
            const ignoreKeyTransformation = ignoreKeys.some((regex) => regex.test(key));
            const newKey = ignoreKeyTransformation ? key : snakeToCamel(key);
            result[newKey] = deepSnakeToCamel(val, ignoreKeys);
        }
        return result;
    }
    else {
        return obj;
    }
}
