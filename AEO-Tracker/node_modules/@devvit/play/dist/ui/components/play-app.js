// Portable playground. Imported by ui/assets/index.html and built by
// tools/build.js. Defines play-app component.
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { LitElement, css, html } from 'lit';
import { customElement } from 'lit/decorators.js';
import './play-pen/play-pen.js';
let PlayApp = class PlayApp extends LitElement {
    constructor() {
        super();
        console.log(`:play v${globalThis.version} with Devvit v${globalThis.devvitVersion}`);
    }
    render() {
        return html `
      <play-pen allow-storage allow-url>
        <script lang="tsx" type="application/devvit">
          console.log('Hello World!')
        </script>
      </play-pen>
    `;
    }
};
PlayApp.styles = css `
    :host {
      /* Allow height to be specified. */
      display: block;

      /* Fill the viewport. */
      height: 100vh;
      width: 100vw;
    }
  `;
PlayApp = __decorate([
    customElement('play-app')
], PlayApp);
export { PlayApp };
//# sourceMappingURL=play-app.js.map