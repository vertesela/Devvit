/**
 * Pen state for un/packing to/from a shareable URL or LocalStorage. This
 * structure is not intended to be visible to or manually edited by users.
 */
export type PenSave = {
    /** Pen title. Possibly empty. */
    name: string;
    /** The program source code. Possibly empty. */
    src: string;
    /**
     * Pen version recorded at save time. Used for unpacking old data if
     * structural changes have been made. Independent of package.json version.
     */
    version: 1;
};
export declare function PenSave(name: string, src: string): PenSave;
/** Retrieve pen from location or storage. */
export declare function loadPen(medium: Readonly<Location> | Readonly<Storage>): PenSave | undefined;
/** Save pen to storage and location. */
export declare function savePen(location: Location | undefined, storage: Readonly<Storage> | undefined, pen: Readonly<PenSave>): void;
export declare function penToHash(pen: Readonly<PenSave>): string;
/**
 * Load pen from URL fragment.
 *
 * Fragments are used to avoid maximum query length. The approach mimics what's
 * done on [the TypeScript website] since that works well and hasn't required
 * changing in years.
 *
 * [the TypeScript website]: https://github.com/microsoft/TypeScript-Website/blob/944d9aa/packages/sandbox/src/getInitialCode.ts#L6
 */
export declare function penFromHash(hash: string): PenSave | undefined;
