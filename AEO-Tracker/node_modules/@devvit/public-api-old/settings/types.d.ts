import { FieldConfig_Boolean, FieldConfig_Number, FieldConfig_Paragraph, FieldConfig_Selection, FieldConfig_Selection_Item, FieldConfig_String, Metadata } from '@devvit/protos';
import { Prettify } from '@devvit/shared-types/Prettify.js';
export type SettingsValues = {
    [key: string]: string | string[] | boolean | number | undefined;
};
export interface SettingsFormFieldValidatorEvent<ValueType> {
    value: ValueType | undefined;
    isEditing: boolean;
}
export type OnValidateHandler<ValueType> = (event: SettingsFormFieldValidatorEvent<ValueType>, metadata: Metadata | undefined) => void | string | Promise<void | string>;
export type SettingsBaseField<ValueType> = {
    name: string;
    label: string;
    helpText?: string | undefined;
    disabled?: boolean | undefined;
    defaultValue?: ValueType | undefined;
    onValidate?: OnValidateHandler<ValueType>;
};
export type SettingsStringField = Prettify<SettingsBaseField<string> & Omit<FieldConfig_String, 'minLength' | 'maxLength'> & {
    type: 'string';
}>;
export type SettingsParagraphField = Prettify<SettingsBaseField<string> & Omit<FieldConfig_Paragraph, 'maxCharacters'> & {
    type: 'paragraph';
}>;
export type SettingsNumberField = Prettify<SettingsBaseField<number> & Omit<FieldConfig_Number, 'min' | 'max' | 'step'> & {
    type: 'number';
}>;
export type SettingsBooleanField = Prettify<Omit<SettingsBaseField<boolean>, 'required'> & FieldConfig_Boolean & {
    type: 'boolean';
}>;
export type SettingsSelectField = Prettify<SettingsBaseField<string[]> & Omit<FieldConfig_Selection, 'choices' | 'renderAsList' | 'minSelections' | 'maxSelections'> & {
    type: 'select';
    options: FieldConfig_Selection_Item[];
}>;
export type SettingsFormFieldGroup = {
    label: string;
    type: 'group';
    fields: SettingsFormField[];
    helpText?: string | undefined;
};
export type SettingsFormField = SettingsStringField | SettingsParagraphField | SettingsNumberField | SettingsBooleanField | SettingsSelectField | SettingsFormFieldGroup;
//# sourceMappingURL=types.d.ts.map