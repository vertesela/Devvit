import { Metadata } from '@devvit/protos';
import { SettingsValues } from './types.js';
/**
 * Get all stored values for the app installation in the current subreddit.
 *
 * @param {Metadata} metadata - Metadata from the originating handler. Make sure to always include this.
 * @returns {Promise<SettingsValues>} - A map of setting names to values.
 *
 * * @example
 * ```ts
 * import { Devvit, getSetting } from '@devvit/public-api-old';
 *
 * const mySettings = await getSettings(metadata);
 * ```
 */
export declare function getSettings<T extends object = SettingsValues>(metadata: Metadata | undefined): Promise<T>;
/**
 * Get a setting value by name for the app installation in the current subreddit.
 *
 * @param {string} name
 * @param {Metadata} metadata - Metadata from the originating handler. Make sure to always include this.
 * @returns {Promise<T>} - A promise that resolves to the setting value.
 *
 * @example
 * ```ts
 * import { Devvit, getSetting } from '@devvit/public-api-old';
 *
 * const mySetting = await getSetting('foo', metadata);
 * ```
 */
export declare function getSetting<T = string | string[] | boolean | number>(name: string, metadata: Metadata | undefined): Promise<T | undefined>;
//# sourceMappingURL=getSettings.d.ts.map