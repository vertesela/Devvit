var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ConfigFormBuilder_instances, _ConfigFormBuilder_fields, _ConfigFormBuilder_makeField;
import { ConfigFieldType, ConfigForm } from '@devvit/protos';
/**
 * Helper class that provides a Builder-style interface for generating a UserConfigurable ConfigForm
 */
export class ConfigFormBuilder {
    constructor() {
        _ConfigFormBuilder_instances.add(this);
        _ConfigFormBuilder_fields.set(this, []);
    }
    /**
     * Returns the constructed ConfigForm
     */
    build() {
        return ConfigForm.fromPartial({
            fields: [...__classPrivateFieldGet(this, _ConfigFormBuilder_fields, "f")],
        });
    }
    /**
     * Add a STRING parameter to the configuration (single-line string)
     */
    textField(key, label, currentValue = '') {
        return __classPrivateFieldGet(this, _ConfigFormBuilder_instances, "m", _ConfigFormBuilder_makeField).call(this, ConfigFieldType.STRING, key, label, currentValue);
    }
    /**
     * Add a NUMBER parameter to the configuration
     */
    numberField(key, label, currentValue = 0) {
        return __classPrivateFieldGet(this, _ConfigFormBuilder_instances, "m", _ConfigFormBuilder_makeField).call(this, ConfigFieldType.NUMBER, key, label, currentValue);
    }
    /**
     * Add a BOOLEAN parameter to the configuration
     */
    booleanField(key, label, currentValue = false) {
        return __classPrivateFieldGet(this, _ConfigFormBuilder_instances, "m", _ConfigFormBuilder_makeField).call(this, ConfigFieldType.BOOLEAN, key, label, currentValue);
    }
    /**
     * Add a PARAGRAPH parameter to the configuration (multi-line string)
     */
    textarea(key, label, currentValue = '') {
        return __classPrivateFieldGet(this, _ConfigFormBuilder_instances, "m", _ConfigFormBuilder_makeField).call(this, ConfigFieldType.PARAGRAPH, key, label, currentValue);
    }
}
_ConfigFormBuilder_fields = new WeakMap(), _ConfigFormBuilder_instances = new WeakSet(), _ConfigFormBuilder_makeField = function _ConfigFormBuilder_makeField(type, key, label, currentValue) {
    __classPrivateFieldGet(this, _ConfigFormBuilder_fields, "f").push({
        fieldType: type,
        key: key,
        prompt: label,
        response: JSON.stringify(currentValue),
    });
    return this;
};
