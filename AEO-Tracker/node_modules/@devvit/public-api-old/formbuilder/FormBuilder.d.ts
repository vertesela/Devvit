import { FieldConfig_Boolean, FieldConfig_List, FieldConfig_Number, FieldConfig_Paragraph, FieldConfig_Selection, FieldConfig_String, Form, FormField, FormFieldType } from '@devvit/protos';
interface SharedOptions {
    helpText?: string | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
}
type StringOptions = FieldConfig_String & {
    defaultValue?: string | undefined;
};
type ParagraphOptions = FieldConfig_Paragraph & {
    defaultValue?: string | undefined;
};
type NumberOptions = FieldConfig_Number & {
    defaultValue?: number | undefined;
};
type BooleanOptions = FieldConfig_Boolean & {
    defaultValue?: boolean | undefined;
};
type SelectionOptions = Omit<FieldConfig_Selection, 'choices'> & {
    defaultValue?: string[] | undefined;
};
type ListOptions = Omit<FieldConfig_List, 'itemType'> & {
    defaultValue?: string[] | number[] | undefined;
};
declare abstract class FormFieldsBuilder {
    #private;
    protected fields: FormField[];
    string(fieldId: string, label: string, options?: SharedOptions & StringOptions): this;
    paragraph(fieldId: string, label: string, options?: SharedOptions & ParagraphOptions): this;
    number(fieldId: string, label: string, options?: SharedOptions & NumberOptions): this;
    boolean(fieldId: string, label: string, options?: SharedOptions & BooleanOptions): this;
    selection(fieldId: string, label: string, choices: Record<string, string>, options?: SharedOptions & SelectionOptions): this;
    list(fieldId: string, label: string, itemType: FormFieldType.STRING | FormFieldType.NUMBER, options?: SharedOptions & ListOptions): this;
    groupBuilder(label: string, helpText?: string): GroupBuilder<this>;
}
type FormOptions = Omit<Form, 'fields'>;
export declare class FormBuilder extends FormFieldsBuilder {
    #private;
    constructor(options?: FormOptions);
    build(): Form;
}
type OnBuildDelegate = (fields: FormField[]) => ThisType<FormFieldsBuilder>;
declare class GroupBuilder<P> extends FormFieldsBuilder {
    #private;
    constructor(parent: P, onBuild: OnBuildDelegate);
    build(): P;
}
export {};
//# sourceMappingURL=FormBuilder.d.ts.map