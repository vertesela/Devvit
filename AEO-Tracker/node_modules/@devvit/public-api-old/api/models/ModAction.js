import { assertNonNull } from '@devvit/shared-types/NonNull.js';
import { Devvit } from '../../abstractions/Devvit.js';
import { Listing } from './Listing.js';
export function getModerationLog(options, metadata) {
    const client = Devvit.getApiClient(Devvit.Types.RedditAPI.Moderation);
    return new Listing({
        hasMore: true,
        after: options.after,
        before: options.before,
        limit: options.limit,
        pageSize: options.pageSize,
        fetch: async (fetchOptions) => {
            const response = await client.AboutLog({
                subreddit: options.subredditName,
                mod: options.moderatorId,
                type: options.type,
                ...fetchOptions,
            }, metadata);
            return aboutLogResponseToModActions(response);
        },
    });
}
function aboutLogResponseToModActions(response) {
    if (!response.data?.children) {
        throw new Error('AboutLogResponse is missing children');
    }
    const children = response.data.children.map((child) => {
        if (!child.data) {
            throw new Error('ModAction from AboutLogResponse is missing or invalid');
        }
        const { id, mod, modId36, createdUtc, subreddit, subredditNamePrefixed, action, srId36, description, details, targetAuthor, targetBody, targetFullname, targetPermalink, targetTitle, } = child.data;
        assertNonNull(id, 'ModAction from AboutLogResponse is missing id');
        assertNonNull(mod, 'ModAction from AboutLogResponse is missing mod');
        assertNonNull(modId36, 'ModAction from AboutLogResponse is missing modId36');
        assertNonNull(createdUtc, 'ModAction from AboutLogResponse is missing createdUtc');
        assertNonNull(subreddit, 'ModAction from AboutLogResponse is missing subreddit');
        assertNonNull(subredditNamePrefixed, 'ModAction from AboutLogResponse is missing subredditNamePrefixed');
        assertNonNull(action, 'ModAction from AboutLogResponse is missing action');
        assertNonNull(srId36, 'ModAction from AboutLogResponse is missing srId36');
        const createdAt = new Date(0);
        createdAt.setUTCSeconds(createdUtc);
        const modAction = {
            id,
            type: action,
            moderatorName: mod,
            moderatorId: `t2_${modId36}`,
            createdAt,
            subredditName: subreddit,
            subredditId: `t5_${srId36}`,
            description,
            details,
            target: targetFullname
                ? {
                    id: targetFullname,
                    author: targetAuthor,
                    body: targetBody,
                    permalink: targetPermalink,
                    title: targetTitle,
                }
                : undefined,
        };
        return modAction;
    });
    return {
        children,
        after: response.data.after,
        before: response.data.before,
    };
}
