import { Categories, categoriesFromJSON } from '@devvit/protos';
import * as path from 'path';
export const APP_CATEGORIES = Object.keys(Categories)
    .filter((k) => isNaN(Number(k)))
    .map((c) => categoriesFromJSON(c));
export const APP_CATEGORIES_KEYS = Object.keys(Categories).filter((k) => isNaN(Number(k)));
export const ACTOR_SRC_DIR = 'src';
export const ACTOR_SRC_PRIMARY_NAME = 'main';
// NOTE: This is a workaround for the fact that path.join is not available in the browser
export const ACTOR_SRC_PRIMARY_ENTRY_POINT = typeof path.join === 'function'
    ? path.join(ACTOR_SRC_DIR, `${ACTOR_SRC_PRIMARY_NAME}.ts`)
    : `${ACTOR_SRC_DIR}/${ACTOR_SRC_PRIMARY_NAME}.ts`;
export const ACTOR_SRC_PRIMARY_ENTRY_POINT_JSX = `${ACTOR_SRC_PRIMARY_ENTRY_POINT}x`;
export const ACTORS_DIR_LEGACY = 'actors';
export const ASSET_DIRECTORY = 'assets';
/**
 * The list of accepted asset mimetypes for devvit apps
 */
// This can expand to include mp4 and quicktime in the future
export const ACCEPTED_ASSET_MIME_TYPES = ['image/png', 'image/jpeg', 'image/gif', 'image/webp'];
/**
 * The hashing algorithm used - pass this to `createHash`
 */
export const ASSET_HASHING_ALGO = 'sha256';
/**
 * The max number of subscribers allowed in a test subreddit (ie where a user can install an uploaded, private app
 * Determines if a PRIVATE (unpublished) version of an app can be installed or playtested
 *
 * TODO: turn this off before we go live - see DX-1336
 *  */
export const MAX_ALLOWED_SUBSCRIBER_COUNT = 50;
