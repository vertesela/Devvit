var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _RichTextBuilder_content;
import { mixinBlockQuoteContext, mixinCodeBlockContext, mixinEmbedContext, mixinHeadingContext, mixinHorizontalRuleContext, mixinImageContext, mixinListContext, mixinParagraphContext, mixinTableContext, mixinVideoContext, } from './mixins.js';
/**
 * @mixes ParagraphContainer
 * @mixes HeadingContainer
 * @mixes HorizontalRuleContainer
 * @mixes BlockQuoteContainer
 * @mixes CodeBlockContainer
 * @mixes EmbedContainer
 * @mixes ListContainer
 * @mixes TableContainer
 * @mixes ImageContainer
 * @mixes VideoContainer
 */
export class RichTextBuilder {
    constructor() {
        _RichTextBuilder_content.set(this, void 0);
        const content = [];
        Object.assign(this, mixinParagraphContext(this, content), mixinHeadingContext(this, content), mixinHorizontalRuleContext(this, content), mixinBlockQuoteContext(this, content), mixinCodeBlockContext(this, content), mixinEmbedContext(this, content), mixinListContext(this, content), mixinTableContext(this, content), mixinImageContext(this, content), mixinVideoContext(this, content));
        __classPrivateFieldSet(this, _RichTextBuilder_content, {
            document: content,
        }, "f");
    }
    /**
     * Serializes the document to a JSON string
     */
    build() {
        return JSON.stringify(__classPrivateFieldGet(this, _RichTextBuilder_content, "f"));
    }
    // #region Empty interface methods
    /* These are here to satisfy the interfaces but are overwritten by the mixins in the constructor */
    paragraph(cb) {
        cb;
        return this;
    }
    heading(opts, cb) {
        opts;
        cb;
        return this;
    }
    horizontalRule() {
        return this;
    }
    blockQuote(opts, cb) {
        opts;
        cb;
        return this;
    }
    codeBlock(opts, cb) {
        opts;
        cb;
        return this;
    }
    embed(_opts) {
        return this;
    }
    list(opts, cb) {
        opts;
        cb;
        return this;
    }
    table(cb) {
        cb;
        return this;
    }
    image(opts) {
        opts;
        return this;
    }
    animatedImage(opts) {
        opts;
        return this;
    }
    video(opts) {
        opts;
        return this;
    }
}
_RichTextBuilder_content = new WeakMap();
