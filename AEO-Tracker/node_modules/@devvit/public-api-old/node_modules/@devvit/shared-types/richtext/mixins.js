import { makeAnimatedImage, makeBlockQuote, makeCodeBlock, makeCommentLink, makeEmbed, makeHeadingContext, makeHorizontalRule, makeImage, makeLineBreak, makeLink, makeList, makeListItem, makeParagraph, makePostLink, makeRawText, makeSpoilerText, makeSubredditLink, makeTable, makeTableCell, makeTableHeaderCell, makeTableRow, makeText, makeUserLink, makeUserMention, makeVideo, } from './elements.js';
export function mixinBlockQuoteContext(ctx, c) {
    return {
        blockQuote(opts, cb) {
            c.push(makeBlockQuote(opts, cb));
            return ctx;
        },
    };
}
export function mixinCodeBlockContext(ctx, c) {
    return {
        codeBlock(opts, cb) {
            c.push(makeCodeBlock(opts, cb));
            return ctx;
        },
    };
}
export function mixinEmbedContext(ctx, c) {
    return {
        embed(opts) {
            c.push(makeEmbed(opts));
            return ctx;
        },
    };
}
export function mixinHeadingContext(ctx, c) {
    return {
        heading(opts, cb) {
            c.push(makeHeadingContext(opts, cb));
            return ctx;
        },
    };
}
export function mixinHorizontalRuleContext(ctx, c) {
    return {
        horizontalRule() {
            c.push(makeHorizontalRule());
            return ctx;
        },
    };
}
export function mixinImageContext(ctx, c) {
    return {
        image(opts) {
            c.push(makeImage(opts));
            return ctx;
        },
        animatedImage(opts) {
            c.push(makeAnimatedImage(opts));
            return ctx;
        },
    };
}
export function mixinLineBreakContext(ctx, c) {
    return {
        linebreak() {
            c.push(makeLineBreak());
            return ctx;
        },
    };
}
export function mixinLinkContext(ctx, c) {
    return {
        link(opts) {
            c.push(makeLink(opts));
            return ctx;
        },
        commentLink(opts) {
            c.push(makeCommentLink(opts));
            return ctx;
        },
        postLink(opts) {
            c.push(makePostLink(opts));
            return ctx;
        },
        subredditLink(opts) {
            c.push(makeSubredditLink(opts));
            return ctx;
        },
        userLink(opts) {
            c.push(makeUserLink(opts));
            return ctx;
        },
        userMention(opts) {
            c.push(makeUserMention(opts));
            return ctx;
        },
    };
}
export function mixinListContext(ctx, c) {
    return {
        list(opts, cb) {
            c.push(makeList(opts, cb));
            return ctx;
        },
    };
}
export function mixinListItemContext(ctx, c) {
    return {
        item(cb) {
            c.push(makeListItem(cb));
            return ctx;
        },
    };
}
export function mixinParagraphContext(ctx, c) {
    return {
        paragraph(cb) {
            c.push(makeParagraph(cb));
            return ctx;
        },
    };
}
export function mixinRawTextContext(ctx, c) {
    return {
        rawText(text) {
            c.push(makeRawText(text));
            return ctx;
        },
    };
}
export function mixinSpoilerContext(ctx, c) {
    return {
        spoiler(cb) {
            c.push(makeSpoilerText(cb));
            return ctx;
        },
    };
}
export function mixinTableContentContext(ctx, h, c) {
    return {
        headerCell(opts, cb) {
            h.push(makeTableHeaderCell(opts, cb));
            return ctx;
        },
        row(cb) {
            c.push(makeTableRow(cb));
            return ctx;
        },
    };
}
export function mixinTableContext(ctx, c) {
    return {
        table(cb) {
            c.push(makeTable(cb));
            return ctx;
        },
    };
}
export function mixinTableRowContext(ctx, c) {
    return {
        cell(cb) {
            c.push(makeTableCell(cb));
            return ctx;
        },
    };
}
export function mixinTextContext(ctx, c) {
    return {
        text(opts) {
            c.push(makeText(opts));
            return ctx;
        },
    };
}
export function mixinVideoContext(ctx, c) {
    return {
        video(opts) {
            c.push(makeVideo(opts));
            return ctx;
        },
    };
}
