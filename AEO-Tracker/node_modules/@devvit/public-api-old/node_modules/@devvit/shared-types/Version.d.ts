import { AppVersionInfo } from '@devvit/protos';
export declare enum VersionBumpType {
    Major = "major",
    Minor = "minor",
    Patch = "patch",
    Prerelease = "prerelease"
}
export declare class DevvitVersion {
    #private;
    static fromString(str: string): DevvitVersion;
    static fromProtoAppVersionInfo(version: Pick<AppVersionInfo, 'majorVersion' | 'minorVersion' | 'patchVersion' | 'prereleaseVersion'>): DevvitVersion;
    constructor(major: number, minor: number, patch: number, prerelease?: number);
    get major(): number;
    get minor(): number;
    get patch(): number;
    get prerelease(): number | undefined;
    clone(): DevvitVersion;
    isEqual(rhs: Readonly<DevvitVersion>): boolean;
    bumpVersion(bumpType: VersionBumpType): void;
    newerThan(rhs: Readonly<DevvitVersion>): boolean;
    toString(): string;
    /**
     * @description return 1 if greater than rhs, -1 if less, and 0 if equal
     */
    compare(rhs: Readonly<DevvitVersion>): 1 | -1 | 0;
}
//# sourceMappingURL=Version.d.ts.map