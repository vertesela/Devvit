/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { SettingsRequest, SettingsResponse } from './settings.js';
export interface SettingsTwirp<T extends TwirpContext = TwirpContext> {
    GetSettings(ctx: T, request: SettingsRequest): Promise<SettingsResponse>;
}
export declare enum SettingsMethod {
    GetSettings = "GetSettings"
}
export declare const SettingsMethodList: SettingsMethod[];
export declare function createSettingsServer<T extends TwirpContext = TwirpContext>(service: SettingsTwirp<T>): TwirpServer<SettingsTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse>>, T>;
//# sourceMappingURL=settings.twirp.d.ts.map