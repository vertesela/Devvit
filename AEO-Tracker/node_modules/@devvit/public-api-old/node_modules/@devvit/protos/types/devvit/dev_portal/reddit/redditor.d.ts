/**
 * #redditor.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
/** Reddit user from GraphQL */
export interface Redditor {
    /** t2_* userid */
    id: string;
    displayName: string;
    /** url pointing to redditor's snoovatar icon */
    snoovatarIconUrl: string;
}
export declare const Redditor: {
    $type: "devvit.dev_portal.reddit.Redditor";
    encode(message: Redditor, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Redditor;
    fromJSON(object: any): Redditor;
    toJSON(message: Redditor): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        displayName?: string | undefined;
        snoovatarIconUrl?: string | undefined;
    } & {
        id?: string | undefined;
        displayName?: string | undefined;
        snoovatarIconUrl?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof Redditor>]: never; }>(object: I): Redditor;
};
//# sourceMappingURL=redditor.d.ts.map