/**
 * #post_filter.ts
 *
 * @packageDocumentation
 */
import { Metadata } from "@lib/Types.js";
import _m0 from 'protobufjs/minimal.js';
import { Post } from '../../reddit/post.js';
export interface PostFilterRequest {
    post?: Post;
}
export interface Response {
    accepted: boolean;
}
export declare const PostFilterRequest: {
    $type: "devvit.actor.reddit.PostFilterRequest";
    encode(message: PostFilterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PostFilterRequest;
    fromJSON(object: any): PostFilterRequest;
    toJSON(message: PostFilterRequest): unknown;
    fromPartial<I extends {
        post?: {
            allAwardings?: {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] | undefined;
            allowLiveComments?: boolean | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: string[] | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            category?: string | undefined;
            clicked?: boolean | undefined;
            contentCategories?: string[] | undefined;
            contestMode?: boolean | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            discussionType?: string | undefined;
            distinguished?: string | undefined;
            domain?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            hideScore?: boolean | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            isMeta?: boolean | undefined;
            isOriginalContent?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isRobotIndexable?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            likes?: boolean | undefined;
            linkFlairBackgroundColor?: string | undefined;
            linkFlairCssClass?: string | undefined;
            linkFlairRichtext?: string[] | undefined;
            linkFlairTextColor?: string | undefined;
            linkFlairText?: string | undefined;
            linkFlairType?: string | undefined;
            locked?: boolean | undefined;
            mediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            mediaOnly?: boolean | undefined;
            media?: {
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: any[][] | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numComments?: number | undefined;
            numCrossposts?: number | undefined;
            numDuplicates?: number | undefined;
            numReports?: number | undefined;
            over18?: boolean | undefined;
            parentWhitelistStatus?: string | undefined;
            permalink?: string | undefined;
            pinned?: boolean | undefined;
            postHint?: string | undefined;
            preview?: {
                enabled?: boolean | undefined;
                images?: {
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
            pwls?: number | undefined;
            quarantine?: boolean | undefined;
            removalReason?: string | undefined;
            removedByCategory?: string | undefined;
            removedBy?: string | undefined;
            removed?: boolean | undefined;
            reportReasons?: string[] | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            secureMediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            secureMedia?: {
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } | undefined;
            selftextHtml?: string | undefined;
            selftext?: string | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            spoiler?: boolean | undefined;
            stickied?: boolean | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditSubscribers?: number | undefined;
            subredditType?: string | undefined;
            subreddit?: string | undefined;
            suggestedSort?: string | undefined;
            thumbnailHeight?: number | undefined;
            thumbnailWidth?: number | undefined;
            thumbnail?: string | undefined;
            title?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: string[] | undefined;
            ups?: number | undefined;
            upvoteRatio?: number | undefined;
            urlOverriddenByDest?: string | undefined;
            url?: string | undefined;
            userReports?: any[][] | undefined;
            viewCount?: number | undefined;
            visited?: boolean | undefined;
            whitelistStatus?: string | undefined;
            wls?: number | undefined;
            linkFlairTemplateId?: string | undefined;
            crowdControlLevel?: number | undefined;
            isGallery?: boolean | undefined;
            isLiveStream?: boolean | undefined;
            isMetaDiscussion?: boolean | undefined;
            oembed?: {
                authorName?: string | undefined;
                authorUrl?: string | undefined;
                description?: string | undefined;
                title?: string | undefined;
            } | undefined;
            banInfo?: {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
            gallery?: {
                body?: string | undefined;
                domain?: string | undefined;
                url?: string | undefined;
            } | undefined;
        } | undefined;
    } & {
        post?: ({
            allAwardings?: {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] | undefined;
            allowLiveComments?: boolean | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: string[] | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            category?: string | undefined;
            clicked?: boolean | undefined;
            contentCategories?: string[] | undefined;
            contestMode?: boolean | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            discussionType?: string | undefined;
            distinguished?: string | undefined;
            domain?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            hideScore?: boolean | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            isMeta?: boolean | undefined;
            isOriginalContent?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isRobotIndexable?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            likes?: boolean | undefined;
            linkFlairBackgroundColor?: string | undefined;
            linkFlairCssClass?: string | undefined;
            linkFlairRichtext?: string[] | undefined;
            linkFlairTextColor?: string | undefined;
            linkFlairText?: string | undefined;
            linkFlairType?: string | undefined;
            locked?: boolean | undefined;
            mediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            mediaOnly?: boolean | undefined;
            media?: {
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: any[][] | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numComments?: number | undefined;
            numCrossposts?: number | undefined;
            numDuplicates?: number | undefined;
            numReports?: number | undefined;
            over18?: boolean | undefined;
            parentWhitelistStatus?: string | undefined;
            permalink?: string | undefined;
            pinned?: boolean | undefined;
            postHint?: string | undefined;
            preview?: {
                enabled?: boolean | undefined;
                images?: {
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
            pwls?: number | undefined;
            quarantine?: boolean | undefined;
            removalReason?: string | undefined;
            removedByCategory?: string | undefined;
            removedBy?: string | undefined;
            removed?: boolean | undefined;
            reportReasons?: string[] | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            secureMediaEmbed?: {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } | undefined;
            secureMedia?: {
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } | undefined;
            selftextHtml?: string | undefined;
            selftext?: string | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            spoiler?: boolean | undefined;
            stickied?: boolean | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditSubscribers?: number | undefined;
            subredditType?: string | undefined;
            subreddit?: string | undefined;
            suggestedSort?: string | undefined;
            thumbnailHeight?: number | undefined;
            thumbnailWidth?: number | undefined;
            thumbnail?: string | undefined;
            title?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: string[] | undefined;
            ups?: number | undefined;
            upvoteRatio?: number | undefined;
            urlOverriddenByDest?: string | undefined;
            url?: string | undefined;
            userReports?: any[][] | undefined;
            viewCount?: number | undefined;
            visited?: boolean | undefined;
            whitelistStatus?: string | undefined;
            wls?: number | undefined;
            linkFlairTemplateId?: string | undefined;
            crowdControlLevel?: number | undefined;
            isGallery?: boolean | undefined;
            isLiveStream?: boolean | undefined;
            isMetaDiscussion?: boolean | undefined;
            oembed?: {
                authorName?: string | undefined;
                authorUrl?: string | undefined;
                description?: string | undefined;
                title?: string | undefined;
            } | undefined;
            banInfo?: {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
            gallery?: {
                body?: string | undefined;
                domain?: string | undefined;
                url?: string | undefined;
            } | undefined;
        } & {
            allAwardings?: ({
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] & ({
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            } & {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] & ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K in Exclude<keyof I["post"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_1 in Exclude<keyof I["post"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[]>]: never; }) | undefined;
                resizedStaticIcons?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] & ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K_2 in Exclude<keyof I["post"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_3 in Exclude<keyof I["post"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[]>]: never; }) | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            } & { [K_4 in Exclude<keyof I["post"]["allAwardings"][number], "$type" | keyof import("../../reddit/common.js").Awarding>]: never; })[] & { [K_5 in Exclude<keyof I["post"]["allAwardings"], "$type" | keyof {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[]>]: never; }) | undefined;
            allowLiveComments?: boolean | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: ({
                e?: string | undefined;
                t?: string | undefined;
            }[] & ({
                e?: string | undefined;
                t?: string | undefined;
            } & {
                e?: string | undefined;
                t?: string | undefined;
            } & { [K_6 in Exclude<keyof I["post"]["authorFlairRichtext"][number], "$type" | keyof import("../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_7 in Exclude<keyof I["post"]["authorFlairRichtext"], "$type" | keyof {
                e?: string | undefined;
                t?: string | undefined;
            }[]>]: never; }) | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: (string[] & string[] & { [K_8 in Exclude<keyof I["post"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            category?: string | undefined;
            clicked?: boolean | undefined;
            contentCategories?: (string[] & string[] & { [K_9 in Exclude<keyof I["post"]["contentCategories"], "$type" | keyof string[]>]: never; }) | undefined;
            contestMode?: boolean | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            discussionType?: string | undefined;
            distinguished?: string | undefined;
            domain?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: ({
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } & {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } & { [K_10 in Exclude<keyof I["post"]["gildings"], "$type" | keyof import("../../reddit/common.js").Gildings>]: never; }) | undefined;
            hidden?: boolean | undefined;
            hideScore?: boolean | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isCreatedFromAdsUi?: boolean | undefined;
            isCrosspostable?: boolean | undefined;
            isMeta?: boolean | undefined;
            isOriginalContent?: boolean | undefined;
            isRedditMediaDomain?: boolean | undefined;
            isRobotIndexable?: boolean | undefined;
            isSelf?: boolean | undefined;
            isVideo?: boolean | undefined;
            likes?: boolean | undefined;
            linkFlairBackgroundColor?: string | undefined;
            linkFlairCssClass?: string | undefined;
            linkFlairRichtext?: (string[] & string[] & { [K_11 in Exclude<keyof I["post"]["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
            linkFlairTextColor?: string | undefined;
            linkFlairText?: string | undefined;
            linkFlairType?: string | undefined;
            locked?: boolean | undefined;
            mediaEmbed?: ({
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & { [K_12 in Exclude<keyof I["post"]["mediaEmbed"], "$type" | keyof import("../../reddit/common.js").MediaEmbed>]: never; }) | undefined;
            mediaOnly?: boolean | undefined;
            media?: ({
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } & {
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } & { [K_13 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/post.js").Media_RedditVideo>]: never; }) | undefined;
            } & { [K_14 in Exclude<keyof I["post"]["media"], "$type" | "redditVideo">]: never; }) | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: (any[][] & (any[] & any[] & { [K_15 in Exclude<keyof I["post"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_16 in Exclude<keyof I["post"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numComments?: number | undefined;
            numCrossposts?: number | undefined;
            numDuplicates?: number | undefined;
            numReports?: number | undefined;
            over18?: boolean | undefined;
            parentWhitelistStatus?: string | undefined;
            permalink?: string | undefined;
            pinned?: boolean | undefined;
            postHint?: string | undefined;
            preview?: ({
                enabled?: boolean | undefined;
                images?: {
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } & {
                enabled?: boolean | undefined;
                images?: ({
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                }[] & ({
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                } & {
                    id?: string | undefined;
                    resolutions?: ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] & ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & { [K_17 in Exclude<keyof I["post"]["preview"]["images"][number]["resolutions"][number], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; })[] & { [K_18 in Exclude<keyof I["post"]["preview"]["images"][number]["resolutions"], "$type" | keyof {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[]>]: never; }) | undefined;
                    source?: ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & { [K_19 in Exclude<keyof I["post"]["preview"]["images"][number]["source"], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; }) | undefined;
                    variants?: ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & { [K_20 in Exclude<keyof I["post"]["preview"]["images"][number]["variants"], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; }) | undefined;
                } & { [K_21 in Exclude<keyof I["post"]["preview"]["images"][number], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage>]: never; })[] & { [K_22 in Exclude<keyof I["post"]["preview"]["images"], "$type" | keyof {
                    id?: string | undefined;
                    resolutions?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    source?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                    variants?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } | undefined;
                }[]>]: never; }) | undefined;
            } & { [K_23 in Exclude<keyof I["post"]["preview"], "$type" | keyof import("../../reddit/post.js").Preview>]: never; }) | undefined;
            pwls?: number | undefined;
            quarantine?: boolean | undefined;
            removalReason?: string | undefined;
            removedByCategory?: string | undefined;
            removedBy?: string | undefined;
            removed?: boolean | undefined;
            reportReasons?: (string[] & string[] & { [K_24 in Exclude<keyof I["post"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            secureMediaEmbed?: ({
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & {
                content?: string | undefined;
                width?: number | undefined;
                height?: number | undefined;
                sandbox?: boolean | undefined;
                scrolling?: boolean | undefined;
                publicThumbnailUrl?: string | undefined;
            } & { [K_25 in Exclude<keyof I["post"]["secureMediaEmbed"], "$type" | keyof import("../../reddit/common.js").MediaEmbed>]: never; }) | undefined;
            secureMedia?: ({
                redditVideo?: {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } & {
                redditVideo?: ({
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } & {
                    bitrateKbps?: number | undefined;
                    dashUrl?: string | undefined;
                    duration?: number | undefined;
                    fallbackUrl?: string | undefined;
                    height?: number | undefined;
                    hlsUrl?: string | undefined;
                    isGif?: boolean | undefined;
                    scrubberMediaUrl?: string | undefined;
                    transcodingStatus?: string | undefined;
                    width?: number | undefined;
                } & { [K_26 in Exclude<keyof I["post"]["secureMedia"]["redditVideo"], "$type" | keyof import("../../reddit/post.js").Media_RedditVideo>]: never; }) | undefined;
            } & { [K_27 in Exclude<keyof I["post"]["secureMedia"], "$type" | "redditVideo">]: never; }) | undefined;
            selftextHtml?: string | undefined;
            selftext?: string | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            spoiler?: boolean | undefined;
            stickied?: boolean | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditSubscribers?: number | undefined;
            subredditType?: string | undefined;
            subreddit?: string | undefined;
            suggestedSort?: string | undefined;
            thumbnailHeight?: number | undefined;
            thumbnailWidth?: number | undefined;
            thumbnail?: string | undefined;
            title?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: (string[] & string[] & { [K_28 in Exclude<keyof I["post"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
            ups?: number | undefined;
            upvoteRatio?: number | undefined;
            urlOverriddenByDest?: string | undefined;
            url?: string | undefined;
            userReports?: (any[][] & (any[] & any[] & { [K_29 in Exclude<keyof I["post"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_30 in Exclude<keyof I["post"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
            viewCount?: number | undefined;
            visited?: boolean | undefined;
            whitelistStatus?: string | undefined;
            wls?: number | undefined;
            linkFlairTemplateId?: string | undefined;
            crowdControlLevel?: number | undefined;
            isGallery?: boolean | undefined;
            isLiveStream?: boolean | undefined;
            isMetaDiscussion?: boolean | undefined;
            oembed?: ({
                authorName?: string | undefined;
                authorUrl?: string | undefined;
                description?: string | undefined;
                title?: string | undefined;
            } & {
                authorName?: string | undefined;
                authorUrl?: string | undefined;
                description?: string | undefined;
                title?: string | undefined;
            } & { [K_31 in Exclude<keyof I["post"]["oembed"], "$type" | keyof import("../../reddit/post.js").OEmbed>]: never; }) | undefined;
            banInfo?: ({
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } & {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } & { [K_32 in Exclude<keyof I["post"]["banInfo"], "$type" | keyof import("../../reddit/common.js").BanInfo>]: never; }) | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
            gallery?: ({
                body?: string | undefined;
                domain?: string | undefined;
                url?: string | undefined;
            } & {
                body?: string | undefined;
                domain?: string | undefined;
                url?: string | undefined;
            } & { [K_33 in Exclude<keyof I["post"]["gallery"], "$type" | keyof import("../../reddit/post.js").RedditPostGallery>]: never; }) | undefined;
        } & { [K_34 in Exclude<keyof I["post"], "$type" | keyof Post>]: never; }) | undefined;
    } & { [K_35 in Exclude<keyof I, "$type" | "post">]: never; }>(object: I): PostFilterRequest;
};
export declare const Response: {
    $type: "devvit.actor.reddit.Response";
    encode(message: Response, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Response;
    fromJSON(object: any): Response;
    toJSON(message: Response): unknown;
    fromPartial<I extends {
        accepted?: boolean | undefined;
    } & {
        accepted?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | "accepted">]: never; }>(object: I): Response;
};
export interface PostFilter {
    Filter(request: PostFilterRequest, metadata?: Metadata): Promise<Response>;
}
export declare class PostFilterClientImpl implements PostFilter {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    Filter(request: PostFilterRequest): Promise<Response>;
}
export type PostFilterDefinition = typeof PostFilterDefinition;
export declare const PostFilterDefinition: {
    readonly name: "PostFilter";
    readonly fullName: "devvit.actor.reddit.PostFilter";
    readonly methods: {
        readonly filter: {
            readonly name: "Filter";
            readonly requestType: {
                $type: "devvit.actor.reddit.PostFilterRequest";
                encode(message: PostFilterRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): PostFilterRequest;
                fromJSON(object: any): PostFilterRequest;
                toJSON(message: PostFilterRequest): unknown;
                fromPartial<I extends {
                    post?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        allowLiveComments?: boolean | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        category?: string | undefined;
                        clicked?: boolean | undefined;
                        contentCategories?: string[] | undefined;
                        contestMode?: boolean | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        discussionType?: string | undefined;
                        distinguished?: string | undefined;
                        domain?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        hidden?: boolean | undefined;
                        hideScore?: boolean | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isCreatedFromAdsUi?: boolean | undefined;
                        isCrosspostable?: boolean | undefined;
                        isMeta?: boolean | undefined;
                        isOriginalContent?: boolean | undefined;
                        isRedditMediaDomain?: boolean | undefined;
                        isRobotIndexable?: boolean | undefined;
                        isSelf?: boolean | undefined;
                        isVideo?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkFlairBackgroundColor?: string | undefined;
                        linkFlairCssClass?: string | undefined;
                        linkFlairRichtext?: string[] | undefined;
                        linkFlairTextColor?: string | undefined;
                        linkFlairText?: string | undefined;
                        linkFlairType?: string | undefined;
                        locked?: boolean | undefined;
                        mediaEmbed?: {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } | undefined;
                        mediaOnly?: boolean | undefined;
                        media?: {
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numComments?: number | undefined;
                        numCrossposts?: number | undefined;
                        numDuplicates?: number | undefined;
                        numReports?: number | undefined;
                        over18?: boolean | undefined;
                        parentWhitelistStatus?: string | undefined;
                        permalink?: string | undefined;
                        pinned?: boolean | undefined;
                        postHint?: string | undefined;
                        preview?: {
                            enabled?: boolean | undefined;
                            images?: {
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                        } | undefined;
                        pwls?: number | undefined;
                        quarantine?: boolean | undefined;
                        removalReason?: string | undefined;
                        removedByCategory?: string | undefined;
                        removedBy?: string | undefined;
                        removed?: boolean | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        secureMediaEmbed?: {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } | undefined;
                        secureMedia?: {
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } | undefined;
                        selftextHtml?: string | undefined;
                        selftext?: string | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        spoiler?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditSubscribers?: number | undefined;
                        subredditType?: string | undefined;
                        subreddit?: string | undefined;
                        suggestedSort?: string | undefined;
                        thumbnailHeight?: number | undefined;
                        thumbnailWidth?: number | undefined;
                        thumbnail?: string | undefined;
                        title?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        ups?: number | undefined;
                        upvoteRatio?: number | undefined;
                        urlOverriddenByDest?: string | undefined;
                        url?: string | undefined;
                        userReports?: any[][] | undefined;
                        viewCount?: number | undefined;
                        visited?: boolean | undefined;
                        whitelistStatus?: string | undefined;
                        wls?: number | undefined;
                        linkFlairTemplateId?: string | undefined;
                        crowdControlLevel?: number | undefined;
                        isGallery?: boolean | undefined;
                        isLiveStream?: boolean | undefined;
                        isMetaDiscussion?: boolean | undefined;
                        oembed?: {
                            authorName?: string | undefined;
                            authorUrl?: string | undefined;
                            description?: string | undefined;
                            title?: string | undefined;
                        } | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                        gallery?: {
                            body?: string | undefined;
                            domain?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    post?: ({
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        allowLiveComments?: boolean | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        category?: string | undefined;
                        clicked?: boolean | undefined;
                        contentCategories?: string[] | undefined;
                        contestMode?: boolean | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        discussionType?: string | undefined;
                        distinguished?: string | undefined;
                        domain?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        hidden?: boolean | undefined;
                        hideScore?: boolean | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isCreatedFromAdsUi?: boolean | undefined;
                        isCrosspostable?: boolean | undefined;
                        isMeta?: boolean | undefined;
                        isOriginalContent?: boolean | undefined;
                        isRedditMediaDomain?: boolean | undefined;
                        isRobotIndexable?: boolean | undefined;
                        isSelf?: boolean | undefined;
                        isVideo?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkFlairBackgroundColor?: string | undefined;
                        linkFlairCssClass?: string | undefined;
                        linkFlairRichtext?: string[] | undefined;
                        linkFlairTextColor?: string | undefined;
                        linkFlairText?: string | undefined;
                        linkFlairType?: string | undefined;
                        locked?: boolean | undefined;
                        mediaEmbed?: {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } | undefined;
                        mediaOnly?: boolean | undefined;
                        media?: {
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numComments?: number | undefined;
                        numCrossposts?: number | undefined;
                        numDuplicates?: number | undefined;
                        numReports?: number | undefined;
                        over18?: boolean | undefined;
                        parentWhitelistStatus?: string | undefined;
                        permalink?: string | undefined;
                        pinned?: boolean | undefined;
                        postHint?: string | undefined;
                        preview?: {
                            enabled?: boolean | undefined;
                            images?: {
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                        } | undefined;
                        pwls?: number | undefined;
                        quarantine?: boolean | undefined;
                        removalReason?: string | undefined;
                        removedByCategory?: string | undefined;
                        removedBy?: string | undefined;
                        removed?: boolean | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        secureMediaEmbed?: {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } | undefined;
                        secureMedia?: {
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } | undefined;
                        selftextHtml?: string | undefined;
                        selftext?: string | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        spoiler?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditSubscribers?: number | undefined;
                        subredditType?: string | undefined;
                        subreddit?: string | undefined;
                        suggestedSort?: string | undefined;
                        thumbnailHeight?: number | undefined;
                        thumbnailWidth?: number | undefined;
                        thumbnail?: string | undefined;
                        title?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        ups?: number | undefined;
                        upvoteRatio?: number | undefined;
                        urlOverriddenByDest?: string | undefined;
                        url?: string | undefined;
                        userReports?: any[][] | undefined;
                        viewCount?: number | undefined;
                        visited?: boolean | undefined;
                        whitelistStatus?: string | undefined;
                        wls?: number | undefined;
                        linkFlairTemplateId?: string | undefined;
                        crowdControlLevel?: number | undefined;
                        isGallery?: boolean | undefined;
                        isLiveStream?: boolean | undefined;
                        isMetaDiscussion?: boolean | undefined;
                        oembed?: {
                            authorName?: string | undefined;
                            authorUrl?: string | undefined;
                            description?: string | undefined;
                            title?: string | undefined;
                        } | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                        gallery?: {
                            body?: string | undefined;
                            domain?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                    } & {
                        allAwardings?: ({
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] & ({
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        } & {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] & ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & { [K in Exclude<keyof I["post"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_1 in Exclude<keyof I["post"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[]>]: never; }) | undefined;
                            resizedStaticIcons?: ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] & ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & { [K_2 in Exclude<keyof I["post"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_3 in Exclude<keyof I["post"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[]>]: never; }) | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        } & { [K_4 in Exclude<keyof I["post"]["allAwardings"][number], "$type" | keyof import("../../reddit/common.js").Awarding>]: never; })[] & { [K_5 in Exclude<keyof I["post"]["allAwardings"], "$type" | keyof {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[]>]: never; }) | undefined;
                        allowLiveComments?: boolean | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: ({
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] & ({
                            e?: string | undefined;
                            t?: string | undefined;
                        } & {
                            e?: string | undefined;
                            t?: string | undefined;
                        } & { [K_6 in Exclude<keyof I["post"]["authorFlairRichtext"][number], "$type" | keyof import("../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_7 in Exclude<keyof I["post"]["authorFlairRichtext"], "$type" | keyof {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[]>]: never; }) | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: (string[] & string[] & { [K_8 in Exclude<keyof I["post"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        category?: string | undefined;
                        clicked?: boolean | undefined;
                        contentCategories?: (string[] & string[] & { [K_9 in Exclude<keyof I["post"]["contentCategories"], "$type" | keyof string[]>]: never; }) | undefined;
                        contestMode?: boolean | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        discussionType?: string | undefined;
                        distinguished?: string | undefined;
                        domain?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: ({
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } & {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } & { [K_10 in Exclude<keyof I["post"]["gildings"], "$type" | keyof import("../../reddit/common.js").Gildings>]: never; }) | undefined;
                        hidden?: boolean | undefined;
                        hideScore?: boolean | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isCreatedFromAdsUi?: boolean | undefined;
                        isCrosspostable?: boolean | undefined;
                        isMeta?: boolean | undefined;
                        isOriginalContent?: boolean | undefined;
                        isRedditMediaDomain?: boolean | undefined;
                        isRobotIndexable?: boolean | undefined;
                        isSelf?: boolean | undefined;
                        isVideo?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkFlairBackgroundColor?: string | undefined;
                        linkFlairCssClass?: string | undefined;
                        linkFlairRichtext?: (string[] & string[] & { [K_11 in Exclude<keyof I["post"]["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
                        linkFlairTextColor?: string | undefined;
                        linkFlairText?: string | undefined;
                        linkFlairType?: string | undefined;
                        locked?: boolean | undefined;
                        mediaEmbed?: ({
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } & {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } & { [K_12 in Exclude<keyof I["post"]["mediaEmbed"], "$type" | keyof import("../../reddit/common.js").MediaEmbed>]: never; }) | undefined;
                        mediaOnly?: boolean | undefined;
                        media?: ({
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } & {
                            redditVideo?: ({
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } & {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } & { [K_13 in Exclude<keyof I["post"]["media"]["redditVideo"], "$type" | keyof import("../../reddit/post.js").Media_RedditVideo>]: never; }) | undefined;
                        } & { [K_14 in Exclude<keyof I["post"]["media"], "$type" | "redditVideo">]: never; }) | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: (any[][] & (any[] & any[] & { [K_15 in Exclude<keyof I["post"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_16 in Exclude<keyof I["post"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numComments?: number | undefined;
                        numCrossposts?: number | undefined;
                        numDuplicates?: number | undefined;
                        numReports?: number | undefined;
                        over18?: boolean | undefined;
                        parentWhitelistStatus?: string | undefined;
                        permalink?: string | undefined;
                        pinned?: boolean | undefined;
                        postHint?: string | undefined;
                        preview?: ({
                            enabled?: boolean | undefined;
                            images?: {
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                        } & {
                            enabled?: boolean | undefined;
                            images?: ({
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            }[] & ({
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            } & {
                                id?: string | undefined;
                                resolutions?: ({
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] & ({
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & { [K_17 in Exclude<keyof I["post"]["preview"]["images"][number]["resolutions"][number], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; })[] & { [K_18 in Exclude<keyof I["post"]["preview"]["images"][number]["resolutions"], "$type" | keyof {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[]>]: never; }) | undefined;
                                source?: ({
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & { [K_19 in Exclude<keyof I["post"]["preview"]["images"][number]["source"], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; }) | undefined;
                                variants?: ({
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } & { [K_20 in Exclude<keyof I["post"]["preview"]["images"][number]["variants"], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage_Image>]: never; }) | undefined;
                            } & { [K_21 in Exclude<keyof I["post"]["preview"]["images"][number], "$type" | keyof import("../../reddit/post.js").Preview_PreviewImage>]: never; })[] & { [K_22 in Exclude<keyof I["post"]["preview"]["images"], "$type" | keyof {
                                id?: string | undefined;
                                resolutions?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                }[] | undefined;
                                source?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                                variants?: {
                                    height?: number | undefined;
                                    url?: string | undefined;
                                    width?: number | undefined;
                                } | undefined;
                            }[]>]: never; }) | undefined;
                        } & { [K_23 in Exclude<keyof I["post"]["preview"], "$type" | keyof import("../../reddit/post.js").Preview>]: never; }) | undefined;
                        pwls?: number | undefined;
                        quarantine?: boolean | undefined;
                        removalReason?: string | undefined;
                        removedByCategory?: string | undefined;
                        removedBy?: string | undefined;
                        removed?: boolean | undefined;
                        reportReasons?: (string[] & string[] & { [K_24 in Exclude<keyof I["post"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        secureMediaEmbed?: ({
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } & {
                            content?: string | undefined;
                            width?: number | undefined;
                            height?: number | undefined;
                            sandbox?: boolean | undefined;
                            scrolling?: boolean | undefined;
                            publicThumbnailUrl?: string | undefined;
                        } & { [K_25 in Exclude<keyof I["post"]["secureMediaEmbed"], "$type" | keyof import("../../reddit/common.js").MediaEmbed>]: never; }) | undefined;
                        secureMedia?: ({
                            redditVideo?: {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } | undefined;
                        } & {
                            redditVideo?: ({
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } & {
                                bitrateKbps?: number | undefined;
                                dashUrl?: string | undefined;
                                duration?: number | undefined;
                                fallbackUrl?: string | undefined;
                                height?: number | undefined;
                                hlsUrl?: string | undefined;
                                isGif?: boolean | undefined;
                                scrubberMediaUrl?: string | undefined;
                                transcodingStatus?: string | undefined;
                                width?: number | undefined;
                            } & { [K_26 in Exclude<keyof I["post"]["secureMedia"]["redditVideo"], "$type" | keyof import("../../reddit/post.js").Media_RedditVideo>]: never; }) | undefined;
                        } & { [K_27 in Exclude<keyof I["post"]["secureMedia"], "$type" | "redditVideo">]: never; }) | undefined;
                        selftextHtml?: string | undefined;
                        selftext?: string | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        spoiler?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditSubscribers?: number | undefined;
                        subredditType?: string | undefined;
                        subreddit?: string | undefined;
                        suggestedSort?: string | undefined;
                        thumbnailHeight?: number | undefined;
                        thumbnailWidth?: number | undefined;
                        thumbnail?: string | undefined;
                        title?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: (string[] & string[] & { [K_28 in Exclude<keyof I["post"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
                        ups?: number | undefined;
                        upvoteRatio?: number | undefined;
                        urlOverriddenByDest?: string | undefined;
                        url?: string | undefined;
                        userReports?: (any[][] & (any[] & any[] & { [K_29 in Exclude<keyof I["post"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_30 in Exclude<keyof I["post"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                        viewCount?: number | undefined;
                        visited?: boolean | undefined;
                        whitelistStatus?: string | undefined;
                        wls?: number | undefined;
                        linkFlairTemplateId?: string | undefined;
                        crowdControlLevel?: number | undefined;
                        isGallery?: boolean | undefined;
                        isLiveStream?: boolean | undefined;
                        isMetaDiscussion?: boolean | undefined;
                        oembed?: ({
                            authorName?: string | undefined;
                            authorUrl?: string | undefined;
                            description?: string | undefined;
                            title?: string | undefined;
                        } & {
                            authorName?: string | undefined;
                            authorUrl?: string | undefined;
                            description?: string | undefined;
                            title?: string | undefined;
                        } & { [K_31 in Exclude<keyof I["post"]["oembed"], "$type" | keyof import("../../reddit/post.js").OEmbed>]: never; }) | undefined;
                        banInfo?: ({
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } & {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } & { [K_32 in Exclude<keyof I["post"]["banInfo"], "$type" | keyof import("../../reddit/common.js").BanInfo>]: never; }) | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                        gallery?: ({
                            body?: string | undefined;
                            domain?: string | undefined;
                            url?: string | undefined;
                        } & {
                            body?: string | undefined;
                            domain?: string | undefined;
                            url?: string | undefined;
                        } & { [K_33 in Exclude<keyof I["post"]["gallery"], "$type" | keyof import("../../reddit/post.js").RedditPostGallery>]: never; }) | undefined;
                    } & { [K_34 in Exclude<keyof I["post"], "$type" | keyof Post>]: never; }) | undefined;
                } & { [K_35 in Exclude<keyof I, "$type" | "post">]: never; }>(object: I): PostFilterRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.actor.reddit.Response";
                encode(message: Response, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Response;
                fromJSON(object: any): Response;
                toJSON(message: Response): unknown;
                fromPartial<I_1 extends {
                    accepted?: boolean | undefined;
                } & {
                    accepted?: boolean | undefined;
                } & { [K in Exclude<keyof I, "$type" | "accepted">]: never; }>(object: I_1): Response;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=post_filter.d.ts.map