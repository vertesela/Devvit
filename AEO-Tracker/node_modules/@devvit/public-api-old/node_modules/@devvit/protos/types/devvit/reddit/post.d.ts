/**
 * #post.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { AuthorFlairRichText, Awarding, BanInfo, Gildings, MediaEmbed } from './common.js';
export interface Post {
    allAwardings: Awarding[];
    allowLiveComments?: boolean;
    approved?: boolean;
    approvedAtUtc?: number;
    approvedBy?: string;
    archived?: boolean;
    author?: string;
    authorFlairBackgroundColor?: string;
    authorFlairCssClass?: string;
    authorFlairRichtext: AuthorFlairRichText[];
    authorFlairTemplateId?: string;
    authorFlairText?: string;
    authorFlairTextColor?: string;
    authorFlairType?: string;
    authorFullname?: string;
    authorIsBlocked?: boolean;
    authorPatreonFlair?: boolean;
    authorPremium?: boolean;
    awarders: string[];
    bannedAtUtc?: number;
    bannedBy?: string;
    canGild?: boolean;
    canModPost?: boolean;
    category?: string;
    clicked?: boolean;
    contentCategories: string[];
    contestMode?: boolean;
    created?: number;
    createdUtc?: number;
    discussionType?: string;
    distinguished?: string;
    domain?: string;
    downs?: number;
    edited?: boolean;
    gilded?: number;
    gildings?: Gildings;
    hidden?: boolean;
    hideScore?: boolean;
    id?: string;
    ignoreReports?: boolean;
    isCreatedFromAdsUi?: boolean;
    isCrosspostable?: boolean;
    isMeta?: boolean;
    isOriginalContent?: boolean;
    isRedditMediaDomain?: boolean;
    isRobotIndexable?: boolean;
    isSelf?: boolean;
    isVideo?: boolean;
    likes?: boolean;
    linkFlairBackgroundColor?: string;
    linkFlairCssClass?: string;
    linkFlairRichtext: string[];
    linkFlairTextColor?: string;
    linkFlairText?: string;
    linkFlairType?: string;
    locked?: boolean;
    mediaEmbed?: MediaEmbed;
    mediaOnly?: boolean;
    media?: Media;
    modNote?: string;
    modReasonBy?: string;
    modReasonTitle?: string;
    /** array of array of strings :-/ */
    modReports: Array<any>[];
    name?: string;
    noFollow?: boolean;
    numComments?: number;
    numCrossposts?: number;
    numDuplicates?: number;
    numReports?: number;
    over18?: boolean;
    parentWhitelistStatus?: string;
    permalink?: string;
    pinned?: boolean;
    postHint?: string;
    preview?: Preview;
    pwls?: number;
    quarantine?: boolean;
    removalReason?: string;
    removedByCategory?: string;
    removedBy?: string;
    removed?: boolean;
    reportReasons: string[];
    rteMode?: string;
    saved?: boolean;
    score?: number;
    secureMediaEmbed?: MediaEmbed;
    secureMedia?: Media;
    selftextHtml?: string;
    selftext?: string;
    sendReplies?: boolean;
    spam?: boolean;
    spoiler?: boolean;
    stickied?: boolean;
    subredditId?: string;
    subredditNamePrefixed?: string;
    subredditSubscribers?: number;
    subredditType?: string;
    subreddit?: string;
    suggestedSort?: string;
    thumbnailHeight?: number;
    thumbnailWidth?: number;
    thumbnail?: string;
    title?: string;
    topAwardedType?: string;
    totalAwardsReceived?: number;
    treatmentTags: string[];
    ups?: number;
    upvoteRatio?: number;
    urlOverriddenByDest?: string;
    url?: string;
    /** array of array of strings :-/ */
    userReports: Array<any>[];
    viewCount?: number;
    visited?: boolean;
    whitelistStatus?: string;
    wls?: number;
    /** properties for automod invocation */
    linkFlairTemplateId?: string;
    crowdControlLevel?: number;
    isGallery?: boolean;
    isLiveStream?: boolean;
    isMetaDiscussion?: boolean;
    oembed?: OEmbed;
    banInfo?: BanInfo;
    /** PRIVATE - DO NOT SET FOR PUBLIC USE */
    markedSpam?: boolean;
    /** properties for automod invocation */
    verdict?: string;
    gallery?: RedditPostGallery;
}
export interface Media {
    redditVideo?: Media_RedditVideo;
}
export interface Media_RedditVideo {
    bitrateKbps?: number;
    dashUrl?: string;
    duration?: number;
    fallbackUrl?: string;
    height?: number;
    hlsUrl?: string;
    isGif?: boolean;
    scrubberMediaUrl?: string;
    transcodingStatus?: string;
    width?: number;
}
export interface Preview {
    enabled?: boolean;
    images: Preview_PreviewImage[];
}
export interface Preview_PreviewImage {
    id?: string;
    resolutions: Preview_PreviewImage_Image[];
    source?: Preview_PreviewImage_Image;
    variants?: Preview_PreviewImage_Image;
}
export interface Preview_PreviewImage_Image {
    height?: number;
    url?: string;
    width?: number;
}
export interface OEmbed {
    authorName?: string;
    authorUrl?: string;
    description?: string;
    title?: string;
}
export interface RedditPostGallery {
    body?: string;
    domain?: string;
    url?: string;
}
export declare const Post: {
    $type: "devvit.reddit.Post";
    encode(message: Post, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Post;
    fromJSON(object: any): Post;
    toJSON(message: Post): unknown;
    fromPartial<I extends {
        allAwardings?: {
            awardSubType?: string | undefined;
            awardType?: string | undefined;
            awardingsRequiredToGrantBenefits?: number | undefined;
            coinPrice?: number | undefined;
            coinReward?: number | undefined;
            count?: number | undefined;
            daysOfDripExtension?: number | undefined;
            daysOfPremium?: number | undefined;
            description?: string | undefined;
            endDate?: string | undefined;
            giverCoinReward?: number | undefined;
            iconFormat?: string | undefined;
            iconHeight?: number | undefined;
            iconUrl?: string | undefined;
            iconWidth?: number | undefined;
            id?: string | undefined;
            isEnabled?: boolean | undefined;
            isNew?: boolean | undefined;
            name?: string | undefined;
            pennyDonate?: number | undefined;
            pennyPrice?: number | undefined;
            resizedIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            resizedStaticIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            startDate?: string | undefined;
            staticIconHeight?: number | undefined;
            staticIconUrl?: string | undefined;
            staticIconWidth?: number | undefined;
            stickyDurationSeconds?: number | undefined;
            subredditCoinReward?: number | undefined;
            subredditId?: string | undefined;
            tiersByRequiredAwardings?: string | undefined;
        }[] | undefined;
        allowLiveComments?: boolean | undefined;
        approved?: boolean | undefined;
        approvedAtUtc?: number | undefined;
        approvedBy?: string | undefined;
        archived?: boolean | undefined;
        author?: string | undefined;
        authorFlairBackgroundColor?: string | undefined;
        authorFlairCssClass?: string | undefined;
        authorFlairRichtext?: {
            e?: string | undefined;
            t?: string | undefined;
        }[] | undefined;
        authorFlairTemplateId?: string | undefined;
        authorFlairText?: string | undefined;
        authorFlairTextColor?: string | undefined;
        authorFlairType?: string | undefined;
        authorFullname?: string | undefined;
        authorIsBlocked?: boolean | undefined;
        authorPatreonFlair?: boolean | undefined;
        authorPremium?: boolean | undefined;
        awarders?: string[] | undefined;
        bannedAtUtc?: number | undefined;
        bannedBy?: string | undefined;
        canGild?: boolean | undefined;
        canModPost?: boolean | undefined;
        category?: string | undefined;
        clicked?: boolean | undefined;
        contentCategories?: string[] | undefined;
        contestMode?: boolean | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        discussionType?: string | undefined;
        distinguished?: string | undefined;
        domain?: string | undefined;
        downs?: number | undefined;
        edited?: boolean | undefined;
        gilded?: number | undefined;
        gildings?: {
            gid1?: number | undefined;
            gid2?: number | undefined;
            gid3?: number | undefined;
        } | undefined;
        hidden?: boolean | undefined;
        hideScore?: boolean | undefined;
        id?: string | undefined;
        ignoreReports?: boolean | undefined;
        isCreatedFromAdsUi?: boolean | undefined;
        isCrosspostable?: boolean | undefined;
        isMeta?: boolean | undefined;
        isOriginalContent?: boolean | undefined;
        isRedditMediaDomain?: boolean | undefined;
        isRobotIndexable?: boolean | undefined;
        isSelf?: boolean | undefined;
        isVideo?: boolean | undefined;
        likes?: boolean | undefined;
        linkFlairBackgroundColor?: string | undefined;
        linkFlairCssClass?: string | undefined;
        linkFlairRichtext?: string[] | undefined;
        linkFlairTextColor?: string | undefined;
        linkFlairText?: string | undefined;
        linkFlairType?: string | undefined;
        locked?: boolean | undefined;
        mediaEmbed?: {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } | undefined;
        mediaOnly?: boolean | undefined;
        media?: {
            redditVideo?: {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } | undefined;
        } | undefined;
        modNote?: string | undefined;
        modReasonBy?: string | undefined;
        modReasonTitle?: string | undefined;
        modReports?: any[][] | undefined;
        name?: string | undefined;
        noFollow?: boolean | undefined;
        numComments?: number | undefined;
        numCrossposts?: number | undefined;
        numDuplicates?: number | undefined;
        numReports?: number | undefined;
        over18?: boolean | undefined;
        parentWhitelistStatus?: string | undefined;
        permalink?: string | undefined;
        pinned?: boolean | undefined;
        postHint?: string | undefined;
        preview?: {
            enabled?: boolean | undefined;
            images?: {
                id?: string | undefined;
                resolutions?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                source?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
                variants?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
        pwls?: number | undefined;
        quarantine?: boolean | undefined;
        removalReason?: string | undefined;
        removedByCategory?: string | undefined;
        removedBy?: string | undefined;
        removed?: boolean | undefined;
        reportReasons?: string[] | undefined;
        rteMode?: string | undefined;
        saved?: boolean | undefined;
        score?: number | undefined;
        secureMediaEmbed?: {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } | undefined;
        secureMedia?: {
            redditVideo?: {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } | undefined;
        } | undefined;
        selftextHtml?: string | undefined;
        selftext?: string | undefined;
        sendReplies?: boolean | undefined;
        spam?: boolean | undefined;
        spoiler?: boolean | undefined;
        stickied?: boolean | undefined;
        subredditId?: string | undefined;
        subredditNamePrefixed?: string | undefined;
        subredditSubscribers?: number | undefined;
        subredditType?: string | undefined;
        subreddit?: string | undefined;
        suggestedSort?: string | undefined;
        thumbnailHeight?: number | undefined;
        thumbnailWidth?: number | undefined;
        thumbnail?: string | undefined;
        title?: string | undefined;
        topAwardedType?: string | undefined;
        totalAwardsReceived?: number | undefined;
        treatmentTags?: string[] | undefined;
        ups?: number | undefined;
        upvoteRatio?: number | undefined;
        urlOverriddenByDest?: string | undefined;
        url?: string | undefined;
        userReports?: any[][] | undefined;
        viewCount?: number | undefined;
        visited?: boolean | undefined;
        whitelistStatus?: string | undefined;
        wls?: number | undefined;
        linkFlairTemplateId?: string | undefined;
        crowdControlLevel?: number | undefined;
        isGallery?: boolean | undefined;
        isLiveStream?: boolean | undefined;
        isMetaDiscussion?: boolean | undefined;
        oembed?: {
            authorName?: string | undefined;
            authorUrl?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
        } | undefined;
        banInfo?: {
            auto?: boolean | undefined;
            bannedAt?: number | undefined;
            banner?: string | undefined;
            moderatorBanned?: boolean | undefined;
            note?: string | undefined;
            unbanner?: string | undefined;
            unbannedAt?: number | undefined;
            resetUsed?: boolean | undefined;
            reasonId?: string | undefined;
            reasonTitle?: string | undefined;
            reasonMessage?: string | undefined;
            reasonBy?: string | undefined;
            modNote?: string | undefined;
            banAllTriggered?: boolean | undefined;
            subredditMessage?: string | undefined;
            removeAction?: import("./common.js").BanInfo_BanInfoAction | undefined;
        } | undefined;
        markedSpam?: boolean | undefined;
        verdict?: string | undefined;
        gallery?: {
            body?: string | undefined;
            domain?: string | undefined;
            url?: string | undefined;
        } | undefined;
    } & {
        allAwardings?: ({
            awardSubType?: string | undefined;
            awardType?: string | undefined;
            awardingsRequiredToGrantBenefits?: number | undefined;
            coinPrice?: number | undefined;
            coinReward?: number | undefined;
            count?: number | undefined;
            daysOfDripExtension?: number | undefined;
            daysOfPremium?: number | undefined;
            description?: string | undefined;
            endDate?: string | undefined;
            giverCoinReward?: number | undefined;
            iconFormat?: string | undefined;
            iconHeight?: number | undefined;
            iconUrl?: string | undefined;
            iconWidth?: number | undefined;
            id?: string | undefined;
            isEnabled?: boolean | undefined;
            isNew?: boolean | undefined;
            name?: string | undefined;
            pennyDonate?: number | undefined;
            pennyPrice?: number | undefined;
            resizedIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            resizedStaticIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            startDate?: string | undefined;
            staticIconHeight?: number | undefined;
            staticIconUrl?: string | undefined;
            staticIconWidth?: number | undefined;
            stickyDurationSeconds?: number | undefined;
            subredditCoinReward?: number | undefined;
            subredditId?: string | undefined;
            tiersByRequiredAwardings?: string | undefined;
        }[] & ({
            awardSubType?: string | undefined;
            awardType?: string | undefined;
            awardingsRequiredToGrantBenefits?: number | undefined;
            coinPrice?: number | undefined;
            coinReward?: number | undefined;
            count?: number | undefined;
            daysOfDripExtension?: number | undefined;
            daysOfPremium?: number | undefined;
            description?: string | undefined;
            endDate?: string | undefined;
            giverCoinReward?: number | undefined;
            iconFormat?: string | undefined;
            iconHeight?: number | undefined;
            iconUrl?: string | undefined;
            iconWidth?: number | undefined;
            id?: string | undefined;
            isEnabled?: boolean | undefined;
            isNew?: boolean | undefined;
            name?: string | undefined;
            pennyDonate?: number | undefined;
            pennyPrice?: number | undefined;
            resizedIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            resizedStaticIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            startDate?: string | undefined;
            staticIconHeight?: number | undefined;
            staticIconUrl?: string | undefined;
            staticIconWidth?: number | undefined;
            stickyDurationSeconds?: number | undefined;
            subredditCoinReward?: number | undefined;
            subredditId?: string | undefined;
            tiersByRequiredAwardings?: string | undefined;
        } & {
            awardSubType?: string | undefined;
            awardType?: string | undefined;
            awardingsRequiredToGrantBenefits?: number | undefined;
            coinPrice?: number | undefined;
            coinReward?: number | undefined;
            count?: number | undefined;
            daysOfDripExtension?: number | undefined;
            daysOfPremium?: number | undefined;
            description?: string | undefined;
            endDate?: string | undefined;
            giverCoinReward?: number | undefined;
            iconFormat?: string | undefined;
            iconHeight?: number | undefined;
            iconUrl?: string | undefined;
            iconWidth?: number | undefined;
            id?: string | undefined;
            isEnabled?: boolean | undefined;
            isNew?: boolean | undefined;
            name?: string | undefined;
            pennyDonate?: number | undefined;
            pennyPrice?: number | undefined;
            resizedIcons?: ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] & ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & { [K in Exclude<keyof I["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("./common.js").Awarding_Icon>]: never; })[] & { [K_1 in Exclude<keyof I["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[]>]: never; }) | undefined;
            resizedStaticIcons?: ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] & ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & { [K_2 in Exclude<keyof I["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("./common.js").Awarding_Icon>]: never; })[] & { [K_3 in Exclude<keyof I["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[]>]: never; }) | undefined;
            startDate?: string | undefined;
            staticIconHeight?: number | undefined;
            staticIconUrl?: string | undefined;
            staticIconWidth?: number | undefined;
            stickyDurationSeconds?: number | undefined;
            subredditCoinReward?: number | undefined;
            subredditId?: string | undefined;
            tiersByRequiredAwardings?: string | undefined;
        } & { [K_4 in Exclude<keyof I["allAwardings"][number], "$type" | keyof Awarding>]: never; })[] & { [K_5 in Exclude<keyof I["allAwardings"], "$type" | keyof {
            awardSubType?: string | undefined;
            awardType?: string | undefined;
            awardingsRequiredToGrantBenefits?: number | undefined;
            coinPrice?: number | undefined;
            coinReward?: number | undefined;
            count?: number | undefined;
            daysOfDripExtension?: number | undefined;
            daysOfPremium?: number | undefined;
            description?: string | undefined;
            endDate?: string | undefined;
            giverCoinReward?: number | undefined;
            iconFormat?: string | undefined;
            iconHeight?: number | undefined;
            iconUrl?: string | undefined;
            iconWidth?: number | undefined;
            id?: string | undefined;
            isEnabled?: boolean | undefined;
            isNew?: boolean | undefined;
            name?: string | undefined;
            pennyDonate?: number | undefined;
            pennyPrice?: number | undefined;
            resizedIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            resizedStaticIcons?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            startDate?: string | undefined;
            staticIconHeight?: number | undefined;
            staticIconUrl?: string | undefined;
            staticIconWidth?: number | undefined;
            stickyDurationSeconds?: number | undefined;
            subredditCoinReward?: number | undefined;
            subredditId?: string | undefined;
            tiersByRequiredAwardings?: string | undefined;
        }[]>]: never; }) | undefined;
        allowLiveComments?: boolean | undefined;
        approved?: boolean | undefined;
        approvedAtUtc?: number | undefined;
        approvedBy?: string | undefined;
        archived?: boolean | undefined;
        author?: string | undefined;
        authorFlairBackgroundColor?: string | undefined;
        authorFlairCssClass?: string | undefined;
        authorFlairRichtext?: ({
            e?: string | undefined;
            t?: string | undefined;
        }[] & ({
            e?: string | undefined;
            t?: string | undefined;
        } & {
            e?: string | undefined;
            t?: string | undefined;
        } & { [K_6 in Exclude<keyof I["authorFlairRichtext"][number], "$type" | keyof AuthorFlairRichText>]: never; })[] & { [K_7 in Exclude<keyof I["authorFlairRichtext"], "$type" | keyof {
            e?: string | undefined;
            t?: string | undefined;
        }[]>]: never; }) | undefined;
        authorFlairTemplateId?: string | undefined;
        authorFlairText?: string | undefined;
        authorFlairTextColor?: string | undefined;
        authorFlairType?: string | undefined;
        authorFullname?: string | undefined;
        authorIsBlocked?: boolean | undefined;
        authorPatreonFlair?: boolean | undefined;
        authorPremium?: boolean | undefined;
        awarders?: (string[] & string[] & { [K_8 in Exclude<keyof I["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
        bannedAtUtc?: number | undefined;
        bannedBy?: string | undefined;
        canGild?: boolean | undefined;
        canModPost?: boolean | undefined;
        category?: string | undefined;
        clicked?: boolean | undefined;
        contentCategories?: (string[] & string[] & { [K_9 in Exclude<keyof I["contentCategories"], "$type" | keyof string[]>]: never; }) | undefined;
        contestMode?: boolean | undefined;
        created?: number | undefined;
        createdUtc?: number | undefined;
        discussionType?: string | undefined;
        distinguished?: string | undefined;
        domain?: string | undefined;
        downs?: number | undefined;
        edited?: boolean | undefined;
        gilded?: number | undefined;
        gildings?: ({
            gid1?: number | undefined;
            gid2?: number | undefined;
            gid3?: number | undefined;
        } & {
            gid1?: number | undefined;
            gid2?: number | undefined;
            gid3?: number | undefined;
        } & { [K_10 in Exclude<keyof I["gildings"], "$type" | keyof Gildings>]: never; }) | undefined;
        hidden?: boolean | undefined;
        hideScore?: boolean | undefined;
        id?: string | undefined;
        ignoreReports?: boolean | undefined;
        isCreatedFromAdsUi?: boolean | undefined;
        isCrosspostable?: boolean | undefined;
        isMeta?: boolean | undefined;
        isOriginalContent?: boolean | undefined;
        isRedditMediaDomain?: boolean | undefined;
        isRobotIndexable?: boolean | undefined;
        isSelf?: boolean | undefined;
        isVideo?: boolean | undefined;
        likes?: boolean | undefined;
        linkFlairBackgroundColor?: string | undefined;
        linkFlairCssClass?: string | undefined;
        linkFlairRichtext?: (string[] & string[] & { [K_11 in Exclude<keyof I["linkFlairRichtext"], "$type" | keyof string[]>]: never; }) | undefined;
        linkFlairTextColor?: string | undefined;
        linkFlairText?: string | undefined;
        linkFlairType?: string | undefined;
        locked?: boolean | undefined;
        mediaEmbed?: ({
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & { [K_12 in Exclude<keyof I["mediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
        mediaOnly?: boolean | undefined;
        media?: ({
            redditVideo?: {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } | undefined;
        } & {
            redditVideo?: ({
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } & {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } & { [K_13 in Exclude<keyof I["media"]["redditVideo"], "$type" | keyof Media_RedditVideo>]: never; }) | undefined;
        } & { [K_14 in Exclude<keyof I["media"], "$type" | "redditVideo">]: never; }) | undefined;
        modNote?: string | undefined;
        modReasonBy?: string | undefined;
        modReasonTitle?: string | undefined;
        modReports?: (any[][] & (any[] & any[] & { [K_15 in Exclude<keyof I["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_16 in Exclude<keyof I["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
        name?: string | undefined;
        noFollow?: boolean | undefined;
        numComments?: number | undefined;
        numCrossposts?: number | undefined;
        numDuplicates?: number | undefined;
        numReports?: number | undefined;
        over18?: boolean | undefined;
        parentWhitelistStatus?: string | undefined;
        permalink?: string | undefined;
        pinned?: boolean | undefined;
        postHint?: string | undefined;
        preview?: ({
            enabled?: boolean | undefined;
            images?: {
                id?: string | undefined;
                resolutions?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                source?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
                variants?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            enabled?: boolean | undefined;
            images?: ({
                id?: string | undefined;
                resolutions?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                source?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
                variants?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            }[] & ({
                id?: string | undefined;
                resolutions?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                source?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
                variants?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            } & {
                id?: string | undefined;
                resolutions?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] & ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K_17 in Exclude<keyof I["preview"]["images"][number]["resolutions"][number], "$type" | keyof Preview_PreviewImage_Image>]: never; })[] & { [K_18 in Exclude<keyof I["preview"]["images"][number]["resolutions"], "$type" | keyof {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[]>]: never; }) | undefined;
                source?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K_19 in Exclude<keyof I["preview"]["images"][number]["source"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
                variants?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K_20 in Exclude<keyof I["preview"]["images"][number]["variants"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
            } & { [K_21 in Exclude<keyof I["preview"]["images"][number], "$type" | keyof Preview_PreviewImage>]: never; })[] & { [K_22 in Exclude<keyof I["preview"]["images"], "$type" | keyof {
                id?: string | undefined;
                resolutions?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                source?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
                variants?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_23 in Exclude<keyof I["preview"], "$type" | keyof Preview>]: never; }) | undefined;
        pwls?: number | undefined;
        quarantine?: boolean | undefined;
        removalReason?: string | undefined;
        removedByCategory?: string | undefined;
        removedBy?: string | undefined;
        removed?: boolean | undefined;
        reportReasons?: (string[] & string[] & { [K_24 in Exclude<keyof I["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
        rteMode?: string | undefined;
        saved?: boolean | undefined;
        score?: number | undefined;
        secureMediaEmbed?: ({
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & {
            content?: string | undefined;
            width?: number | undefined;
            height?: number | undefined;
            sandbox?: boolean | undefined;
            scrolling?: boolean | undefined;
            publicThumbnailUrl?: string | undefined;
        } & { [K_25 in Exclude<keyof I["secureMediaEmbed"], "$type" | keyof MediaEmbed>]: never; }) | undefined;
        secureMedia?: ({
            redditVideo?: {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } | undefined;
        } & {
            redditVideo?: ({
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } & {
                bitrateKbps?: number | undefined;
                dashUrl?: string | undefined;
                duration?: number | undefined;
                fallbackUrl?: string | undefined;
                height?: number | undefined;
                hlsUrl?: string | undefined;
                isGif?: boolean | undefined;
                scrubberMediaUrl?: string | undefined;
                transcodingStatus?: string | undefined;
                width?: number | undefined;
            } & { [K_26 in Exclude<keyof I["secureMedia"]["redditVideo"], "$type" | keyof Media_RedditVideo>]: never; }) | undefined;
        } & { [K_27 in Exclude<keyof I["secureMedia"], "$type" | "redditVideo">]: never; }) | undefined;
        selftextHtml?: string | undefined;
        selftext?: string | undefined;
        sendReplies?: boolean | undefined;
        spam?: boolean | undefined;
        spoiler?: boolean | undefined;
        stickied?: boolean | undefined;
        subredditId?: string | undefined;
        subredditNamePrefixed?: string | undefined;
        subredditSubscribers?: number | undefined;
        subredditType?: string | undefined;
        subreddit?: string | undefined;
        suggestedSort?: string | undefined;
        thumbnailHeight?: number | undefined;
        thumbnailWidth?: number | undefined;
        thumbnail?: string | undefined;
        title?: string | undefined;
        topAwardedType?: string | undefined;
        totalAwardsReceived?: number | undefined;
        treatmentTags?: (string[] & string[] & { [K_28 in Exclude<keyof I["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
        ups?: number | undefined;
        upvoteRatio?: number | undefined;
        urlOverriddenByDest?: string | undefined;
        url?: string | undefined;
        userReports?: (any[][] & (any[] & any[] & { [K_29 in Exclude<keyof I["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_30 in Exclude<keyof I["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
        viewCount?: number | undefined;
        visited?: boolean | undefined;
        whitelistStatus?: string | undefined;
        wls?: number | undefined;
        linkFlairTemplateId?: string | undefined;
        crowdControlLevel?: number | undefined;
        isGallery?: boolean | undefined;
        isLiveStream?: boolean | undefined;
        isMetaDiscussion?: boolean | undefined;
        oembed?: ({
            authorName?: string | undefined;
            authorUrl?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
        } & {
            authorName?: string | undefined;
            authorUrl?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
        } & { [K_31 in Exclude<keyof I["oembed"], "$type" | keyof OEmbed>]: never; }) | undefined;
        banInfo?: ({
            auto?: boolean | undefined;
            bannedAt?: number | undefined;
            banner?: string | undefined;
            moderatorBanned?: boolean | undefined;
            note?: string | undefined;
            unbanner?: string | undefined;
            unbannedAt?: number | undefined;
            resetUsed?: boolean | undefined;
            reasonId?: string | undefined;
            reasonTitle?: string | undefined;
            reasonMessage?: string | undefined;
            reasonBy?: string | undefined;
            modNote?: string | undefined;
            banAllTriggered?: boolean | undefined;
            subredditMessage?: string | undefined;
            removeAction?: import("./common.js").BanInfo_BanInfoAction | undefined;
        } & {
            auto?: boolean | undefined;
            bannedAt?: number | undefined;
            banner?: string | undefined;
            moderatorBanned?: boolean | undefined;
            note?: string | undefined;
            unbanner?: string | undefined;
            unbannedAt?: number | undefined;
            resetUsed?: boolean | undefined;
            reasonId?: string | undefined;
            reasonTitle?: string | undefined;
            reasonMessage?: string | undefined;
            reasonBy?: string | undefined;
            modNote?: string | undefined;
            banAllTriggered?: boolean | undefined;
            subredditMessage?: string | undefined;
            removeAction?: import("./common.js").BanInfo_BanInfoAction | undefined;
        } & { [K_32 in Exclude<keyof I["banInfo"], "$type" | keyof BanInfo>]: never; }) | undefined;
        markedSpam?: boolean | undefined;
        verdict?: string | undefined;
        gallery?: ({
            body?: string | undefined;
            domain?: string | undefined;
            url?: string | undefined;
        } & {
            body?: string | undefined;
            domain?: string | undefined;
            url?: string | undefined;
        } & { [K_33 in Exclude<keyof I["gallery"], "$type" | keyof RedditPostGallery>]: never; }) | undefined;
    } & { [K_34 in Exclude<keyof I, "$type" | keyof Post>]: never; }>(object: I): Post;
};
export declare const Media: {
    $type: "devvit.reddit.Media";
    encode(message: Media, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Media;
    fromJSON(object: any): Media;
    toJSON(message: Media): unknown;
    fromPartial<I extends {
        redditVideo?: {
            bitrateKbps?: number | undefined;
            dashUrl?: string | undefined;
            duration?: number | undefined;
            fallbackUrl?: string | undefined;
            height?: number | undefined;
            hlsUrl?: string | undefined;
            isGif?: boolean | undefined;
            scrubberMediaUrl?: string | undefined;
            transcodingStatus?: string | undefined;
            width?: number | undefined;
        } | undefined;
    } & {
        redditVideo?: ({
            bitrateKbps?: number | undefined;
            dashUrl?: string | undefined;
            duration?: number | undefined;
            fallbackUrl?: string | undefined;
            height?: number | undefined;
            hlsUrl?: string | undefined;
            isGif?: boolean | undefined;
            scrubberMediaUrl?: string | undefined;
            transcodingStatus?: string | undefined;
            width?: number | undefined;
        } & {
            bitrateKbps?: number | undefined;
            dashUrl?: string | undefined;
            duration?: number | undefined;
            fallbackUrl?: string | undefined;
            height?: number | undefined;
            hlsUrl?: string | undefined;
            isGif?: boolean | undefined;
            scrubberMediaUrl?: string | undefined;
            transcodingStatus?: string | undefined;
            width?: number | undefined;
        } & { [K in Exclude<keyof I["redditVideo"], "$type" | keyof Media_RedditVideo>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | "redditVideo">]: never; }>(object: I): Media;
};
export declare const Media_RedditVideo: {
    $type: "devvit.reddit.Media.RedditVideo";
    encode(message: Media_RedditVideo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Media_RedditVideo;
    fromJSON(object: any): Media_RedditVideo;
    toJSON(message: Media_RedditVideo): unknown;
    fromPartial<I extends {
        bitrateKbps?: number | undefined;
        dashUrl?: string | undefined;
        duration?: number | undefined;
        fallbackUrl?: string | undefined;
        height?: number | undefined;
        hlsUrl?: string | undefined;
        isGif?: boolean | undefined;
        scrubberMediaUrl?: string | undefined;
        transcodingStatus?: string | undefined;
        width?: number | undefined;
    } & {
        bitrateKbps?: number | undefined;
        dashUrl?: string | undefined;
        duration?: number | undefined;
        fallbackUrl?: string | undefined;
        height?: number | undefined;
        hlsUrl?: string | undefined;
        isGif?: boolean | undefined;
        scrubberMediaUrl?: string | undefined;
        transcodingStatus?: string | undefined;
        width?: number | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof Media_RedditVideo>]: never; }>(object: I): Media_RedditVideo;
};
export declare const Preview: {
    $type: "devvit.reddit.Preview";
    encode(message: Preview, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Preview;
    fromJSON(object: any): Preview;
    toJSON(message: Preview): unknown;
    fromPartial<I extends {
        enabled?: boolean | undefined;
        images?: {
            id?: string | undefined;
            resolutions?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            source?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
            variants?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        enabled?: boolean | undefined;
        images?: ({
            id?: string | undefined;
            resolutions?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            source?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
            variants?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
        }[] & ({
            id?: string | undefined;
            resolutions?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            source?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
            variants?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            resolutions?: ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] & ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & { [K in Exclude<keyof I["images"][number]["resolutions"][number], "$type" | keyof Preview_PreviewImage_Image>]: never; })[] & { [K_1 in Exclude<keyof I["images"][number]["resolutions"], "$type" | keyof {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[]>]: never; }) | undefined;
            source?: ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & { [K_2 in Exclude<keyof I["images"][number]["source"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
            variants?: ({
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } & { [K_3 in Exclude<keyof I["images"][number]["variants"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
        } & { [K_4 in Exclude<keyof I["images"][number], "$type" | keyof Preview_PreviewImage>]: never; })[] & { [K_5 in Exclude<keyof I["images"], "$type" | keyof {
            id?: string | undefined;
            resolutions?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            }[] | undefined;
            source?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
            variants?: {
                height?: number | undefined;
                url?: string | undefined;
                width?: number | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_6 in Exclude<keyof I, "$type" | keyof Preview>]: never; }>(object: I): Preview;
};
export declare const Preview_PreviewImage: {
    $type: "devvit.reddit.Preview.PreviewImage";
    encode(message: Preview_PreviewImage, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Preview_PreviewImage;
    fromJSON(object: any): Preview_PreviewImage;
    toJSON(message: Preview_PreviewImage): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        resolutions?: {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        }[] | undefined;
        source?: {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } | undefined;
        variants?: {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } | undefined;
    } & {
        id?: string | undefined;
        resolutions?: ({
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        }[] & ({
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & { [K in Exclude<keyof I["resolutions"][number], "$type" | keyof Preview_PreviewImage_Image>]: never; })[] & { [K_1 in Exclude<keyof I["resolutions"], "$type" | keyof {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        }[]>]: never; }) | undefined;
        source?: ({
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & { [K_2 in Exclude<keyof I["source"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
        variants?: ({
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & {
            height?: number | undefined;
            url?: string | undefined;
            width?: number | undefined;
        } & { [K_3 in Exclude<keyof I["variants"], "$type" | keyof Preview_PreviewImage_Image>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | keyof Preview_PreviewImage>]: never; }>(object: I): Preview_PreviewImage;
};
export declare const Preview_PreviewImage_Image: {
    $type: "devvit.reddit.Preview.PreviewImage.Image";
    encode(message: Preview_PreviewImage_Image, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Preview_PreviewImage_Image;
    fromJSON(object: any): Preview_PreviewImage_Image;
    toJSON(message: Preview_PreviewImage_Image): unknown;
    fromPartial<I extends {
        height?: number | undefined;
        url?: string | undefined;
        width?: number | undefined;
    } & {
        height?: number | undefined;
        url?: string | undefined;
        width?: number | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof Preview_PreviewImage_Image>]: never; }>(object: I): Preview_PreviewImage_Image;
};
export declare const OEmbed: {
    $type: "devvit.reddit.OEmbed";
    encode(message: OEmbed, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OEmbed;
    fromJSON(object: any): OEmbed;
    toJSON(message: OEmbed): unknown;
    fromPartial<I extends {
        authorName?: string | undefined;
        authorUrl?: string | undefined;
        description?: string | undefined;
        title?: string | undefined;
    } & {
        authorName?: string | undefined;
        authorUrl?: string | undefined;
        description?: string | undefined;
        title?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof OEmbed>]: never; }>(object: I): OEmbed;
};
export declare const RedditPostGallery: {
    $type: "devvit.reddit.RedditPostGallery";
    encode(message: RedditPostGallery, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RedditPostGallery;
    fromJSON(object: any): RedditPostGallery;
    toJSON(message: RedditPostGallery): unknown;
    fromPartial<I extends {
        body?: string | undefined;
        domain?: string | undefined;
        url?: string | undefined;
    } & {
        body?: string | undefined;
        domain?: string | undefined;
        url?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof RedditPostGallery>]: never; }>(object: I): RedditPostGallery;
};
//# sourceMappingURL=post.d.ts.map