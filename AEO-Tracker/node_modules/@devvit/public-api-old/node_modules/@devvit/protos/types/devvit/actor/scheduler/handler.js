/**
 * #handler.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { Empty } from '../../../google/protobuf/empty.js';
import { ScheduledAction } from './action.js';
export class SchedulerHandlerClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "devvit.actor.scheduler.SchedulerHandler";
        this.rpc = rpc;
        this.HandleScheduledAction = this.HandleScheduledAction.bind(this);
    }
    HandleScheduledAction(request) {
        const data = ScheduledAction.encode(request).finish();
        const promise = this.rpc.request(this.service, "HandleScheduledAction", data);
        return promise.then((data) => Empty.decode(new _m0.Reader(data)));
    }
}
export const SchedulerHandlerDefinition = {
    name: "SchedulerHandler",
    fullName: "devvit.actor.scheduler.SchedulerHandler",
    methods: {
        handleScheduledAction: {
            name: "HandleScheduledAction",
            requestType: ScheduledAction,
            requestStream: false,
            responseType: Empty,
            responseStream: false,
            options: {},
        },
    },
};
