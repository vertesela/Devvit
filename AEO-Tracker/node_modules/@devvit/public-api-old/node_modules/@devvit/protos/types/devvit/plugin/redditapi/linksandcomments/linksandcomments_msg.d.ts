/**
 * #linksandcomments_msg.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { Any } from '../../../../google/protobuf/any.js';
import { Comment } from '../../../reddit/comment.js';
/** Request Types */
export interface CommentRequest {
    /**
     * Rich-text body of the comment. Serialized RTJSON string.
     * Note: If `richtext_json` is provided, `text` is ignored.
     * @example '{"document":[{"e":"par","c":[{"e":"text","t":"Hello, world!","f":[[2, 0, 13]]}]}]}'
     */
    richtextJson?: string;
    /**
     * Markdown body of the comment
     * @example '_Hello, world!_'
     */
    text: string;
    /**
     * Post or Comment thing ID
     * @example "t3_abc123"
     */
    thingId: string;
}
export interface FollowPostRequest {
    /** `true` to follow; `false` to unfollow */
    follow: boolean;
    /**
     * Post thing ID
     * @example "t3_abc123"
     */
    fullname: string;
}
export interface BasicIdRequest {
    /**
     * Thing ID
     * @example "t1_abc123"
     */
    id: string;
}
export interface InfoRequest {
    /**
     * List of zero or more Subreddit names to fetch
     * @example ["AskReddit", "jokes"]
     */
    subreddits: string[];
    /**
     * List of zero or more thing IDs to fetch
     * Note: Must be a Comment (t1), Post (t3), or Subreddit (t5) ID
     * @example ["t1_abc123", "t3_abc123", "t5_abc123"]
     */
    thingIds: string[];
    /**
     * Any Link Posts that refer to this URL
     * Note: Providing `url` overrides `subreddits` and `thing_ids`
     * @example "https://www.reddit.com/"
     */
    url?: string;
}
export interface MoreChildrenRequest {
    /**
     * List of Comment thing IDs without their "t1_" prefixes
     * @example ["foo123", "bar456", "baz789"]
     */
    children: string[];
    /** Maximum comment depth */
    depth?: number;
    /** Only return the comments explicitly listed in `children`, otherwise return as many as available */
    limitChildren?: boolean;
    /**
     * Post thing ID
     * @example "t3_abc123"
     */
    linkId: string;
    /** Optional, one of: "confidence", "top", "new", "controversial", "old", "random", "qa", "live" */
    sort?: string;
    /** Optional, id of the associated MoreChildren object */
    id?: string;
}
export interface ReportRequest {
    /** Additional information attached to the report */
    additionalInfo?: string;
    /** Additional information attached to the report */
    customText?: string;
    /** Modmail conversation ID to attach to the report for context */
    modmailConvId?: string;
    /**
     * Free-form reason explaining this report
     * Note: If reporting Subreddit content the subreddit must have
     *       "allow free-form reports by users" enabled
     * @see {@link Subreddits.SubredditAboutRules}
     */
    otherReason?: string;
    /** One of: "rule", "site_reason_selected", "other" */
    reason: string;
    /** The Subreddit rule this thing is violating */
    ruleReason?: string;
    /** The Reddit rule this thing is violating */
    siteReason?: string;
    /**
     * Subreddit name; set if reporting a Post or Comment
     * @example "AskReddit"
     */
    srName?: string;
    /**
     * The thing ID being reported. Must be a Post (t3), Comment (t1), or Private Message (t4)
     * @example "t3_abc123"
     */
    thingId: string;
    /**
     * List of comma-separated usernames to associate with this report
     * @example "user1,user2,user3"
     */
    usernames?: string;
}
export interface ReportAwardRequest {
    /**
     * Award ID from a Post or Comment
     * @example "award_813b473a-4d74-4933-ba79-a7f1b8b285ef"
     */
    awardId: string;
    /** Reason for this report */
    reason?: string;
}
export interface SaveRequest {
    /**
     * Post or Comment thing ID
     * @example "t1_abc123"
     */
    id: string;
}
export interface SendRepliesRequest {
    /**
     * Post or Comment thing ID
     * @example "t1_abc123"
     */
    id: string;
    /** Boolean to enable reply notifications */
    state: boolean;
}
export interface SetContestModeRequest {
    /**
     * Post thing ID
     * @example "t3_abc123"
     */
    id: string;
    /** Boolean to enable Contest Mode */
    state: boolean;
}
export interface SetSubredditStickyRequest {
    /**
     * Post thing ID
     * @example "t3_abc123"
     */
    id: string;
    /**
     * Which sticky "slot" this Post should take
     * If the slot is empty or `num` is not set the bottom-most slot will be used
     * Valid range for subreddits: 1 - 2
     * Valid range for user profiles: 1 - 4
     */
    num?: number;
    /** Boolean to set the Post as sticky/pinned */
    state: boolean;
    /**
     * If the Post is owned by the current user set to `true` to pin
     * it to their profile instead of the subreddit it was posted in
     */
    toProfile?: boolean;
}
export interface SetSuggestedSortRequest {
    /**
     * Post thing ID
     * @example "t3_abc123"
     */
    id: string;
    /**
     * One of: "confidence", "top", "new", "controversial", "old", "random", "qa", "live", ""
     * Note: If left blank the suggested sort order is cleared
     */
    sort: string;
}
export interface SubmitRequest {
    /**
     * UUID of the collection to add this Post to
     * @example "813b473a-4d74-4933-ba79-a7f1b8b285ef"
     */
    collectionId?: string;
    /**
     * Flair template ID to use for this Post
     * @example "813b473a-4d74-4933-ba79-a7f1b8b285ef"
     */
    flairId?: string;
    /**
     * Custom text to use in the selected flair template if the template
     * has `text_editable` enabled
     */
    flairText?: string;
    /**
     * What kind of Post is being created
     * One of: "link", "self", "image", "video", "videogif", "crosspost"
     */
    kind: string;
    /** Boolean to set the Not-Safe-For-Work tag */
    nsfw?: boolean;
    /**
     * Rich-text body of the Post. Serialized RTJSON string.
     * Note: Only used if `kind` is set to "self"
     * Note: `text` and `richtext_json` cannot both be set
     * @example '{"document":[{"e":"par","c":[{"e":"text","t":"Hello, world!","f":[[2, 0, 13]]}]}]}'
     */
    richtextJson?: string;
    /** Boolean to enable notifications when a comment is added */
    sendreplies?: boolean;
    /** Boolean to set the Spoiler tag */
    spoiler?: boolean;
    /**
     * Subreddit name
     * @example "AskReddit"
     */
    sr: string;
    /**
     * Markdown body of the Post
     * Note: Only used if `kind` is set to "self"
     * Note: `text` and `richtext_json` cannot both be set
     * @example "_Hello, world!_"
     */
    text?: string;
    /** Post title */
    title: string;
    /**
     * The URL this Post refers to if this is a Link Post
     * Note: If `kind` is "video", "videogif", or "image" this must be set to
     *       the media URL created when the media was uploaded
     * Note: If `kind` is "self" this is ignored
     */
    url?: string;
    /** If `kind` is "video" or "videogif" this must be set to the thumbnail URL */
    videoPosterUrl?: string;
    /** If `kind` is "crosspost" this must be set to the ID of the post being crossposted */
    crosspostFullname?: string;
}
export interface VoteRequest {
    /**
     * One of: -1, 0, 1
     * Where:
     *   1 = Upvote
     *   0 = Cleared
     *  -1 = Downvote
     */
    dir: number;
    /**
     * Post or Comment thing ID
     * @example "t1_abc123"
     */
    id: string;
}
/** Response Types */
export interface JsonWrappedComment {
    json?: JsonWrappedComment_Json;
}
export interface JsonWrappedComment_WrappedComment {
    kind: string;
    data?: Comment;
}
export interface JsonWrappedComment_JsonData {
    things: JsonWrappedComment_WrappedComment[];
}
export interface JsonWrappedComment_Json {
    errors: string[];
    data?: JsonWrappedComment_JsonData;
}
export interface SubmitResponse {
    json?: SubmitResponse_JsonType;
}
export interface SubmitResponse_JsonType {
    errors: Any[];
    data?: SubmitResponse_JsonType_JsonData;
}
export interface SubmitResponse_JsonType_JsonData {
    url?: string;
    draftsCount?: number;
    id?: string;
    name?: string;
}
export declare const CommentRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.CommentRequest";
    encode(message: CommentRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CommentRequest;
    fromJSON(object: any): CommentRequest;
    toJSON(message: CommentRequest): unknown;
    fromPartial<I extends {
        richtextJson?: string | undefined;
        text?: string | undefined;
        thingId?: string | undefined;
    } & {
        richtextJson?: string | undefined;
        text?: string | undefined;
        thingId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof CommentRequest>]: never; }>(object: I): CommentRequest;
};
export declare const FollowPostRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.FollowPostRequest";
    encode(message: FollowPostRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FollowPostRequest;
    fromJSON(object: any): FollowPostRequest;
    toJSON(message: FollowPostRequest): unknown;
    fromPartial<I extends {
        follow?: boolean | undefined;
        fullname?: string | undefined;
    } & {
        follow?: boolean | undefined;
        fullname?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof FollowPostRequest>]: never; }>(object: I): FollowPostRequest;
};
export declare const BasicIdRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.BasicIdRequest";
    encode(message: BasicIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BasicIdRequest;
    fromJSON(object: any): BasicIdRequest;
    toJSON(message: BasicIdRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "id">]: never; }>(object: I): BasicIdRequest;
};
export declare const InfoRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.InfoRequest";
    encode(message: InfoRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InfoRequest;
    fromJSON(object: any): InfoRequest;
    toJSON(message: InfoRequest): unknown;
    fromPartial<I extends {
        subreddits?: string[] | undefined;
        thingIds?: string[] | undefined;
        url?: string | undefined;
    } & {
        subreddits?: (string[] & string[] & { [K in Exclude<keyof I["subreddits"], "$type" | keyof string[]>]: never; }) | undefined;
        thingIds?: (string[] & string[] & { [K_1 in Exclude<keyof I["thingIds"], "$type" | keyof string[]>]: never; }) | undefined;
        url?: string | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof InfoRequest>]: never; }>(object: I): InfoRequest;
};
export declare const MoreChildrenRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenRequest";
    encode(message: MoreChildrenRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MoreChildrenRequest;
    fromJSON(object: any): MoreChildrenRequest;
    toJSON(message: MoreChildrenRequest): unknown;
    fromPartial<I extends {
        children?: string[] | undefined;
        depth?: number | undefined;
        limitChildren?: boolean | undefined;
        linkId?: string | undefined;
        sort?: string | undefined;
        id?: string | undefined;
    } & {
        children?: (string[] & string[] & { [K in Exclude<keyof I["children"], "$type" | keyof string[]>]: never; }) | undefined;
        depth?: number | undefined;
        limitChildren?: boolean | undefined;
        linkId?: string | undefined;
        sort?: string | undefined;
        id?: string | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof MoreChildrenRequest>]: never; }>(object: I): MoreChildrenRequest;
};
export declare const ReportRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.ReportRequest";
    encode(message: ReportRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReportRequest;
    fromJSON(object: any): ReportRequest;
    toJSON(message: ReportRequest): unknown;
    fromPartial<I extends {
        additionalInfo?: string | undefined;
        customText?: string | undefined;
        modmailConvId?: string | undefined;
        otherReason?: string | undefined;
        reason?: string | undefined;
        ruleReason?: string | undefined;
        siteReason?: string | undefined;
        srName?: string | undefined;
        thingId?: string | undefined;
        usernames?: string | undefined;
    } & {
        additionalInfo?: string | undefined;
        customText?: string | undefined;
        modmailConvId?: string | undefined;
        otherReason?: string | undefined;
        reason?: string | undefined;
        ruleReason?: string | undefined;
        siteReason?: string | undefined;
        srName?: string | undefined;
        thingId?: string | undefined;
        usernames?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof ReportRequest>]: never; }>(object: I): ReportRequest;
};
export declare const ReportAwardRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.ReportAwardRequest";
    encode(message: ReportAwardRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReportAwardRequest;
    fromJSON(object: any): ReportAwardRequest;
    toJSON(message: ReportAwardRequest): unknown;
    fromPartial<I extends {
        awardId?: string | undefined;
        reason?: string | undefined;
    } & {
        awardId?: string | undefined;
        reason?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof ReportAwardRequest>]: never; }>(object: I): ReportAwardRequest;
};
export declare const SaveRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SaveRequest";
    encode(message: SaveRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SaveRequest;
    fromJSON(object: any): SaveRequest;
    toJSON(message: SaveRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "id">]: never; }>(object: I): SaveRequest;
};
export declare const SendRepliesRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SendRepliesRequest";
    encode(message: SendRepliesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendRepliesRequest;
    fromJSON(object: any): SendRepliesRequest;
    toJSON(message: SendRepliesRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        state?: boolean | undefined;
    } & {
        id?: string | undefined;
        state?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SendRepliesRequest>]: never; }>(object: I): SendRepliesRequest;
};
export declare const SetContestModeRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SetContestModeRequest";
    encode(message: SetContestModeRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetContestModeRequest;
    fromJSON(object: any): SetContestModeRequest;
    toJSON(message: SetContestModeRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        state?: boolean | undefined;
    } & {
        id?: string | undefined;
        state?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SetContestModeRequest>]: never; }>(object: I): SetContestModeRequest;
};
export declare const SetSubredditStickyRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SetSubredditStickyRequest";
    encode(message: SetSubredditStickyRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetSubredditStickyRequest;
    fromJSON(object: any): SetSubredditStickyRequest;
    toJSON(message: SetSubredditStickyRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        num?: number | undefined;
        state?: boolean | undefined;
        toProfile?: boolean | undefined;
    } & {
        id?: string | undefined;
        num?: number | undefined;
        state?: boolean | undefined;
        toProfile?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SetSubredditStickyRequest>]: never; }>(object: I): SetSubredditStickyRequest;
};
export declare const SetSuggestedSortRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SetSuggestedSortRequest";
    encode(message: SetSuggestedSortRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetSuggestedSortRequest;
    fromJSON(object: any): SetSuggestedSortRequest;
    toJSON(message: SetSuggestedSortRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        sort?: string | undefined;
    } & {
        id?: string | undefined;
        sort?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SetSuggestedSortRequest>]: never; }>(object: I): SetSuggestedSortRequest;
};
export declare const SubmitRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.SubmitRequest";
    encode(message: SubmitRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubmitRequest;
    fromJSON(object: any): SubmitRequest;
    toJSON(message: SubmitRequest): unknown;
    fromPartial<I extends {
        collectionId?: string | undefined;
        flairId?: string | undefined;
        flairText?: string | undefined;
        kind?: string | undefined;
        nsfw?: boolean | undefined;
        richtextJson?: string | undefined;
        sendreplies?: boolean | undefined;
        spoiler?: boolean | undefined;
        sr?: string | undefined;
        text?: string | undefined;
        title?: string | undefined;
        url?: string | undefined;
        videoPosterUrl?: string | undefined;
        crosspostFullname?: string | undefined;
    } & {
        collectionId?: string | undefined;
        flairId?: string | undefined;
        flairText?: string | undefined;
        kind?: string | undefined;
        nsfw?: boolean | undefined;
        richtextJson?: string | undefined;
        sendreplies?: boolean | undefined;
        spoiler?: boolean | undefined;
        sr?: string | undefined;
        text?: string | undefined;
        title?: string | undefined;
        url?: string | undefined;
        videoPosterUrl?: string | undefined;
        crosspostFullname?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubmitRequest>]: never; }>(object: I): SubmitRequest;
};
export declare const VoteRequest: {
    $type: "devvit.plugin.redditapi.linksandcomments.VoteRequest";
    encode(message: VoteRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): VoteRequest;
    fromJSON(object: any): VoteRequest;
    toJSON(message: VoteRequest): unknown;
    fromPartial<I extends {
        dir?: number | undefined;
        id?: string | undefined;
    } & {
        dir?: number | undefined;
        id?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof VoteRequest>]: never; }>(object: I): VoteRequest;
};
export declare const JsonWrappedComment: {
    $type: "devvit.plugin.redditapi.linksandcomments.JsonWrappedComment";
    encode(message: JsonWrappedComment, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): JsonWrappedComment;
    fromJSON(object: any): JsonWrappedComment;
    toJSON(message: JsonWrappedComment): unknown;
    fromPartial<I extends {
        json?: {
            errors?: string[] | undefined;
            data?: {
                things?: {
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
    } & {
        json?: ({
            errors?: string[] | undefined;
            data?: {
                things?: {
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } & {
            errors?: (string[] & string[] & { [K in Exclude<keyof I["json"]["errors"], "$type" | keyof string[]>]: never; }) | undefined;
            data?: ({
                things?: {
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } & {
                things?: ({
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                }[] & ({
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                } & {
                    kind?: string | undefined;
                    data?: ({
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } & {
                        allAwardings?: ({
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] & ({
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        } & {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] & ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & { [K_1 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_2 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[]>]: never; }) | undefined;
                            resizedStaticIcons?: ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] & ({
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            } & { [K_3 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_4 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[]>]: never; }) | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        } & { [K_5 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"][number], "$type" | keyof import("../../../reddit/common.js").Awarding>]: never; })[] & { [K_6 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["allAwardings"], "$type" | keyof {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[]>]: never; }) | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: ({
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] & ({
                            e?: string | undefined;
                            t?: string | undefined;
                        } & {
                            e?: string | undefined;
                            t?: string | undefined;
                        } & { [K_7 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["authorFlairRichtext"][number], "$type" | keyof import("../../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_8 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["authorFlairRichtext"], "$type" | keyof {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[]>]: never; }) | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: ({
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } & {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } & { [K_10 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["gildings"], "$type" | keyof import("../../../reddit/common.js").Gildings>]: never; }) | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: (any[][] & (any[] & any[] & { [K_11 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_12 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: (string[] & string[] & { [K_13 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: (string[] & string[] & { [K_14 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: (any[][] & (any[] & any[] & { [K_15 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_16 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                        count?: number | undefined;
                        children?: (string[] & string[] & { [K_17 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["children"], "$type" | keyof string[]>]: never; }) | undefined;
                        banInfo?: ({
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } & {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } & { [K_18 in Exclude<keyof I["json"]["data"]["things"][number]["data"]["banInfo"], "$type" | keyof import("../../../reddit/common.js").BanInfo>]: never; }) | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } & { [K_19 in Exclude<keyof I["json"]["data"]["things"][number]["data"], "$type" | keyof Comment>]: never; }) | undefined;
                } & { [K_20 in Exclude<keyof I["json"]["data"]["things"][number], "$type" | keyof JsonWrappedComment_WrappedComment>]: never; })[] & { [K_21 in Exclude<keyof I["json"]["data"]["things"], "$type" | keyof {
                    kind?: string | undefined;
                    data?: {
                        allAwardings?: {
                            awardSubType?: string | undefined;
                            awardType?: string | undefined;
                            awardingsRequiredToGrantBenefits?: number | undefined;
                            coinPrice?: number | undefined;
                            coinReward?: number | undefined;
                            count?: number | undefined;
                            daysOfDripExtension?: number | undefined;
                            daysOfPremium?: number | undefined;
                            description?: string | undefined;
                            endDate?: string | undefined;
                            giverCoinReward?: number | undefined;
                            iconFormat?: string | undefined;
                            iconHeight?: number | undefined;
                            iconUrl?: string | undefined;
                            iconWidth?: number | undefined;
                            id?: string | undefined;
                            isEnabled?: boolean | undefined;
                            isNew?: boolean | undefined;
                            name?: string | undefined;
                            pennyDonate?: number | undefined;
                            pennyPrice?: number | undefined;
                            resizedIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            resizedStaticIcons?: {
                                height?: number | undefined;
                                url?: string | undefined;
                                width?: number | undefined;
                            }[] | undefined;
                            startDate?: string | undefined;
                            staticIconHeight?: number | undefined;
                            staticIconUrl?: string | undefined;
                            staticIconWidth?: number | undefined;
                            stickyDurationSeconds?: number | undefined;
                            subredditCoinReward?: number | undefined;
                            subredditId?: string | undefined;
                            tiersByRequiredAwardings?: string | undefined;
                        }[] | undefined;
                        approved?: boolean | undefined;
                        approvedAtUtc?: number | undefined;
                        approvedBy?: string | undefined;
                        archived?: boolean | undefined;
                        associatedAward?: string | undefined;
                        author?: string | undefined;
                        authorFlairBackgroundColor?: string | undefined;
                        authorFlairCssClass?: string | undefined;
                        authorFlairRichtext?: {
                            e?: string | undefined;
                            t?: string | undefined;
                        }[] | undefined;
                        authorFlairTemplateId?: string | undefined;
                        authorFlairText?: string | undefined;
                        authorFlairTextColor?: string | undefined;
                        authorFlairType?: string | undefined;
                        authorFullname?: string | undefined;
                        authorIsBlocked?: boolean | undefined;
                        authorPatreonFlair?: boolean | undefined;
                        authorPremium?: boolean | undefined;
                        awarders?: string[] | undefined;
                        bannedAtUtc?: number | undefined;
                        bannedBy?: string | undefined;
                        body?: string | undefined;
                        bodyHtml?: string | undefined;
                        canGild?: boolean | undefined;
                        canModPost?: boolean | undefined;
                        collapsed?: boolean | undefined;
                        collapsedBecauseCrowdControl?: boolean | undefined;
                        collapsedReason?: string | undefined;
                        collapsedReasonCode?: string | undefined;
                        commentType?: string | undefined;
                        controversiality?: number | undefined;
                        created?: number | undefined;
                        createdUtc?: number | undefined;
                        depth?: number | undefined;
                        distinguished?: string | undefined;
                        downs?: number | undefined;
                        edited?: boolean | undefined;
                        gilded?: number | undefined;
                        gildings?: {
                            gid1?: number | undefined;
                            gid2?: number | undefined;
                            gid3?: number | undefined;
                        } | undefined;
                        id?: string | undefined;
                        ignoreReports?: boolean | undefined;
                        isSubmitter?: boolean | undefined;
                        likes?: boolean | undefined;
                        linkId?: string | undefined;
                        locked?: boolean | undefined;
                        modNote?: string | undefined;
                        modReasonBy?: string | undefined;
                        modReasonTitle?: string | undefined;
                        modReports?: any[][] | undefined;
                        name?: string | undefined;
                        noFollow?: boolean | undefined;
                        numReports?: number | undefined;
                        parentId?: string | undefined;
                        permalink?: string | undefined;
                        removalReason?: string | undefined;
                        removed?: boolean | undefined;
                        replies?: string | undefined;
                        reportReasons?: string[] | undefined;
                        rteMode?: string | undefined;
                        saved?: boolean | undefined;
                        score?: number | undefined;
                        scoreHidden?: boolean | undefined;
                        sendReplies?: boolean | undefined;
                        spam?: boolean | undefined;
                        stickied?: boolean | undefined;
                        subreddit?: string | undefined;
                        subredditId?: string | undefined;
                        subredditNamePrefixed?: string | undefined;
                        subredditType?: string | undefined;
                        topAwardedType?: string | undefined;
                        totalAwardsReceived?: number | undefined;
                        treatmentTags?: string[] | undefined;
                        unrepliableReason?: string | undefined;
                        ups?: number | undefined;
                        userReports?: any[][] | undefined;
                        count?: number | undefined;
                        children?: string[] | undefined;
                        banInfo?: {
                            auto?: boolean | undefined;
                            bannedAt?: number | undefined;
                            banner?: string | undefined;
                            moderatorBanned?: boolean | undefined;
                            note?: string | undefined;
                            unbanner?: string | undefined;
                            unbannedAt?: number | undefined;
                            resetUsed?: boolean | undefined;
                            reasonId?: string | undefined;
                            reasonTitle?: string | undefined;
                            reasonMessage?: string | undefined;
                            reasonBy?: string | undefined;
                            modNote?: string | undefined;
                            banAllTriggered?: boolean | undefined;
                            subredditMessage?: string | undefined;
                            removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                        } | undefined;
                        markedSpam?: boolean | undefined;
                        verdict?: string | undefined;
                    } | undefined;
                }[]>]: never; }) | undefined;
            } & { [K_22 in Exclude<keyof I["json"]["data"], "$type" | "things">]: never; }) | undefined;
        } & { [K_23 in Exclude<keyof I["json"], "$type" | keyof JsonWrappedComment_Json>]: never; }) | undefined;
    } & { [K_24 in Exclude<keyof I, "$type" | "json">]: never; }>(object: I): JsonWrappedComment;
};
export declare const JsonWrappedComment_WrappedComment: {
    $type: "devvit.plugin.redditapi.linksandcomments.JsonWrappedComment.WrappedComment";
    encode(message: JsonWrappedComment_WrappedComment, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): JsonWrappedComment_WrappedComment;
    fromJSON(object: any): JsonWrappedComment_WrappedComment;
    toJSON(message: JsonWrappedComment_WrappedComment): unknown;
    fromPartial<I extends {
        kind?: string | undefined;
        data?: {
            allAwardings?: {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            associatedAward?: string | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: string[] | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            body?: string | undefined;
            bodyHtml?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            collapsed?: boolean | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            collapsedReason?: string | undefined;
            collapsedReasonCode?: string | undefined;
            commentType?: string | undefined;
            controversiality?: number | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            depth?: number | undefined;
            distinguished?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isSubmitter?: boolean | undefined;
            likes?: boolean | undefined;
            linkId?: string | undefined;
            locked?: boolean | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: any[][] | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numReports?: number | undefined;
            parentId?: string | undefined;
            permalink?: string | undefined;
            removalReason?: string | undefined;
            removed?: boolean | undefined;
            replies?: string | undefined;
            reportReasons?: string[] | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            scoreHidden?: boolean | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            stickied?: boolean | undefined;
            subreddit?: string | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditType?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: string[] | undefined;
            unrepliableReason?: string | undefined;
            ups?: number | undefined;
            userReports?: any[][] | undefined;
            count?: number | undefined;
            children?: string[] | undefined;
            banInfo?: {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
        } | undefined;
    } & {
        kind?: string | undefined;
        data?: ({
            allAwardings?: {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            associatedAward?: string | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: {
                e?: string | undefined;
                t?: string | undefined;
            }[] | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: string[] | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            body?: string | undefined;
            bodyHtml?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            collapsed?: boolean | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            collapsedReason?: string | undefined;
            collapsedReasonCode?: string | undefined;
            commentType?: string | undefined;
            controversiality?: number | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            depth?: number | undefined;
            distinguished?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isSubmitter?: boolean | undefined;
            likes?: boolean | undefined;
            linkId?: string | undefined;
            locked?: boolean | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: any[][] | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numReports?: number | undefined;
            parentId?: string | undefined;
            permalink?: string | undefined;
            removalReason?: string | undefined;
            removed?: boolean | undefined;
            replies?: string | undefined;
            reportReasons?: string[] | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            scoreHidden?: boolean | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            stickied?: boolean | undefined;
            subreddit?: string | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditType?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: string[] | undefined;
            unrepliableReason?: string | undefined;
            ups?: number | undefined;
            userReports?: any[][] | undefined;
            count?: number | undefined;
            children?: string[] | undefined;
            banInfo?: {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
        } & {
            allAwardings?: ({
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[] & ({
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            } & {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] & ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K in Exclude<keyof I["data"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_1 in Exclude<keyof I["data"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[]>]: never; }) | undefined;
                resizedStaticIcons?: ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] & ({
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                } & { [K_2 in Exclude<keyof I["data"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_3 in Exclude<keyof I["data"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[]>]: never; }) | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            } & { [K_4 in Exclude<keyof I["data"]["allAwardings"][number], "$type" | keyof import("../../../reddit/common.js").Awarding>]: never; })[] & { [K_5 in Exclude<keyof I["data"]["allAwardings"], "$type" | keyof {
                awardSubType?: string | undefined;
                awardType?: string | undefined;
                awardingsRequiredToGrantBenefits?: number | undefined;
                coinPrice?: number | undefined;
                coinReward?: number | undefined;
                count?: number | undefined;
                daysOfDripExtension?: number | undefined;
                daysOfPremium?: number | undefined;
                description?: string | undefined;
                endDate?: string | undefined;
                giverCoinReward?: number | undefined;
                iconFormat?: string | undefined;
                iconHeight?: number | undefined;
                iconUrl?: string | undefined;
                iconWidth?: number | undefined;
                id?: string | undefined;
                isEnabled?: boolean | undefined;
                isNew?: boolean | undefined;
                name?: string | undefined;
                pennyDonate?: number | undefined;
                pennyPrice?: number | undefined;
                resizedIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                resizedStaticIcons?: {
                    height?: number | undefined;
                    url?: string | undefined;
                    width?: number | undefined;
                }[] | undefined;
                startDate?: string | undefined;
                staticIconHeight?: number | undefined;
                staticIconUrl?: string | undefined;
                staticIconWidth?: number | undefined;
                stickyDurationSeconds?: number | undefined;
                subredditCoinReward?: number | undefined;
                subredditId?: string | undefined;
                tiersByRequiredAwardings?: string | undefined;
            }[]>]: never; }) | undefined;
            approved?: boolean | undefined;
            approvedAtUtc?: number | undefined;
            approvedBy?: string | undefined;
            archived?: boolean | undefined;
            associatedAward?: string | undefined;
            author?: string | undefined;
            authorFlairBackgroundColor?: string | undefined;
            authorFlairCssClass?: string | undefined;
            authorFlairRichtext?: ({
                e?: string | undefined;
                t?: string | undefined;
            }[] & ({
                e?: string | undefined;
                t?: string | undefined;
            } & {
                e?: string | undefined;
                t?: string | undefined;
            } & { [K_6 in Exclude<keyof I["data"]["authorFlairRichtext"][number], "$type" | keyof import("../../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_7 in Exclude<keyof I["data"]["authorFlairRichtext"], "$type" | keyof {
                e?: string | undefined;
                t?: string | undefined;
            }[]>]: never; }) | undefined;
            authorFlairTemplateId?: string | undefined;
            authorFlairText?: string | undefined;
            authorFlairTextColor?: string | undefined;
            authorFlairType?: string | undefined;
            authorFullname?: string | undefined;
            authorIsBlocked?: boolean | undefined;
            authorPatreonFlair?: boolean | undefined;
            authorPremium?: boolean | undefined;
            awarders?: (string[] & string[] & { [K_8 in Exclude<keyof I["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
            bannedAtUtc?: number | undefined;
            bannedBy?: string | undefined;
            body?: string | undefined;
            bodyHtml?: string | undefined;
            canGild?: boolean | undefined;
            canModPost?: boolean | undefined;
            collapsed?: boolean | undefined;
            collapsedBecauseCrowdControl?: boolean | undefined;
            collapsedReason?: string | undefined;
            collapsedReasonCode?: string | undefined;
            commentType?: string | undefined;
            controversiality?: number | undefined;
            created?: number | undefined;
            createdUtc?: number | undefined;
            depth?: number | undefined;
            distinguished?: string | undefined;
            downs?: number | undefined;
            edited?: boolean | undefined;
            gilded?: number | undefined;
            gildings?: ({
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } & {
                gid1?: number | undefined;
                gid2?: number | undefined;
                gid3?: number | undefined;
            } & { [K_9 in Exclude<keyof I["data"]["gildings"], "$type" | keyof import("../../../reddit/common.js").Gildings>]: never; }) | undefined;
            id?: string | undefined;
            ignoreReports?: boolean | undefined;
            isSubmitter?: boolean | undefined;
            likes?: boolean | undefined;
            linkId?: string | undefined;
            locked?: boolean | undefined;
            modNote?: string | undefined;
            modReasonBy?: string | undefined;
            modReasonTitle?: string | undefined;
            modReports?: (any[][] & (any[] & any[] & { [K_10 in Exclude<keyof I["data"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_11 in Exclude<keyof I["data"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
            name?: string | undefined;
            noFollow?: boolean | undefined;
            numReports?: number | undefined;
            parentId?: string | undefined;
            permalink?: string | undefined;
            removalReason?: string | undefined;
            removed?: boolean | undefined;
            replies?: string | undefined;
            reportReasons?: (string[] & string[] & { [K_12 in Exclude<keyof I["data"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
            rteMode?: string | undefined;
            saved?: boolean | undefined;
            score?: number | undefined;
            scoreHidden?: boolean | undefined;
            sendReplies?: boolean | undefined;
            spam?: boolean | undefined;
            stickied?: boolean | undefined;
            subreddit?: string | undefined;
            subredditId?: string | undefined;
            subredditNamePrefixed?: string | undefined;
            subredditType?: string | undefined;
            topAwardedType?: string | undefined;
            totalAwardsReceived?: number | undefined;
            treatmentTags?: (string[] & string[] & { [K_13 in Exclude<keyof I["data"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
            unrepliableReason?: string | undefined;
            ups?: number | undefined;
            userReports?: (any[][] & (any[] & any[] & { [K_14 in Exclude<keyof I["data"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_15 in Exclude<keyof I["data"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
            count?: number | undefined;
            children?: (string[] & string[] & { [K_16 in Exclude<keyof I["data"]["children"], "$type" | keyof string[]>]: never; }) | undefined;
            banInfo?: ({
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } & {
                auto?: boolean | undefined;
                bannedAt?: number | undefined;
                banner?: string | undefined;
                moderatorBanned?: boolean | undefined;
                note?: string | undefined;
                unbanner?: string | undefined;
                unbannedAt?: number | undefined;
                resetUsed?: boolean | undefined;
                reasonId?: string | undefined;
                reasonTitle?: string | undefined;
                reasonMessage?: string | undefined;
                reasonBy?: string | undefined;
                modNote?: string | undefined;
                banAllTriggered?: boolean | undefined;
                subredditMessage?: string | undefined;
                removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
            } & { [K_17 in Exclude<keyof I["data"]["banInfo"], "$type" | keyof import("../../../reddit/common.js").BanInfo>]: never; }) | undefined;
            markedSpam?: boolean | undefined;
            verdict?: string | undefined;
        } & { [K_18 in Exclude<keyof I["data"], "$type" | keyof Comment>]: never; }) | undefined;
    } & { [K_19 in Exclude<keyof I, "$type" | keyof JsonWrappedComment_WrappedComment>]: never; }>(object: I): JsonWrappedComment_WrappedComment;
};
export declare const JsonWrappedComment_JsonData: {
    $type: "devvit.plugin.redditapi.linksandcomments.JsonWrappedComment.JsonData";
    encode(message: JsonWrappedComment_JsonData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): JsonWrappedComment_JsonData;
    fromJSON(object: any): JsonWrappedComment_JsonData;
    toJSON(message: JsonWrappedComment_JsonData): unknown;
    fromPartial<I extends {
        things?: {
            kind?: string | undefined;
            data?: {
                allAwardings?: {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: {
                    e?: string | undefined;
                    t?: string | undefined;
                }[] | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: string[] | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: any[][] | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: string[] | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: string[] | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: any[][] | undefined;
                count?: number | undefined;
                children?: string[] | undefined;
                banInfo?: {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        things?: ({
            kind?: string | undefined;
            data?: {
                allAwardings?: {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: {
                    e?: string | undefined;
                    t?: string | undefined;
                }[] | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: string[] | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: any[][] | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: string[] | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: string[] | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: any[][] | undefined;
                count?: number | undefined;
                children?: string[] | undefined;
                banInfo?: {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } | undefined;
        }[] & ({
            kind?: string | undefined;
            data?: {
                allAwardings?: {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: {
                    e?: string | undefined;
                    t?: string | undefined;
                }[] | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: string[] | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: any[][] | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: string[] | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: string[] | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: any[][] | undefined;
                count?: number | undefined;
                children?: string[] | undefined;
                banInfo?: {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } | undefined;
        } & {
            kind?: string | undefined;
            data?: ({
                allAwardings?: {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: {
                    e?: string | undefined;
                    t?: string | undefined;
                }[] | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: string[] | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: any[][] | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: string[] | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: string[] | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: any[][] | undefined;
                count?: number | undefined;
                children?: string[] | undefined;
                banInfo?: {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } & {
                allAwardings?: ({
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] & ({
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                } & {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] & ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & { [K in Exclude<keyof I["things"][number]["data"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_1 in Exclude<keyof I["things"][number]["data"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[]>]: never; }) | undefined;
                    resizedStaticIcons?: ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] & ({
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    } & { [K_2 in Exclude<keyof I["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_3 in Exclude<keyof I["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[]>]: never; }) | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                } & { [K_4 in Exclude<keyof I["things"][number]["data"]["allAwardings"][number], "$type" | keyof import("../../../reddit/common.js").Awarding>]: never; })[] & { [K_5 in Exclude<keyof I["things"][number]["data"]["allAwardings"], "$type" | keyof {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[]>]: never; }) | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: ({
                    e?: string | undefined;
                    t?: string | undefined;
                }[] & ({
                    e?: string | undefined;
                    t?: string | undefined;
                } & {
                    e?: string | undefined;
                    t?: string | undefined;
                } & { [K_6 in Exclude<keyof I["things"][number]["data"]["authorFlairRichtext"][number], "$type" | keyof import("../../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_7 in Exclude<keyof I["things"][number]["data"]["authorFlairRichtext"], "$type" | keyof {
                    e?: string | undefined;
                    t?: string | undefined;
                }[]>]: never; }) | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: (string[] & string[] & { [K_8 in Exclude<keyof I["things"][number]["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: ({
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } & {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } & { [K_9 in Exclude<keyof I["things"][number]["data"]["gildings"], "$type" | keyof import("../../../reddit/common.js").Gildings>]: never; }) | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: (any[][] & (any[] & any[] & { [K_10 in Exclude<keyof I["things"][number]["data"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_11 in Exclude<keyof I["things"][number]["data"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: (string[] & string[] & { [K_12 in Exclude<keyof I["things"][number]["data"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: (string[] & string[] & { [K_13 in Exclude<keyof I["things"][number]["data"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: (any[][] & (any[] & any[] & { [K_14 in Exclude<keyof I["things"][number]["data"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_15 in Exclude<keyof I["things"][number]["data"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                count?: number | undefined;
                children?: (string[] & string[] & { [K_16 in Exclude<keyof I["things"][number]["data"]["children"], "$type" | keyof string[]>]: never; }) | undefined;
                banInfo?: ({
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } & {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } & { [K_17 in Exclude<keyof I["things"][number]["data"]["banInfo"], "$type" | keyof import("../../../reddit/common.js").BanInfo>]: never; }) | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } & { [K_18 in Exclude<keyof I["things"][number]["data"], "$type" | keyof Comment>]: never; }) | undefined;
        } & { [K_19 in Exclude<keyof I["things"][number], "$type" | keyof JsonWrappedComment_WrappedComment>]: never; })[] & { [K_20 in Exclude<keyof I["things"], "$type" | keyof {
            kind?: string | undefined;
            data?: {
                allAwardings?: {
                    awardSubType?: string | undefined;
                    awardType?: string | undefined;
                    awardingsRequiredToGrantBenefits?: number | undefined;
                    coinPrice?: number | undefined;
                    coinReward?: number | undefined;
                    count?: number | undefined;
                    daysOfDripExtension?: number | undefined;
                    daysOfPremium?: number | undefined;
                    description?: string | undefined;
                    endDate?: string | undefined;
                    giverCoinReward?: number | undefined;
                    iconFormat?: string | undefined;
                    iconHeight?: number | undefined;
                    iconUrl?: string | undefined;
                    iconWidth?: number | undefined;
                    id?: string | undefined;
                    isEnabled?: boolean | undefined;
                    isNew?: boolean | undefined;
                    name?: string | undefined;
                    pennyDonate?: number | undefined;
                    pennyPrice?: number | undefined;
                    resizedIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    resizedStaticIcons?: {
                        height?: number | undefined;
                        url?: string | undefined;
                        width?: number | undefined;
                    }[] | undefined;
                    startDate?: string | undefined;
                    staticIconHeight?: number | undefined;
                    staticIconUrl?: string | undefined;
                    staticIconWidth?: number | undefined;
                    stickyDurationSeconds?: number | undefined;
                    subredditCoinReward?: number | undefined;
                    subredditId?: string | undefined;
                    tiersByRequiredAwardings?: string | undefined;
                }[] | undefined;
                approved?: boolean | undefined;
                approvedAtUtc?: number | undefined;
                approvedBy?: string | undefined;
                archived?: boolean | undefined;
                associatedAward?: string | undefined;
                author?: string | undefined;
                authorFlairBackgroundColor?: string | undefined;
                authorFlairCssClass?: string | undefined;
                authorFlairRichtext?: {
                    e?: string | undefined;
                    t?: string | undefined;
                }[] | undefined;
                authorFlairTemplateId?: string | undefined;
                authorFlairText?: string | undefined;
                authorFlairTextColor?: string | undefined;
                authorFlairType?: string | undefined;
                authorFullname?: string | undefined;
                authorIsBlocked?: boolean | undefined;
                authorPatreonFlair?: boolean | undefined;
                authorPremium?: boolean | undefined;
                awarders?: string[] | undefined;
                bannedAtUtc?: number | undefined;
                bannedBy?: string | undefined;
                body?: string | undefined;
                bodyHtml?: string | undefined;
                canGild?: boolean | undefined;
                canModPost?: boolean | undefined;
                collapsed?: boolean | undefined;
                collapsedBecauseCrowdControl?: boolean | undefined;
                collapsedReason?: string | undefined;
                collapsedReasonCode?: string | undefined;
                commentType?: string | undefined;
                controversiality?: number | undefined;
                created?: number | undefined;
                createdUtc?: number | undefined;
                depth?: number | undefined;
                distinguished?: string | undefined;
                downs?: number | undefined;
                edited?: boolean | undefined;
                gilded?: number | undefined;
                gildings?: {
                    gid1?: number | undefined;
                    gid2?: number | undefined;
                    gid3?: number | undefined;
                } | undefined;
                id?: string | undefined;
                ignoreReports?: boolean | undefined;
                isSubmitter?: boolean | undefined;
                likes?: boolean | undefined;
                linkId?: string | undefined;
                locked?: boolean | undefined;
                modNote?: string | undefined;
                modReasonBy?: string | undefined;
                modReasonTitle?: string | undefined;
                modReports?: any[][] | undefined;
                name?: string | undefined;
                noFollow?: boolean | undefined;
                numReports?: number | undefined;
                parentId?: string | undefined;
                permalink?: string | undefined;
                removalReason?: string | undefined;
                removed?: boolean | undefined;
                replies?: string | undefined;
                reportReasons?: string[] | undefined;
                rteMode?: string | undefined;
                saved?: boolean | undefined;
                score?: number | undefined;
                scoreHidden?: boolean | undefined;
                sendReplies?: boolean | undefined;
                spam?: boolean | undefined;
                stickied?: boolean | undefined;
                subreddit?: string | undefined;
                subredditId?: string | undefined;
                subredditNamePrefixed?: string | undefined;
                subredditType?: string | undefined;
                topAwardedType?: string | undefined;
                totalAwardsReceived?: number | undefined;
                treatmentTags?: string[] | undefined;
                unrepliableReason?: string | undefined;
                ups?: number | undefined;
                userReports?: any[][] | undefined;
                count?: number | undefined;
                children?: string[] | undefined;
                banInfo?: {
                    auto?: boolean | undefined;
                    bannedAt?: number | undefined;
                    banner?: string | undefined;
                    moderatorBanned?: boolean | undefined;
                    note?: string | undefined;
                    unbanner?: string | undefined;
                    unbannedAt?: number | undefined;
                    resetUsed?: boolean | undefined;
                    reasonId?: string | undefined;
                    reasonTitle?: string | undefined;
                    reasonMessage?: string | undefined;
                    reasonBy?: string | undefined;
                    modNote?: string | undefined;
                    banAllTriggered?: boolean | undefined;
                    subredditMessage?: string | undefined;
                    removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                } | undefined;
                markedSpam?: boolean | undefined;
                verdict?: string | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_21 in Exclude<keyof I, "$type" | "things">]: never; }>(object: I): JsonWrappedComment_JsonData;
};
export declare const JsonWrappedComment_Json: {
    $type: "devvit.plugin.redditapi.linksandcomments.JsonWrappedComment.Json";
    encode(message: JsonWrappedComment_Json, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): JsonWrappedComment_Json;
    fromJSON(object: any): JsonWrappedComment_Json;
    toJSON(message: JsonWrappedComment_Json): unknown;
    fromPartial<I extends {
        errors?: string[] | undefined;
        data?: {
            things?: {
                kind?: string | undefined;
                data?: {
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        errors?: (string[] & string[] & { [K in Exclude<keyof I["errors"], "$type" | keyof string[]>]: never; }) | undefined;
        data?: ({
            things?: {
                kind?: string | undefined;
                data?: {
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            things?: ({
                kind?: string | undefined;
                data?: {
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } | undefined;
            }[] & ({
                kind?: string | undefined;
                data?: {
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } | undefined;
            } & {
                kind?: string | undefined;
                data?: ({
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } & {
                    allAwardings?: ({
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] & ({
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    } & {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: ({
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] & ({
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        } & {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        } & { [K_1 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"][number]["resizedIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_2 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"][number]["resizedIcons"], "$type" | keyof {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[]>]: never; }) | undefined;
                        resizedStaticIcons?: ({
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] & ({
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        } & {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        } & { [K_3 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"][number], "$type" | keyof import("../../../reddit/common.js").Awarding_Icon>]: never; })[] & { [K_4 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"][number]["resizedStaticIcons"], "$type" | keyof {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[]>]: never; }) | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    } & { [K_5 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"][number], "$type" | keyof import("../../../reddit/common.js").Awarding>]: never; })[] & { [K_6 in Exclude<keyof I["data"]["things"][number]["data"]["allAwardings"], "$type" | keyof {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[]>]: never; }) | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: ({
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] & ({
                        e?: string | undefined;
                        t?: string | undefined;
                    } & {
                        e?: string | undefined;
                        t?: string | undefined;
                    } & { [K_7 in Exclude<keyof I["data"]["things"][number]["data"]["authorFlairRichtext"][number], "$type" | keyof import("../../../reddit/common.js").AuthorFlairRichText>]: never; })[] & { [K_8 in Exclude<keyof I["data"]["things"][number]["data"]["authorFlairRichtext"], "$type" | keyof {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[]>]: never; }) | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: (string[] & string[] & { [K_9 in Exclude<keyof I["data"]["things"][number]["data"]["awarders"], "$type" | keyof string[]>]: never; }) | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: ({
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } & {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } & { [K_10 in Exclude<keyof I["data"]["things"][number]["data"]["gildings"], "$type" | keyof import("../../../reddit/common.js").Gildings>]: never; }) | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: (any[][] & (any[] & any[] & { [K_11 in Exclude<keyof I["data"]["things"][number]["data"]["modReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_12 in Exclude<keyof I["data"]["things"][number]["data"]["modReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: (string[] & string[] & { [K_13 in Exclude<keyof I["data"]["things"][number]["data"]["reportReasons"], "$type" | keyof string[]>]: never; }) | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: (string[] & string[] & { [K_14 in Exclude<keyof I["data"]["things"][number]["data"]["treatmentTags"], "$type" | keyof string[]>]: never; }) | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: (any[][] & (any[] & any[] & { [K_15 in Exclude<keyof I["data"]["things"][number]["data"]["userReports"][number], "$type" | keyof any[]>]: never; })[] & { [K_16 in Exclude<keyof I["data"]["things"][number]["data"]["userReports"], "$type" | keyof any[][]>]: never; }) | undefined;
                    count?: number | undefined;
                    children?: (string[] & string[] & { [K_17 in Exclude<keyof I["data"]["things"][number]["data"]["children"], "$type" | keyof string[]>]: never; }) | undefined;
                    banInfo?: ({
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } & {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } & { [K_18 in Exclude<keyof I["data"]["things"][number]["data"]["banInfo"], "$type" | keyof import("../../../reddit/common.js").BanInfo>]: never; }) | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } & { [K_19 in Exclude<keyof I["data"]["things"][number]["data"], "$type" | keyof Comment>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["data"]["things"][number], "$type" | keyof JsonWrappedComment_WrappedComment>]: never; })[] & { [K_21 in Exclude<keyof I["data"]["things"], "$type" | keyof {
                kind?: string | undefined;
                data?: {
                    allAwardings?: {
                        awardSubType?: string | undefined;
                        awardType?: string | undefined;
                        awardingsRequiredToGrantBenefits?: number | undefined;
                        coinPrice?: number | undefined;
                        coinReward?: number | undefined;
                        count?: number | undefined;
                        daysOfDripExtension?: number | undefined;
                        daysOfPremium?: number | undefined;
                        description?: string | undefined;
                        endDate?: string | undefined;
                        giverCoinReward?: number | undefined;
                        iconFormat?: string | undefined;
                        iconHeight?: number | undefined;
                        iconUrl?: string | undefined;
                        iconWidth?: number | undefined;
                        id?: string | undefined;
                        isEnabled?: boolean | undefined;
                        isNew?: boolean | undefined;
                        name?: string | undefined;
                        pennyDonate?: number | undefined;
                        pennyPrice?: number | undefined;
                        resizedIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        resizedStaticIcons?: {
                            height?: number | undefined;
                            url?: string | undefined;
                            width?: number | undefined;
                        }[] | undefined;
                        startDate?: string | undefined;
                        staticIconHeight?: number | undefined;
                        staticIconUrl?: string | undefined;
                        staticIconWidth?: number | undefined;
                        stickyDurationSeconds?: number | undefined;
                        subredditCoinReward?: number | undefined;
                        subredditId?: string | undefined;
                        tiersByRequiredAwardings?: string | undefined;
                    }[] | undefined;
                    approved?: boolean | undefined;
                    approvedAtUtc?: number | undefined;
                    approvedBy?: string | undefined;
                    archived?: boolean | undefined;
                    associatedAward?: string | undefined;
                    author?: string | undefined;
                    authorFlairBackgroundColor?: string | undefined;
                    authorFlairCssClass?: string | undefined;
                    authorFlairRichtext?: {
                        e?: string | undefined;
                        t?: string | undefined;
                    }[] | undefined;
                    authorFlairTemplateId?: string | undefined;
                    authorFlairText?: string | undefined;
                    authorFlairTextColor?: string | undefined;
                    authorFlairType?: string | undefined;
                    authorFullname?: string | undefined;
                    authorIsBlocked?: boolean | undefined;
                    authorPatreonFlair?: boolean | undefined;
                    authorPremium?: boolean | undefined;
                    awarders?: string[] | undefined;
                    bannedAtUtc?: number | undefined;
                    bannedBy?: string | undefined;
                    body?: string | undefined;
                    bodyHtml?: string | undefined;
                    canGild?: boolean | undefined;
                    canModPost?: boolean | undefined;
                    collapsed?: boolean | undefined;
                    collapsedBecauseCrowdControl?: boolean | undefined;
                    collapsedReason?: string | undefined;
                    collapsedReasonCode?: string | undefined;
                    commentType?: string | undefined;
                    controversiality?: number | undefined;
                    created?: number | undefined;
                    createdUtc?: number | undefined;
                    depth?: number | undefined;
                    distinguished?: string | undefined;
                    downs?: number | undefined;
                    edited?: boolean | undefined;
                    gilded?: number | undefined;
                    gildings?: {
                        gid1?: number | undefined;
                        gid2?: number | undefined;
                        gid3?: number | undefined;
                    } | undefined;
                    id?: string | undefined;
                    ignoreReports?: boolean | undefined;
                    isSubmitter?: boolean | undefined;
                    likes?: boolean | undefined;
                    linkId?: string | undefined;
                    locked?: boolean | undefined;
                    modNote?: string | undefined;
                    modReasonBy?: string | undefined;
                    modReasonTitle?: string | undefined;
                    modReports?: any[][] | undefined;
                    name?: string | undefined;
                    noFollow?: boolean | undefined;
                    numReports?: number | undefined;
                    parentId?: string | undefined;
                    permalink?: string | undefined;
                    removalReason?: string | undefined;
                    removed?: boolean | undefined;
                    replies?: string | undefined;
                    reportReasons?: string[] | undefined;
                    rteMode?: string | undefined;
                    saved?: boolean | undefined;
                    score?: number | undefined;
                    scoreHidden?: boolean | undefined;
                    sendReplies?: boolean | undefined;
                    spam?: boolean | undefined;
                    stickied?: boolean | undefined;
                    subreddit?: string | undefined;
                    subredditId?: string | undefined;
                    subredditNamePrefixed?: string | undefined;
                    subredditType?: string | undefined;
                    topAwardedType?: string | undefined;
                    totalAwardsReceived?: number | undefined;
                    treatmentTags?: string[] | undefined;
                    unrepliableReason?: string | undefined;
                    ups?: number | undefined;
                    userReports?: any[][] | undefined;
                    count?: number | undefined;
                    children?: string[] | undefined;
                    banInfo?: {
                        auto?: boolean | undefined;
                        bannedAt?: number | undefined;
                        banner?: string | undefined;
                        moderatorBanned?: boolean | undefined;
                        note?: string | undefined;
                        unbanner?: string | undefined;
                        unbannedAt?: number | undefined;
                        resetUsed?: boolean | undefined;
                        reasonId?: string | undefined;
                        reasonTitle?: string | undefined;
                        reasonMessage?: string | undefined;
                        reasonBy?: string | undefined;
                        modNote?: string | undefined;
                        banAllTriggered?: boolean | undefined;
                        subredditMessage?: string | undefined;
                        removeAction?: import("../../../reddit/common.js").BanInfo_BanInfoAction | undefined;
                    } | undefined;
                    markedSpam?: boolean | undefined;
                    verdict?: string | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_22 in Exclude<keyof I["data"], "$type" | "things">]: never; }) | undefined;
    } & { [K_23 in Exclude<keyof I, "$type" | keyof JsonWrappedComment_Json>]: never; }>(object: I): JsonWrappedComment_Json;
};
export declare const SubmitResponse: {
    $type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse";
    encode(message: SubmitResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubmitResponse;
    fromJSON(object: any): SubmitResponse;
    toJSON(message: SubmitResponse): unknown;
    fromPartial<I extends {
        json?: {
            errors?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            data?: {
                url?: string | undefined;
                draftsCount?: number | undefined;
                id?: string | undefined;
                name?: string | undefined;
            } | undefined;
        } | undefined;
    } & {
        json?: ({
            errors?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            data?: {
                url?: string | undefined;
                draftsCount?: number | undefined;
                id?: string | undefined;
                name?: string | undefined;
            } | undefined;
        } & {
            errors?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & { [K in Exclude<keyof I["json"]["errors"][number], "$type" | keyof Any>]: never; })[] & { [K_1 in Exclude<keyof I["json"]["errors"], "$type" | keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>]: never; }) | undefined;
            data?: ({
                url?: string | undefined;
                draftsCount?: number | undefined;
                id?: string | undefined;
                name?: string | undefined;
            } & {
                url?: string | undefined;
                draftsCount?: number | undefined;
                id?: string | undefined;
                name?: string | undefined;
            } & { [K_2 in Exclude<keyof I["json"]["data"], "$type" | keyof SubmitResponse_JsonType_JsonData>]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["json"], "$type" | keyof SubmitResponse_JsonType>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | "json">]: never; }>(object: I): SubmitResponse;
};
export declare const SubmitResponse_JsonType: {
    $type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType";
    encode(message: SubmitResponse_JsonType, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubmitResponse_JsonType;
    fromJSON(object: any): SubmitResponse_JsonType;
    toJSON(message: SubmitResponse_JsonType): unknown;
    fromPartial<I extends {
        errors?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        data?: {
            url?: string | undefined;
            draftsCount?: number | undefined;
            id?: string | undefined;
            name?: string | undefined;
        } | undefined;
    } & {
        errors?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & { [K in Exclude<keyof I["errors"][number], "$type" | keyof Any>]: never; })[] & { [K_1 in Exclude<keyof I["errors"], "$type" | keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
        data?: ({
            url?: string | undefined;
            draftsCount?: number | undefined;
            id?: string | undefined;
            name?: string | undefined;
        } & {
            url?: string | undefined;
            draftsCount?: number | undefined;
            id?: string | undefined;
            name?: string | undefined;
        } & { [K_2 in Exclude<keyof I["data"], "$type" | keyof SubmitResponse_JsonType_JsonData>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof SubmitResponse_JsonType>]: never; }>(object: I): SubmitResponse_JsonType;
};
export declare const SubmitResponse_JsonType_JsonData: {
    $type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType.JsonData";
    encode(message: SubmitResponse_JsonType_JsonData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubmitResponse_JsonType_JsonData;
    fromJSON(object: any): SubmitResponse_JsonType_JsonData;
    toJSON(message: SubmitResponse_JsonType_JsonData): unknown;
    fromPartial<I extends {
        url?: string | undefined;
        draftsCount?: number | undefined;
        id?: string | undefined;
        name?: string | undefined;
    } & {
        url?: string | undefined;
        draftsCount?: number | undefined;
        id?: string | undefined;
        name?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof SubmitResponse_JsonType_JsonData>]: never; }>(object: I): SubmitResponse_JsonType_JsonData;
};
//# sourceMappingURL=linksandcomments_msg.d.ts.map