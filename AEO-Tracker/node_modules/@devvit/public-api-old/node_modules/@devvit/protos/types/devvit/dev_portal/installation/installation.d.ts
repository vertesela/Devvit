/**
 * #installation.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { ThingType } from '../../reddit/thing_type.js';
import { AppInfo } from '../app/info/app_info.js';
import { AppVersionInfo, InstallationType } from '../app_version/info/app_version_info.js';
export declare enum UpgradeStrategy {
    MANUAL = 0,
    AUTOMATIC = 1,
    UNRECOGNIZED = -1
}
export declare function upgradeStrategyFromJSON(object: any): UpgradeStrategy;
export declare function upgradeStrategyToJSON(object: UpgradeStrategy): number;
export declare enum InstallationHistoryEventName {
    INSTALLED = 0,
    UNINSTALLED = 1,
    UPGRADED = 2,
    UPDATED = 3,
    BANNED = 4,
    UNBANNED = 5,
    UNRECOGNIZED = -1
}
export declare function installationHistoryEventNameFromJSON(object: any): InstallationHistoryEventName;
export declare function installationHistoryEventNameToJSON(object: InstallationHistoryEventName): number;
export interface OptionalUpgradeStrategy {
    value: UpgradeStrategy;
}
/** Used to install an app */
export interface InstallationCreationRequest {
    /** What app version are you installing? */
    appVersionId: string;
    /** Who should this app run as? If not present, will be run by the user installing the app. */
    runAs?: string;
    /** What type of install is this? */
    type: InstallationType;
    /**
     * The subreddit or user to install on. For subreddits, this is either the
     * subreddit name (**with** "r/" prefix) or its t5 ID. Eg, `r/beta` or
     * `t5_15e`. For users, this is the username (**with** "u/" prefix) or the t2 ID.
     */
    location: string;
    /** What is the installation's upgrade strategy? */
    upgradeStrategy: UpgradeStrategy;
    /** If applicable, what is the configuration for that upgrade strategy? */
    upgradeStrategyConfig?: {
        [key: string]: any;
    };
}
/**
 * Used to update an existing installation's information.
 * If a field is optional, omitting it will leave its value unchanged.
 */
export interface InstallationUpdateRequest {
    /** What is the ID of the installation you want to change? */
    id: string;
    /** Who should this app run as? If not present, will be run by the user installing the app. */
    runAs?: string;
    /** What is the installation's upgrade strategy? */
    upgradeStrategy?: OptionalUpgradeStrategy;
    /** If applicable, what is the configuration for that upgrade strategy? */
    upgradeStrategyConfig?: {
        [key: string]: any;
    };
    /** Disable this installation of the app? */
    isEnabled?: boolean;
}
/** Used to upgrade an existing installation to a newer version. */
export interface InstallationUpgradeRequest {
    /** What is the ID of the installation you want to change? */
    id: string;
    /**
     * What version of the app are you upgrading to? (NOTE: This must be a version of
     * the same app, and must be a later version than the one currently installed.)
     * If not given, we will upgrade you to the latest non-prerelease version of the app.
     */
    appVersionId?: string;
}
export interface InstallationUpgradeManyRequest {
    /** What are the IDs of the installations you want to change? */
    ids: string[];
    /**
     * What version of the app are you upgrading them all to? (NOTE: This must be a version
     * of the same app, and must be a later version than the one currently installed.)
     */
    appVersionId: string;
}
export interface GetByAppNameAndInstallLocationRequest {
    /** What is the slug of the app you're looking for? */
    slug: string;
    /** What type of install are you looking for? */
    type: InstallationType;
    /** What is the install location? */
    location: string;
}
/** Used to get all installs in a given location */
export interface GetAllWithInstallLocationRequest {
    /** What type of install are you looking for? */
    type: InstallationType;
    /** What is the install location? */
    location: string;
}
/** Used to get all installs made by a given user */
export interface GetAllWithInstallerRequest {
    /** Whose installs are you looking for? (Can be a t2_ ID or a username, with or without `u/`) */
    installedBy: string;
}
export interface GetInstallationHistoryRequest {
    /** What type of install are you looking for? */
    type: InstallationType;
    /** What is the install location? */
    location: string;
    /** What is the slug of the app you're looking for? */
    slug: string;
    /** Beginning of the time window. Leaving null implies searching from the beginning */
    from?: Date;
    /** End of the time window. Leaving null implies searching until the end */
    to?: Date;
    /** How many items to take? */
    take?: number | undefined;
    /** Order in desc order? */
    desc?: boolean | undefined;
}
/** Contains the details of an installation. For field documentation, refer to the Prisma schema. */
export interface InstallationInfo {
    id: string;
    /** string installed_by = 2; // Removed; see DX-2225 */
    upgradeStrategy: UpgradeStrategy;
    upgradeStrategyConfig?: {
        [key: string]: any;
    };
    runAs?: string;
    type: InstallationType;
    location?: InstallationLocationInfo;
    isEnabled: boolean;
}
export interface InstallationLocationInfo {
    /** Thing ID; eg, `"t5_2qh0u"` for r/pics. */
    id: string;
    /** Thing name; eg, `"pics"` for r/pics. */
    name: string;
    /** Thing type; eg, `5`, the second character in `t5_2qh0u` for r/pics. */
    type: ThingType;
    icon?: string;
    isNsfw: boolean;
    /** True if subreddit is private and the user isn't a member, or is not visible to viewer for any other reason. */
    isUnavailable: boolean;
}
/** Contains details of an installation, as well as what version was installed. */
export interface FullInstallationInfo {
    installation?: InstallationInfo;
    appVersion?: AppVersionInfo;
    app?: AppInfo;
}
/** Contains multiple installations. */
export interface MultipleInstallationsResponse {
    installations: InstallationInfo[];
}
/** Contains multiple installations and their app versions. */
export interface GetAllWithAppResponse {
    installations: InstallationWithAppVersion[];
}
/** An app installation with its matching app version info. */
export interface InstallationWithAppVersion {
    installation?: InstallationInfo;
    appVersion?: AppVersionInfo;
}
export interface InstallationUpgradeManyResponse {
    details: InstallationUpgradeManyResponse_InstallationUpgradeDetails[];
}
export interface InstallationUpgradeManyResponse_InstallationUpgradeDetails {
    id: string;
    success: boolean;
    error?: string | undefined;
}
/** Location details of an install including type of location, id, and name. (subreddit or user) */
export interface InstallationLocationDetails {
    type: InstallationType;
    /** The thing ID of the valid install location */
    thingId: string;
    /** The name of the valid install location */
    name: string;
}
export interface InstallationHistoryEvent {
    /** Who triggered this event? t2_id of the user */
    userId: string;
    /** What kind of event what it? */
    name: InstallationHistoryEventName;
    /** What are the details of the event? */
    details: {
        [key: string]: string;
    };
    /** When did this event occur? */
    createdAt?: Date;
}
export interface InstallationHistoryEvent_DetailsEntry {
    key: string;
    value: string;
}
export interface GetInstallationHistoryResponse {
    /** The events that occurred during the window specified by the request query */
    events: InstallationHistoryEvent[];
    /** Total number of events associated with the installation */
    totalEvents: number;
}
export declare const OptionalUpgradeStrategy: {
    $type: "devvit.dev_portal.installation.OptionalUpgradeStrategy";
    encode(message: OptionalUpgradeStrategy, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OptionalUpgradeStrategy;
    fromJSON(object: any): OptionalUpgradeStrategy;
    toJSON(message: OptionalUpgradeStrategy): unknown;
    fromPartial<I extends {
        value?: UpgradeStrategy | undefined;
    } & {
        value?: UpgradeStrategy | undefined;
    } & { [K in Exclude<keyof I, "$type" | "value">]: never; }>(object: I): OptionalUpgradeStrategy;
};
export declare const InstallationCreationRequest: {
    $type: "devvit.dev_portal.installation.InstallationCreationRequest";
    encode(message: InstallationCreationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationCreationRequest;
    fromJSON(object: any): InstallationCreationRequest;
    toJSON(message: InstallationCreationRequest): unknown;
    fromPartial<I extends {
        appVersionId?: string | undefined;
        runAs?: string | undefined;
        type?: InstallationType | undefined;
        location?: string | undefined;
        upgradeStrategy?: UpgradeStrategy | undefined;
        upgradeStrategyConfig?: {
            [x: string]: any;
        } | undefined;
    } & {
        appVersionId?: string | undefined;
        runAs?: string | undefined;
        type?: InstallationType | undefined;
        location?: string | undefined;
        upgradeStrategy?: UpgradeStrategy | undefined;
        upgradeStrategyConfig?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof InstallationCreationRequest>]: never; }>(object: I): InstallationCreationRequest;
};
export declare const InstallationUpdateRequest: {
    $type: "devvit.dev_portal.installation.InstallationUpdateRequest";
    encode(message: InstallationUpdateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationUpdateRequest;
    fromJSON(object: any): InstallationUpdateRequest;
    toJSON(message: InstallationUpdateRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        runAs?: string | undefined;
        upgradeStrategy?: {
            value?: UpgradeStrategy | undefined;
        } | undefined;
        upgradeStrategyConfig?: {
            [x: string]: any;
        } | undefined;
        isEnabled?: boolean | undefined;
    } & {
        id?: string | undefined;
        runAs?: string | undefined;
        upgradeStrategy?: ({
            value?: UpgradeStrategy | undefined;
        } & {
            value?: UpgradeStrategy | undefined;
        } & { [K in Exclude<keyof I["upgradeStrategy"], "$type" | "value">]: never; }) | undefined;
        upgradeStrategyConfig?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K_1 in Exclude<keyof I["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
        isEnabled?: boolean | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof InstallationUpdateRequest>]: never; }>(object: I): InstallationUpdateRequest;
};
export declare const InstallationUpgradeRequest: {
    $type: "devvit.dev_portal.installation.InstallationUpgradeRequest";
    encode(message: InstallationUpgradeRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationUpgradeRequest;
    fromJSON(object: any): InstallationUpgradeRequest;
    toJSON(message: InstallationUpgradeRequest): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        appVersionId?: string | undefined;
    } & {
        id?: string | undefined;
        appVersionId?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof InstallationUpgradeRequest>]: never; }>(object: I): InstallationUpgradeRequest;
};
export declare const InstallationUpgradeManyRequest: {
    $type: "devvit.dev_portal.installation.InstallationUpgradeManyRequest";
    encode(message: InstallationUpgradeManyRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationUpgradeManyRequest;
    fromJSON(object: any): InstallationUpgradeManyRequest;
    toJSON(message: InstallationUpgradeManyRequest): unknown;
    fromPartial<I extends {
        ids?: string[] | undefined;
        appVersionId?: string | undefined;
    } & {
        ids?: (string[] & string[] & { [K in Exclude<keyof I["ids"], "$type" | keyof string[]>]: never; }) | undefined;
        appVersionId?: string | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof InstallationUpgradeManyRequest>]: never; }>(object: I): InstallationUpgradeManyRequest;
};
export declare const GetByAppNameAndInstallLocationRequest: {
    $type: "devvit.dev_portal.installation.GetByAppNameAndInstallLocationRequest";
    encode(message: GetByAppNameAndInstallLocationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetByAppNameAndInstallLocationRequest;
    fromJSON(object: any): GetByAppNameAndInstallLocationRequest;
    toJSON(message: GetByAppNameAndInstallLocationRequest): unknown;
    fromPartial<I extends {
        slug?: string | undefined;
        type?: InstallationType | undefined;
        location?: string | undefined;
    } & {
        slug?: string | undefined;
        type?: InstallationType | undefined;
        location?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof GetByAppNameAndInstallLocationRequest>]: never; }>(object: I): GetByAppNameAndInstallLocationRequest;
};
export declare const GetAllWithInstallLocationRequest: {
    $type: "devvit.dev_portal.installation.GetAllWithInstallLocationRequest";
    encode(message: GetAllWithInstallLocationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetAllWithInstallLocationRequest;
    fromJSON(object: any): GetAllWithInstallLocationRequest;
    toJSON(message: GetAllWithInstallLocationRequest): unknown;
    fromPartial<I extends {
        type?: InstallationType | undefined;
        location?: string | undefined;
    } & {
        type?: InstallationType | undefined;
        location?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof GetAllWithInstallLocationRequest>]: never; }>(object: I): GetAllWithInstallLocationRequest;
};
export declare const GetAllWithInstallerRequest: {
    $type: "devvit.dev_portal.installation.GetAllWithInstallerRequest";
    encode(message: GetAllWithInstallerRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetAllWithInstallerRequest;
    fromJSON(object: any): GetAllWithInstallerRequest;
    toJSON(message: GetAllWithInstallerRequest): unknown;
    fromPartial<I extends {
        installedBy?: string | undefined;
    } & {
        installedBy?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | "installedBy">]: never; }>(object: I): GetAllWithInstallerRequest;
};
export declare const GetInstallationHistoryRequest: {
    $type: "devvit.dev_portal.installation.GetInstallationHistoryRequest";
    encode(message: GetInstallationHistoryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetInstallationHistoryRequest;
    fromJSON(object: any): GetInstallationHistoryRequest;
    toJSON(message: GetInstallationHistoryRequest): unknown;
    fromPartial<I extends {
        type?: InstallationType | undefined;
        location?: string | undefined;
        slug?: string | undefined;
        from?: Date | undefined;
        to?: Date | undefined;
        take?: number | undefined;
        desc?: boolean | undefined;
    } & {
        type?: InstallationType | undefined;
        location?: string | undefined;
        slug?: string | undefined;
        from?: Date | undefined;
        to?: Date | undefined;
        take?: number | undefined;
        desc?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof GetInstallationHistoryRequest>]: never; }>(object: I): GetInstallationHistoryRequest;
};
export declare const InstallationInfo: {
    $type: "devvit.dev_portal.installation.InstallationInfo";
    encode(message: InstallationInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationInfo;
    fromJSON(object: any): InstallationInfo;
    toJSON(message: InstallationInfo): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        upgradeStrategy?: UpgradeStrategy | undefined;
        upgradeStrategyConfig?: {
            [x: string]: any;
        } | undefined;
        runAs?: string | undefined;
        type?: InstallationType | undefined;
        location?: {
            id?: string | undefined;
            name?: string | undefined;
            type?: ThingType | undefined;
            icon?: string | undefined;
            isNsfw?: boolean | undefined;
            isUnavailable?: boolean | undefined;
        } | undefined;
        isEnabled?: boolean | undefined;
    } & {
        id?: string | undefined;
        upgradeStrategy?: UpgradeStrategy | undefined;
        upgradeStrategyConfig?: ({
            [x: string]: any;
        } & {
            [x: string]: any;
        } & { [K in Exclude<keyof I["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
        runAs?: string | undefined;
        type?: InstallationType | undefined;
        location?: ({
            id?: string | undefined;
            name?: string | undefined;
            type?: ThingType | undefined;
            icon?: string | undefined;
            isNsfw?: boolean | undefined;
            isUnavailable?: boolean | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            type?: ThingType | undefined;
            icon?: string | undefined;
            isNsfw?: boolean | undefined;
            isUnavailable?: boolean | undefined;
        } & { [K_1 in Exclude<keyof I["location"], "$type" | keyof InstallationLocationInfo>]: never; }) | undefined;
        isEnabled?: boolean | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof InstallationInfo>]: never; }>(object: I): InstallationInfo;
};
export declare const InstallationLocationInfo: {
    $type: "devvit.dev_portal.installation.InstallationLocationInfo";
    encode(message: InstallationLocationInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationLocationInfo;
    fromJSON(object: any): InstallationLocationInfo;
    toJSON(message: InstallationLocationInfo): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        name?: string | undefined;
        type?: ThingType | undefined;
        icon?: string | undefined;
        isNsfw?: boolean | undefined;
        isUnavailable?: boolean | undefined;
    } & {
        id?: string | undefined;
        name?: string | undefined;
        type?: ThingType | undefined;
        icon?: string | undefined;
        isNsfw?: boolean | undefined;
        isUnavailable?: boolean | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof InstallationLocationInfo>]: never; }>(object: I): InstallationLocationInfo;
};
export declare const FullInstallationInfo: {
    $type: "devvit.dev_portal.installation.FullInstallationInfo";
    encode(message: FullInstallationInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FullInstallationInfo;
    fromJSON(object: any): FullInstallationInfo;
    toJSON(message: FullInstallationInfo): unknown;
    fromPartial<I extends {
        installation?: {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        } | undefined;
        appVersion?: {
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: InstallationType[] | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } | undefined;
        app?: {
            id?: string | undefined;
            slug?: string | undefined;
            name?: string | undefined;
            description?: string | undefined;
            appAccount?: {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } | undefined;
            isNsfw?: boolean | undefined;
            isDelisted?: boolean | undefined;
            isFirstParty?: boolean | undefined;
            isArchived?: boolean | undefined;
            createdAt?: Date | undefined;
            owner?: {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } | undefined;
            categories?: import("../app/categories/categories.js").Categories[] | undefined;
            stats?: {
                installCount?: number | undefined;
            } | undefined;
            termsAndConditions?: string | undefined;
            privacyPolicy?: string | undefined;
            defaultPool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
        } | undefined;
    } & {
        installation?: ({
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        } & {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K in Exclude<keyof I["installation"]["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: ({
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["installation"]["location"], "$type" | keyof InstallationLocationInfo>]: never; }) | undefined;
            isEnabled?: boolean | undefined;
        } & { [K_2 in Exclude<keyof I["installation"], "$type" | keyof InstallationInfo>]: never; }) | undefined;
        appVersion?: ({
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: InstallationType[] | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } & {
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: (InstallationType[] & InstallationType[] & { [K_3 in Exclude<keyof I["appVersion"]["validInstallTypes"], "$type" | keyof InstallationType[]>]: never; }) | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } & { [K_4 in Exclude<keyof I["appVersion"], "$type" | keyof AppVersionInfo>]: never; }) | undefined;
        app?: ({
            id?: string | undefined;
            slug?: string | undefined;
            name?: string | undefined;
            description?: string | undefined;
            appAccount?: {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } | undefined;
            isNsfw?: boolean | undefined;
            isDelisted?: boolean | undefined;
            isFirstParty?: boolean | undefined;
            isArchived?: boolean | undefined;
            createdAt?: Date | undefined;
            owner?: {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } | undefined;
            categories?: import("../app/categories/categories.js").Categories[] | undefined;
            stats?: {
                installCount?: number | undefined;
            } | undefined;
            termsAndConditions?: string | undefined;
            privacyPolicy?: string | undefined;
            defaultPool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
        } & {
            id?: string | undefined;
            slug?: string | undefined;
            name?: string | undefined;
            description?: string | undefined;
            appAccount?: ({
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } & {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } & { [K_5 in Exclude<keyof I["app"]["appAccount"], "$type" | keyof import("../reddit/redditor.js").Redditor>]: never; }) | undefined;
            isNsfw?: boolean | undefined;
            isDelisted?: boolean | undefined;
            isFirstParty?: boolean | undefined;
            isArchived?: boolean | undefined;
            createdAt?: Date | undefined;
            owner?: ({
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } & {
                id?: string | undefined;
                displayName?: string | undefined;
                snoovatarIconUrl?: string | undefined;
            } & { [K_6 in Exclude<keyof I["app"]["owner"], "$type" | keyof import("../reddit/redditor.js").Redditor>]: never; }) | undefined;
            categories?: (import("../app/categories/categories.js").Categories[] & import("../app/categories/categories.js").Categories[] & { [K_7 in Exclude<keyof I["app"]["categories"], "$type" | keyof import("../app/categories/categories.js").Categories[]>]: never; }) | undefined;
            stats?: ({
                installCount?: number | undefined;
            } & {
                installCount?: number | undefined;
            } & { [K_8 in Exclude<keyof I["app"]["stats"], "$type" | "installCount">]: never; }) | undefined;
            termsAndConditions?: string | undefined;
            privacyPolicy?: string | undefined;
            defaultPool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
        } & { [K_9 in Exclude<keyof I["app"], "$type" | keyof AppInfo>]: never; }) | undefined;
    } & { [K_10 in Exclude<keyof I, "$type" | keyof FullInstallationInfo>]: never; }>(object: I): FullInstallationInfo;
};
export declare const MultipleInstallationsResponse: {
    $type: "devvit.dev_portal.installation.MultipleInstallationsResponse";
    encode(message: MultipleInstallationsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MultipleInstallationsResponse;
    fromJSON(object: any): MultipleInstallationsResponse;
    toJSON(message: MultipleInstallationsResponse): unknown;
    fromPartial<I extends {
        installations?: {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        }[] | undefined;
    } & {
        installations?: ({
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        }[] & ({
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        } & {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K in Exclude<keyof I["installations"][number]["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: ({
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["installations"][number]["location"], "$type" | keyof InstallationLocationInfo>]: never; }) | undefined;
            isEnabled?: boolean | undefined;
        } & { [K_2 in Exclude<keyof I["installations"][number], "$type" | keyof InstallationInfo>]: never; })[] & { [K_3 in Exclude<keyof I["installations"], "$type" | keyof {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "$type" | "installations">]: never; }>(object: I): MultipleInstallationsResponse;
};
export declare const GetAllWithAppResponse: {
    $type: "devvit.dev_portal.installation.GetAllWithAppResponse";
    encode(message: GetAllWithAppResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetAllWithAppResponse;
    fromJSON(object: any): GetAllWithAppResponse;
    toJSON(message: GetAllWithAppResponse): unknown;
    fromPartial<I extends {
        installations?: {
            installation?: {
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: {
                    [x: string]: any;
                } | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } | undefined;
                isEnabled?: boolean | undefined;
            } | undefined;
            appVersion?: {
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: InstallationType[] | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        installations?: ({
            installation?: {
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: {
                    [x: string]: any;
                } | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } | undefined;
                isEnabled?: boolean | undefined;
            } | undefined;
            appVersion?: {
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: InstallationType[] | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } | undefined;
        }[] & ({
            installation?: {
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: {
                    [x: string]: any;
                } | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } | undefined;
                isEnabled?: boolean | undefined;
            } | undefined;
            appVersion?: {
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: InstallationType[] | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } | undefined;
        } & {
            installation?: ({
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: {
                    [x: string]: any;
                } | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } | undefined;
                isEnabled?: boolean | undefined;
            } & {
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: ({
                    [x: string]: any;
                } & {
                    [x: string]: any;
                } & { [K in Exclude<keyof I["installations"][number]["installation"]["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: ({
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } & {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } & { [K_1 in Exclude<keyof I["installations"][number]["installation"]["location"], "$type" | keyof InstallationLocationInfo>]: never; }) | undefined;
                isEnabled?: boolean | undefined;
            } & { [K_2 in Exclude<keyof I["installations"][number]["installation"], "$type" | keyof InstallationInfo>]: never; }) | undefined;
            appVersion?: ({
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: InstallationType[] | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } & {
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: (InstallationType[] & InstallationType[] & { [K_3 in Exclude<keyof I["installations"][number]["appVersion"]["validInstallTypes"], "$type" | keyof InstallationType[]>]: never; }) | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } & { [K_4 in Exclude<keyof I["installations"][number]["appVersion"], "$type" | keyof AppVersionInfo>]: never; }) | undefined;
        } & { [K_5 in Exclude<keyof I["installations"][number], "$type" | keyof InstallationWithAppVersion>]: never; })[] & { [K_6 in Exclude<keyof I["installations"], "$type" | keyof {
            installation?: {
                id?: string | undefined;
                upgradeStrategy?: UpgradeStrategy | undefined;
                upgradeStrategyConfig?: {
                    [x: string]: any;
                } | undefined;
                runAs?: string | undefined;
                type?: InstallationType | undefined;
                location?: {
                    id?: string | undefined;
                    name?: string | undefined;
                    type?: ThingType | undefined;
                    icon?: string | undefined;
                    isNsfw?: boolean | undefined;
                    isUnavailable?: boolean | undefined;
                } | undefined;
                isEnabled?: boolean | undefined;
            } | undefined;
            appVersion?: {
                id?: string | undefined;
                visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
                validInstallTypes?: InstallationType[] | undefined;
                majorVersion?: number | undefined;
                minorVersion?: number | undefined;
                patchVersion?: number | undefined;
                prereleaseVersion?: number | undefined;
                uploadedAt?: Date | undefined;
                buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
                builtAt?: Date | undefined;
                about?: string | undefined;
                hasCustomSettings?: boolean | undefined;
                pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
                reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_7 in Exclude<keyof I, "$type" | "installations">]: never; }>(object: I): GetAllWithAppResponse;
};
export declare const InstallationWithAppVersion: {
    $type: "devvit.dev_portal.installation.InstallationWithAppVersion";
    encode(message: InstallationWithAppVersion, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationWithAppVersion;
    fromJSON(object: any): InstallationWithAppVersion;
    toJSON(message: InstallationWithAppVersion): unknown;
    fromPartial<I extends {
        installation?: {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        } | undefined;
        appVersion?: {
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: InstallationType[] | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } | undefined;
    } & {
        installation?: ({
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: {
                [x: string]: any;
            } | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } | undefined;
            isEnabled?: boolean | undefined;
        } & {
            id?: string | undefined;
            upgradeStrategy?: UpgradeStrategy | undefined;
            upgradeStrategyConfig?: ({
                [x: string]: any;
            } & {
                [x: string]: any;
            } & { [K in Exclude<keyof I["installation"]["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
            runAs?: string | undefined;
            type?: InstallationType | undefined;
            location?: ({
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & {
                id?: string | undefined;
                name?: string | undefined;
                type?: ThingType | undefined;
                icon?: string | undefined;
                isNsfw?: boolean | undefined;
                isUnavailable?: boolean | undefined;
            } & { [K_1 in Exclude<keyof I["installation"]["location"], "$type" | keyof InstallationLocationInfo>]: never; }) | undefined;
            isEnabled?: boolean | undefined;
        } & { [K_2 in Exclude<keyof I["installation"], "$type" | keyof InstallationInfo>]: never; }) | undefined;
        appVersion?: ({
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: InstallationType[] | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } & {
            id?: string | undefined;
            visibility?: import("../app_version/info/app_version_info.js").VersionVisibility | undefined;
            validInstallTypes?: (InstallationType[] & InstallationType[] & { [K_3 in Exclude<keyof I["appVersion"]["validInstallTypes"], "$type" | keyof InstallationType[]>]: never; }) | undefined;
            majorVersion?: number | undefined;
            minorVersion?: number | undefined;
            patchVersion?: number | undefined;
            prereleaseVersion?: number | undefined;
            uploadedAt?: Date | undefined;
            buildStatus?: import("../app_version/info/app_version_info.js").BuildStatus | undefined;
            builtAt?: Date | undefined;
            about?: string | undefined;
            hasCustomSettings?: boolean | undefined;
            pool?: import("../app_version/info/app_version_info.js").ComputePool | undefined;
            reviewStatus?: import("../app_version/info/app_version_info.js").ReviewStatus | undefined;
        } & { [K_4 in Exclude<keyof I["appVersion"], "$type" | keyof AppVersionInfo>]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I, "$type" | keyof InstallationWithAppVersion>]: never; }>(object: I): InstallationWithAppVersion;
};
export declare const InstallationUpgradeManyResponse: {
    $type: "devvit.dev_portal.installation.InstallationUpgradeManyResponse";
    encode(message: InstallationUpgradeManyResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationUpgradeManyResponse;
    fromJSON(object: any): InstallationUpgradeManyResponse;
    toJSON(message: InstallationUpgradeManyResponse): unknown;
    fromPartial<I extends {
        details?: {
            id?: string | undefined;
            success?: boolean | undefined;
            error?: string | undefined;
        }[] | undefined;
    } & {
        details?: ({
            id?: string | undefined;
            success?: boolean | undefined;
            error?: string | undefined;
        }[] & ({
            id?: string | undefined;
            success?: boolean | undefined;
            error?: string | undefined;
        } & {
            id?: string | undefined;
            success?: boolean | undefined;
            error?: string | undefined;
        } & { [K in Exclude<keyof I["details"][number], "$type" | keyof InstallationUpgradeManyResponse_InstallationUpgradeDetails>]: never; })[] & { [K_1 in Exclude<keyof I["details"], "$type" | keyof {
            id?: string | undefined;
            success?: boolean | undefined;
            error?: string | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | "details">]: never; }>(object: I): InstallationUpgradeManyResponse;
};
export declare const InstallationUpgradeManyResponse_InstallationUpgradeDetails: {
    $type: "devvit.dev_portal.installation.InstallationUpgradeManyResponse.InstallationUpgradeDetails";
    encode(message: InstallationUpgradeManyResponse_InstallationUpgradeDetails, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationUpgradeManyResponse_InstallationUpgradeDetails;
    fromJSON(object: any): InstallationUpgradeManyResponse_InstallationUpgradeDetails;
    toJSON(message: InstallationUpgradeManyResponse_InstallationUpgradeDetails): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        success?: boolean | undefined;
        error?: string | undefined;
    } & {
        id?: string | undefined;
        success?: boolean | undefined;
        error?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof InstallationUpgradeManyResponse_InstallationUpgradeDetails>]: never; }>(object: I): InstallationUpgradeManyResponse_InstallationUpgradeDetails;
};
export declare const InstallationLocationDetails: {
    $type: "devvit.dev_portal.installation.InstallationLocationDetails";
    encode(message: InstallationLocationDetails, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationLocationDetails;
    fromJSON(object: any): InstallationLocationDetails;
    toJSON(message: InstallationLocationDetails): unknown;
    fromPartial<I extends {
        type?: InstallationType | undefined;
        thingId?: string | undefined;
        name?: string | undefined;
    } & {
        type?: InstallationType | undefined;
        thingId?: string | undefined;
        name?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof InstallationLocationDetails>]: never; }>(object: I): InstallationLocationDetails;
};
export declare const InstallationHistoryEvent: {
    $type: "devvit.dev_portal.installation.InstallationHistoryEvent";
    encode(message: InstallationHistoryEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationHistoryEvent;
    fromJSON(object: any): InstallationHistoryEvent;
    toJSON(message: InstallationHistoryEvent): unknown;
    fromPartial<I extends {
        userId?: string | undefined;
        name?: InstallationHistoryEventName | undefined;
        details?: {
            [x: string]: string | undefined;
        } | undefined;
        createdAt?: Date | undefined;
    } & {
        userId?: string | undefined;
        name?: InstallationHistoryEventName | undefined;
        details?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K in Exclude<keyof I["details"], string | number>]: never; }) | undefined;
        createdAt?: Date | undefined;
    } & { [K_1 in Exclude<keyof I, "$type" | keyof InstallationHistoryEvent>]: never; }>(object: I): InstallationHistoryEvent;
};
export declare const InstallationHistoryEvent_DetailsEntry: {
    $type: "devvit.dev_portal.installation.InstallationHistoryEvent.DetailsEntry";
    encode(message: InstallationHistoryEvent_DetailsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InstallationHistoryEvent_DetailsEntry;
    fromJSON(object: any): InstallationHistoryEvent_DetailsEntry;
    toJSON(message: InstallationHistoryEvent_DetailsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof InstallationHistoryEvent_DetailsEntry>]: never; }>(object: I): InstallationHistoryEvent_DetailsEntry;
};
export declare const GetInstallationHistoryResponse: {
    $type: "devvit.dev_portal.installation.GetInstallationHistoryResponse";
    encode(message: GetInstallationHistoryResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetInstallationHistoryResponse;
    fromJSON(object: any): GetInstallationHistoryResponse;
    toJSON(message: GetInstallationHistoryResponse): unknown;
    fromPartial<I extends {
        events?: {
            userId?: string | undefined;
            name?: InstallationHistoryEventName | undefined;
            details?: {
                [x: string]: string | undefined;
            } | undefined;
            createdAt?: Date | undefined;
        }[] | undefined;
        totalEvents?: number | undefined;
    } & {
        events?: ({
            userId?: string | undefined;
            name?: InstallationHistoryEventName | undefined;
            details?: {
                [x: string]: string | undefined;
            } | undefined;
            createdAt?: Date | undefined;
        }[] & ({
            userId?: string | undefined;
            name?: InstallationHistoryEventName | undefined;
            details?: {
                [x: string]: string | undefined;
            } | undefined;
            createdAt?: Date | undefined;
        } & {
            userId?: string | undefined;
            name?: InstallationHistoryEventName | undefined;
            details?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & { [K in Exclude<keyof I["events"][number]["details"], string | number>]: never; }) | undefined;
            createdAt?: Date | undefined;
        } & { [K_1 in Exclude<keyof I["events"][number], "$type" | keyof InstallationHistoryEvent>]: never; })[] & { [K_2 in Exclude<keyof I["events"], "$type" | keyof {
            userId?: string | undefined;
            name?: InstallationHistoryEventName | undefined;
            details?: {
                [x: string]: string | undefined;
            } | undefined;
            createdAt?: Date | undefined;
        }[]>]: never; }) | undefined;
        totalEvents?: number | undefined;
    } & { [K_3 in Exclude<keyof I, "$type" | keyof GetInstallationHistoryResponse>]: never; }>(object: I): GetInstallationHistoryResponse;
};
//# sourceMappingURL=installation.d.ts.map