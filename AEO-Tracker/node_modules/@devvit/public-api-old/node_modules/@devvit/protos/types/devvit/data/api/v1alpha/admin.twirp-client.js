import { DataApiAuthTokenRequest, DataApiAuthTokenResponse } from './admin.js';
export class DataApiAuthTokenIssuerClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.GenerateAuthToken.bind(this);
    }
    GenerateAuthToken(request) {
        const data = DataApiAuthTokenRequest.toJSON(request);
        const promise = this.rpc.request('devvit.data.api.v1alpha.DataApiAuthTokenIssuer', 'GenerateAuthToken', 'application/json', data);
        return promise.then((data) => DataApiAuthTokenResponse.fromJSON(data));
    }
}
export class DataApiAuthTokenIssuerClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.GenerateAuthToken.bind(this);
    }
    GenerateAuthToken(request) {
        const data = DataApiAuthTokenRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.data.api.v1alpha.DataApiAuthTokenIssuer', 'GenerateAuthToken', 'application/protobuf', data);
        return promise.then((data) => DataApiAuthTokenResponse.decode(data));
    }
}
