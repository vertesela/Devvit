/**
 * #admin.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { GetDataTokenByIdRequest, GetDataTokenByIdResponse, GetDataTokensByOrganizationNameRequest, GetDataTokensByOrganizationNameResponse, } from '../../../../data_api/admin/auth/auth.js';
import { GetDataSubscriptionByIdRequest, GetDataSubscriptionByIdResponse, } from '../../../../data_api/admin/subscription/subscription.js';
export class InternalDataApiAdminClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "devvit.dev_portal.internal.data_api.v1alpha.admin.InternalDataApiAdmin";
        this.rpc = rpc;
        this.GetDataTokenById = this.GetDataTokenById.bind(this);
        this.GetDataTokensByOrganizationName = this.GetDataTokensByOrganizationName.bind(this);
        this.GetDataSubscriptionById = this.GetDataSubscriptionById.bind(this);
    }
    GetDataTokenById(request) {
        const data = GetDataTokenByIdRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetDataTokenById", data);
        return promise.then((data) => GetDataTokenByIdResponse.decode(new _m0.Reader(data)));
    }
    GetDataTokensByOrganizationName(request) {
        const data = GetDataTokensByOrganizationNameRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetDataTokensByOrganizationName", data);
        return promise.then((data) => GetDataTokensByOrganizationNameResponse.decode(new _m0.Reader(data)));
    }
    GetDataSubscriptionById(request) {
        const data = GetDataSubscriptionByIdRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetDataSubscriptionById", data);
        return promise.then((data) => GetDataSubscriptionByIdResponse.decode(new _m0.Reader(data)));
    }
}
export const InternalDataApiAdminDefinition = {
    name: "InternalDataApiAdmin",
    fullName: "devvit.dev_portal.internal.data_api.v1alpha.admin.InternalDataApiAdmin",
    methods: {
        /** Data Token */
        getDataTokenById: {
            name: "GetDataTokenById",
            requestType: GetDataTokenByIdRequest,
            requestStream: false,
            responseType: GetDataTokenByIdResponse,
            responseStream: false,
            options: {},
        },
        getDataTokensByOrganizationName: {
            name: "GetDataTokensByOrganizationName",
            requestType: GetDataTokensByOrganizationNameRequest,
            requestStream: false,
            responseType: GetDataTokensByOrganizationNameResponse,
            responseStream: false,
            options: {},
        },
        /** Subscriptions */
        getDataSubscriptionById: {
            name: "GetDataSubscriptionById",
            requestType: GetDataSubscriptionByIdRequest,
            requestStream: false,
            responseType: GetDataSubscriptionByIdResponse,
            responseStream: false,
            options: {},
        },
    },
};
