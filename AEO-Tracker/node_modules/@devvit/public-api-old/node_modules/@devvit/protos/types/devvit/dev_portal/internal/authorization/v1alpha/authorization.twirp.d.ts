/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { DevPortalAuthCanViewLogsRequest, DevPortalAuthorizationResponse } from './authorization.js';
export interface DevPortalAuthorizationTwirp<T extends TwirpContext = TwirpContext> {
    CanViewLogs(ctx: T, request: DevPortalAuthCanViewLogsRequest): Promise<DevPortalAuthorizationResponse>;
}
export declare enum DevPortalAuthorizationMethod {
    CanViewLogs = "CanViewLogs"
}
export declare const DevPortalAuthorizationMethodList: DevPortalAuthorizationMethod[];
export declare function createDevPortalAuthorizationServer<T extends TwirpContext = TwirpContext>(service: DevPortalAuthorizationTwirp<T>): TwirpServer<DevPortalAuthorizationTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse>>, T>;
//# sourceMappingURL=authorization.twirp.d.ts.map