/**
 * #instance_settings.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { GetFieldsRequest, GetFieldsResponse, ValidateFormRequest, ValidateFormResponse } from './shared.js';
export class InstanceSettingsClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "devvit.actor.settings.v1alpha.InstanceSettings";
        this.rpc = rpc;
        this.GetSettingsFields = this.GetSettingsFields.bind(this);
        this.ValidateForm = this.ValidateForm.bind(this);
    }
    GetSettingsFields(request) {
        const data = GetFieldsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetSettingsFields", data);
        return promise.then((data) => GetFieldsResponse.decode(new _m0.Reader(data)));
    }
    ValidateForm(request) {
        const data = ValidateFormRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "ValidateForm", data);
        return promise.then((data) => ValidateFormResponse.decode(new _m0.Reader(data)));
    }
}
export const InstanceSettingsDefinition = {
    name: "InstanceSettings",
    fullName: "devvit.actor.settings.v1alpha.InstanceSettings",
    methods: {
        /** Requested by the platform when rendering the form to configure this actor */
        getSettingsFields: {
            name: "GetSettingsFields",
            requestType: GetFieldsRequest,
            requestStream: false,
            responseType: GetFieldsResponse,
            responseStream: false,
            options: {},
        },
        /** Called by the platform to allow more advanced verification of fields */
        validateForm: {
            name: "ValidateForm",
            requestType: ValidateFormRequest,
            requestStream: false,
            responseType: ValidateFormResponse,
            responseStream: false,
            options: {},
        },
    },
};
