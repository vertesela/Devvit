/**
 * #redditapiv2.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { JsonStatus } from '../redditapi/common/common_msg.js';
import { DeleteFlairTemplateRequest } from '../redditapi/flair/flair_msg.js';
import { SubredditCollectionsRequest, SubredditCollectionsResponse, } from '../redditapi/postcollections/postcollections_msg.js';
export class RedditAPIV2ClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "devvit.plugin.redditapiv2.RedditAPIV2";
        this.rpc = rpc;
        this.GetSubredditCollections = this.GetSubredditCollections.bind(this);
        this.DeleteFlairTemplate = this.DeleteFlairTemplate.bind(this);
    }
    GetSubredditCollections(request) {
        const data = SubredditCollectionsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "GetSubredditCollections", data);
        return promise.then((data) => SubredditCollectionsResponse.decode(new _m0.Reader(data)));
    }
    DeleteFlairTemplate(request) {
        const data = DeleteFlairTemplateRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "DeleteFlairTemplate", data);
        return promise.then((data) => JsonStatus.decode(new _m0.Reader(data)));
    }
}
export const RedditAPIV2Definition = {
    name: "RedditAPIV2",
    fullName: "devvit.plugin.redditapiv2.RedditAPIV2",
    methods: {
        getSubredditCollections: {
            name: "GetSubredditCollections",
            requestType: SubredditCollectionsRequest,
            requestStream: false,
            responseType: SubredditCollectionsResponse,
            responseStream: false,
            options: {},
        },
        deleteFlairTemplate: {
            name: "DeleteFlairTemplate",
            requestType: DeleteFlairTemplateRequest,
            requestStream: false,
            responseType: JsonStatus,
            responseStream: false,
            options: {},
        },
    },
};
