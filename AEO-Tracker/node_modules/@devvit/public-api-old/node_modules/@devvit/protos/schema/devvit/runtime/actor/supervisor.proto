syntax = "proto3";

package devvit.runtime.actor;

import "devvit/runtime/bundle.proto";
import "devvit/runtime/envelope.proto";
import "google/protobuf/empty.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/runtime/actor";
option java_package = "com.reddit.devvit.runtime.actor";

message UnloadRequest {
  bool force = 1;
  string hostname = 2;
}

// Root Worker, responsible for RPC and loading additional Workers
// local://supervisor
service Supervisor {
  // Transform an incoming envelope.
  //
  // Because the input and outputs are Envelopes, they are actually Envelopes
  // wrapped in Envelopes. That is, Envelope.message is an Envelope. The outer
  // Envelope.success flag indicates filter status.
  rpc Filter(devvit.runtime.Envelope) returns (devvit.runtime.Envelope);

  // Unpacks and loads each bundled Actor into their own Workers
  rpc Load(LinkedBundle) returns (google.protobuf.Empty);

  // Unloads the actor at the provided URI, and unloads dependencies if needed
  rpc Unload(UnloadRequest) returns (google.protobuf.Empty);
}
