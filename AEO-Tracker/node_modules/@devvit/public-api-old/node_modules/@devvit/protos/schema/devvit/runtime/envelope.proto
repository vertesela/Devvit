syntax = "proto3";

package devvit.runtime;

import "devvit/runtime/runtime_common.proto";
import "google/protobuf/struct.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/runtime";
option java_package = "com.reddit.devvit.runtime";

message Envelope {
  // Should be unique per-envelope. May remain the same for
  // envelopes that are mutated and forwarded along because
  // they are considered logically the same envelope.
  // Populated when the Envelope first gets post()ed to a central dispatcher.
  // Only to be used for debugging and repeat dispatch suppression.
  string id = 11;
  string src = 1;
  string dst = 2;
  // The method has this format:
  //
  //   /<Definition.fullName>/<MethodDefinition.name>
  //
  // See EnvelopeUtil.envelopeMethod().
  string method = 3;
  string stream_id = 4;
  string trace_id = 10;
  // When success is true and message is present, message adheres to the method
  // request / response type. When success is false, message's type is unknown.
  // In TypeScript only, messages are usually of type UnknownMessage.
  bool success = 5;
  google.protobuf.Value message = 6;
  bool request = 7;
  bool complete = 8;

  // Must be consistent per streamId.  Can be omitted from subsequent
  // messages.
  map<string, Strings> metadata = 9;
}
