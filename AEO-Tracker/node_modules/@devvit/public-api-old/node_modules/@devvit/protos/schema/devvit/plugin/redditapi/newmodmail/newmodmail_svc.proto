syntax = "proto3";

package devvit.plugin.redditapi.newmodmail;

import "devvit/plugin/redditapi/newmodmail/newmodmail_msg.proto";
import "google/protobuf/empty.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/plugin/redditapi";
option java_package = "com.reddit.devvit.plugin.redditapi.newmodmail";

// NEWMODMAIL - https://www.reddit.com/dev/api#section_modmail
service NewModmail {
  // https://www.reddit.com/dev/api#POST_api_mod_bulk_read
  rpc BulkReadConversations(BulkReadConversationsRequest) returns (BulkReadConversationsResponse);

  // https://www.reddit.com/dev/api#GET_api_mod_conversations
  rpc GetConversations(GetConversationsRequest) returns (GetConversationsResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations
  rpc CreateConversation(CreateConversationRequest) returns (CreateConversationResponse);

  // https://www.reddit.com/dev/api#GET_api_mod_conversations_:conversation_id
  rpc GetConversation(GetConversationRequest) returns (GetConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id
  rpc CreateConversationMessage(CreateConversationMessageRequest) returns (CreateConversationMessageResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_approve
  rpc ApproveConversation(BasicConversationRequest) returns (ApproveConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_archive
  rpc ArchiveConversation(BasicConversationRequest) returns (ArchiveConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_disapprove
  rpc DisapproveConversation(BasicConversationRequest) returns (ApproveConversationResponse);

  // https://www.reddit.com/dev/api#DELETE_api_mod_conversations_:conversation_id_highlight
  rpc UnhighlightConversation(BasicConversationRequest) returns (HighlightConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_highlight
  rpc HighlightConversation(BasicConversationRequest) returns (HighlightConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_mute
  rpc MuteConversation(MuteConversationRequest) returns (MuteConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_temp_ban
  rpc TempBan(TempBanRequest) returns (TempBanResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_unarchive
  rpc UnarchiveConversation(BasicConversationRequest) returns (ArchiveConversationResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_unban
  rpc Unban(BasicConversationRequest) returns (TempBanResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_:conversation_id_unmute
  rpc UnmuteConversation(BasicConversationRequest) returns (MuteConversationResponse);

  // https://www.reddit.com/dev/api#GET_api_mod_conversations_:conversation_id_user
  rpc UserConversations(BasicConversationRequest) returns (ConversationUserData);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_read
  rpc Read(BasicConversationsRequest) returns (google.protobuf.Empty);

  // https://www.reddit.com/dev/api#GET_api_mod_conversations_subreddits
  rpc Subreddits(google.protobuf.Empty) returns (SubredditsResponse);

  // https://www.reddit.com/dev/api#POST_api_mod_conversations_unread
  rpc Unread(BasicConversationsRequest) returns (google.protobuf.Empty);

  // https://www.reddit.com/dev/api#GET_api_mod_conversations_unread_count
  rpc UnreadCount(google.protobuf.Empty) returns (UnreadCountResponse);
}
