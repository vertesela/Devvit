import { RedditAPI } from './RedditAPI.js';
import { ClearFlairTemplatesRequest, DeleteFlairRequest, DeleteFlairTemplateRequest, Flair as _Flair, FlairArray, FlairConfigRequest, FlairCsvRequest, FlairCsvResponse, FlairListRequest, FlairListResponse, FlairObject, FlairRequest, FlairSelectorRequest, FlairSelectorResponse, FlairTemplateRequest, FlairTemplateOrderRequest, JsonStatus, LinkFlairRequest, Metadata, SelectFlairRequest, SetFlairEnabledRequest } from '@devvit/protos';
export declare class Flair extends RedditAPI implements _Flair {
    ClearFlairTemplates(request: ClearFlairTemplatesRequest, metadata: Metadata): Promise<JsonStatus>;
    DeleteFlair(request: DeleteFlairRequest, metadata: Metadata): Promise<JsonStatus>;
    DeleteFlairTemplate(request: DeleteFlairTemplateRequest, metadata: Metadata): Promise<JsonStatus>;
    Flair(request: FlairRequest, metadata: Metadata): Promise<JsonStatus>;
    FlairTemplateOrder(request: FlairTemplateOrderRequest, metadata: Metadata): Promise<JsonStatus>;
    FlairConfig(request: FlairConfigRequest, metadata: Metadata): Promise<JsonStatus>;
    FlairCsv(request: FlairCsvRequest, metadata: Metadata): Promise<FlairCsvResponse>;
    FlairList(request: FlairListRequest, metadata: Metadata): Promise<FlairListResponse>;
    FlairSelector(request: FlairSelectorRequest, metadata: Metadata): Promise<FlairSelectorResponse>;
    FlairTemplate(request: FlairTemplateRequest, metadata: Metadata): Promise<FlairObject>;
    LinkFlair(request: LinkFlairRequest, metadata: Metadata): Promise<FlairArray>;
    SelectFlair(request: SelectFlairRequest, metadata: Metadata): Promise<JsonStatus>;
    SetFlairEnabled(request: SetFlairEnabledRequest, metadata: Metadata): Promise<JsonStatus>;
    UserFlair(request: LinkFlairRequest, metadata: Metadata): Promise<FlairArray>;
}
//# sourceMappingURL=Flair.d.ts.map