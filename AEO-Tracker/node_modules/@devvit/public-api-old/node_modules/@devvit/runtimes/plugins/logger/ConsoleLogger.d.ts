import { LogErrorMessage, LogErrorResponse, LogEventResponse, Logger, LogMessage, LogResponse } from '@devvit/protos';
/** The Console-like APIs the plugin writes to. */
export interface PluginConsole {
    debug(...args: unknown[]): void;
    error(...args: unknown[]): void;
    info(...args: unknown[]): void;
    verbose(...args: unknown[]): void;
    warn(...args: unknown[]): void;
}
export declare const defaultConsole: PluginConsole;
export declare const voidConsole: PluginConsole;
/** Console API-ish logger plugin. */
export declare class ConsoleLogger implements Logger {
    #private;
    constructor(logger?: PluginConsole);
    Error(log: LogErrorMessage): Promise<LogErrorResponse>;
    Event(): Promise<LogEventResponse>;
    Log(log: LogMessage): Promise<LogResponse>;
}
//# sourceMappingURL=ConsoleLogger.d.ts.map