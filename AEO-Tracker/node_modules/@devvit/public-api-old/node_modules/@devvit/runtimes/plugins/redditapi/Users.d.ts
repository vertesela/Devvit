import { RedditAPI } from './RedditAPI.js';
import { BlockUserRequest, BlockUserResponse, BoolValue, Empty, FriendRequest, GenericUsersRequest, GeneralFriendResponse, JsonStatus, Listing, Metadata, ReportUserRequest, SetPermissionsRequest, UnfriendRequest, UpdateFriendRelationshipRequest, Users as _Users, UserAboutRequest, UserAboutResponse, UserDataByAccountIdsRequest, UserDataByAccountIdsResponse, UserTrophiesResponse, UserWhereRequest, UsernameAvailableRequest } from '@devvit/protos';
export declare class Users extends RedditAPI implements _Users {
    BlockUser(request: BlockUserRequest, metadata: Metadata): Promise<BlockUserResponse>;
    Friend(request: FriendRequest, metadata: Metadata): Promise<JsonStatus>;
    ReportUser(request: ReportUserRequest, metadata: Metadata): Promise<Empty>;
    SetPermissions(request: SetPermissionsRequest, metadata: Metadata): Promise<JsonStatus>;
    Unfriend(request: UnfriendRequest, metadata: Metadata): Promise<Empty>;
    UserDataByAccountIds(request: UserDataByAccountIdsRequest, metadata: Metadata): Promise<UserDataByAccountIdsResponse>;
    UsernameAvailable(request: UsernameAvailableRequest, metadata: Metadata): Promise<BoolValue>;
    UnfriendUser(request: GenericUsersRequest, metadata: Metadata): Promise<Empty>;
    GetFriendInformation(request: GenericUsersRequest, metadata: Metadata): Promise<GeneralFriendResponse>;
    UpdateFriendRelationship(request: UpdateFriendRelationshipRequest, metadata: Metadata): Promise<GeneralFriendResponse>;
    UserTrophies(request: GenericUsersRequest, metadata: Metadata): Promise<UserTrophiesResponse>;
    UserAbout(request: UserAboutRequest, metadata: Metadata): Promise<UserAboutResponse>;
    UserWhere(request: UserWhereRequest, metadata: Metadata): Promise<Listing>;
}
//# sourceMappingURL=Users.d.ts.map