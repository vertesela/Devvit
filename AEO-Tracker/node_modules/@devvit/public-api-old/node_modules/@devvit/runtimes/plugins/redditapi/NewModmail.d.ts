import { RedditAPI } from './RedditAPI.js';
import { ApproveConversationResponse, ArchiveConversationResponse, BasicConversationRequest, BasicConversationsRequest, BulkReadConversationsRequest, BulkReadConversationsResponse, ConversationUserData, CreateConversationRequest, CreateConversationResponse, CreateConversationMessageRequest, CreateConversationMessageResponse, Empty, GetConversationRequest, GetConversationsRequest, GetConversationResponse, GetConversationsResponse, HighlightConversationResponse, Metadata, MuteConversationRequest, MuteConversationResponse, NewModmail as _NewModmail, SubredditsResponse, TempBanRequest, TempBanResponse, UnreadCountResponse } from '@devvit/protos';
export declare class NewModmail extends RedditAPI implements _NewModmail {
    BulkReadConversations(request: BulkReadConversationsRequest, metadata: Metadata): Promise<BulkReadConversationsResponse>;
    GetConversations(request: GetConversationsRequest, metadata: Metadata): Promise<GetConversationsResponse>;
    CreateConversation(request: CreateConversationRequest, metadata: Metadata): Promise<CreateConversationResponse>;
    GetConversation(request: GetConversationRequest, metadata: Metadata): Promise<GetConversationResponse>;
    CreateConversationMessage(request: CreateConversationMessageRequest, metadata: Metadata): Promise<CreateConversationMessageResponse>;
    ApproveConversation(request: BasicConversationRequest, metadata: Metadata): Promise<ApproveConversationResponse>;
    ArchiveConversation(request: BasicConversationRequest, metadata: Metadata): Promise<ArchiveConversationResponse>;
    DisapproveConversation(request: BasicConversationRequest, metadata: Metadata): Promise<ApproveConversationResponse>;
    UnhighlightConversation(request: BasicConversationRequest, metadata: Metadata): Promise<HighlightConversationResponse>;
    HighlightConversation(request: BasicConversationRequest, metadata: Metadata): Promise<HighlightConversationResponse>;
    MuteConversation(request: MuteConversationRequest, metadata: Metadata): Promise<MuteConversationResponse>;
    TempBan(request: TempBanRequest, metadata: Metadata): Promise<TempBanResponse>;
    UnarchiveConversation(request: BasicConversationRequest, metadata: Metadata): Promise<ArchiveConversationResponse>;
    Unban(request: BasicConversationRequest, metadata: Metadata): Promise<TempBanResponse>;
    UnmuteConversation(request: BasicConversationRequest, metadata: Metadata): Promise<MuteConversationResponse>;
    UserConversations(request: BasicConversationRequest, metadata: Metadata): Promise<ConversationUserData>;
    Read(request: BasicConversationsRequest, metadata: Metadata): Promise<Empty>;
    Subreddits(request: Empty, metadata: Metadata): Promise<SubredditsResponse>;
    Unread(request: BasicConversationsRequest, metadata: Metadata): Promise<Empty>;
    UnreadCount(request: Empty, metadata: Metadata): Promise<UnreadCountResponse>;
}
//# sourceMappingURL=NewModmail.d.ts.map