import { AboutWhereRequest, BasicSearchRequest, BasicSubredditRequest, BasicWhereRequest, DeleteSrImgRequest, Empty, JsonStatus, Listing, Metadata, SearchRedditNamesResponse, SearchSubredditsResponse, SiteAdminRequest, StickyRequest, StickyResponse, StringValue, SubmitTextResponse, SubredditAboutEditRequest, SubredditAboutEditResponse, SubredditAboutResponse, SubredditAboutRulesResponse, SubredditAboutTrafficResponse, SubredditAutocompleteRequest, SubredditAutocompleteResponse, SubredditPostRequirementsResponse, SubredditGetRemovalReasonsRequest, SubredditGetRemovalReasonsResponse, Subreddits as _Subreddits, SubredditsSearchRequest, SubredditsSearchResponse, SubredditStylesheetRequest, SubscribeRequest, UploadSrImgRequest, UploadSrImgResponse, UserSearchResponse, UsersSearchRequest, SubredditAddRemovalReasonRequest, SubredditAddRemovalReasonResponse } from '@devvit/protos';
import { RedditAPI } from './RedditAPI.js';
export declare class Subreddits extends RedditAPI implements _Subreddits {
    AboutWhere(request: AboutWhereRequest, metadata: Metadata): Promise<Listing>;
    DeleteSrBanner(request: BasicSubredditRequest, metadata: Metadata): Promise<JsonStatus>;
    DeleteSrHeader(request: BasicSubredditRequest, metadata: Metadata): Promise<JsonStatus>;
    DeleteSrIcon(request: BasicSubredditRequest, metadata: Metadata): Promise<JsonStatus>;
    DeleteSrImg(request: DeleteSrImgRequest, metadata: Metadata): Promise<JsonStatus>;
    SearchRedditNames(request: BasicSearchRequest, metadata: Metadata): Promise<SearchRedditNamesResponse>;
    SearchSubreddits(request: BasicSearchRequest, metadata: Metadata): Promise<SearchSubredditsResponse>;
    SiteAdmin(request: SiteAdminRequest, metadata: Metadata): Promise<JsonStatus>;
    SubmitText(request: BasicSubredditRequest, metadata: Metadata): Promise<SubmitTextResponse>;
    SubredditAutocomplete(request: SubredditAutocompleteRequest, metadata: Metadata): Promise<SubredditAutocompleteResponse>;
    SubredditStylesheet(request: SubredditStylesheetRequest, metadata: Metadata): Promise<JsonStatus>;
    Subscribe(request: SubscribeRequest, metadata: Metadata): Promise<Empty>;
    UploadSrImg(request: UploadSrImgRequest, metadata: Metadata): Promise<UploadSrImgResponse>;
    SubredditPostRequirements(request: BasicSubredditRequest, metadata: Metadata): Promise<SubredditPostRequirementsResponse>;
    SubredditAbout(request: BasicSubredditRequest, metadata: Metadata): Promise<SubredditAboutResponse>;
    SubredditAboutEdit(request: SubredditAboutEditRequest, metadata: Metadata): Promise<SubredditAboutEditResponse>;
    SubredditAboutRules(request: BasicSubredditRequest, metadata: Metadata): Promise<SubredditAboutRulesResponse>;
    SubredditAboutTraffic(request: BasicSubredditRequest, metadata: Metadata): Promise<SubredditAboutTrafficResponse>;
    Sidebar(request: BasicSubredditRequest, metadata: Metadata): Promise<StringValue>;
    Sticky(request: StickyRequest, metadata: Metadata): Promise<StickyResponse>;
    SubredditsMineWhere(request: BasicWhereRequest, metadata: Metadata): Promise<Listing>;
    SubredditsSearch(request: SubredditsSearchRequest, metadata: Metadata): Promise<SubredditsSearchResponse>;
    SubredditsWhere(request: BasicWhereRequest, metadata: Metadata): Promise<SubredditsSearchResponse>;
    UsersSearch(request: UsersSearchRequest, metadata: Metadata): Promise<UserSearchResponse>;
    UsersWhere(request: BasicWhereRequest, metadata: Metadata): Promise<SubredditsSearchResponse>;
    SubredditAddRemovalReason(request: SubredditAddRemovalReasonRequest, metadata: Metadata): Promise<SubredditAddRemovalReasonResponse>;
    SubredditGetRemovalReasons(request: SubredditGetRemovalReasonsRequest, metadata: Metadata): Promise<SubredditGetRemovalReasonsResponse>;
}
//# sourceMappingURL=Subreddits.d.ts.map