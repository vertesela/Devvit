import { EnvelopePort } from '../../../common/envelope/EnvelopePort.js';
import { CentralDispatcher } from './CentralDispatcher.js';
/**
 * This is the dispatcher that runs on each worker.  It sends messages from the upstream port
 * to the locally running servers, and from the local servers back upstream.
 *
 * The Worker itself (globalThis) is a directional port so calling postMessage()
 * only forwards to the listener on the Window side.
 *
 * There's a special carveout to make sure bootstrap messages are sent to the bootstrap actor, regardless of url.
 *
 * All workers except for system workers are bootstrapped.
 *
 * The CommonRuntime's CentralDispatcher typically has a hostname like "local"
 * or "node". WorkerDispatcher's are expected to have the same address as the
 * single server they expose. Eg, "supervisor.system.local" or "no-beans.local".
 * This ensures every client and server in the worker is under the actor's
 * namespace. Although the dispatcher itself is an EnvelopeRecipient, they never
 * send or receive envelopes directly so this hostname collision is ok.
 */
export declare class WorkerDispatcher extends CentralDispatcher {
    bindToWorkerPort(port: EnvelopePort): void;
    bindSupervisor(): void;
}
//# sourceMappingURL=WorkerDispatcher.d.ts.map