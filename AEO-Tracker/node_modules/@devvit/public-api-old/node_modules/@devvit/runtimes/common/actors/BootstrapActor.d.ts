import { BootstrapActor as _BootstrapActor, Empty, LinkedBundle, Metadata } from '@devvit/protos';
import { SystemLogger } from '../../lib/loggers/SystemLogger.js';
import { WorkerDispatcher } from '../envelope/dispatcher/WorkerDispatcher.js';
/**
 * Provides the functionality required to load an Actor into the current Worker
 */
export declare class BootstrapActor implements _BootstrapActor {
    #private;
    constructor(dispatcher: WorkerDispatcher, logger: SystemLogger);
    IsResponding(mt: Empty): Promise<Empty>;
    /**
     * Registers this worker as an Actor as defined by bundle
     */
    LoadActor(bundle: LinkedBundle, _metadata: Metadata | undefined): Promise<Empty>;
}
//# sourceMappingURL=BootstrapActor.d.ts.map